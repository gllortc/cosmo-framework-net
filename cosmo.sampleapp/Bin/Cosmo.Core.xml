<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmo.Core</name>
    </assembly>
    <members>
        <member name="T:Cosmo.Communications.CommunicationsException">
            <summary>
            Excepción que se lanza cuando la cuenta de correo electrónico no existe o no está asociada a ninguna cuenta de usuario.
            </summary>
        </member>
        <member name="M:Cosmo.Communications.CommunicationsException.#ctor">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
        </member>
        <member name="M:Cosmo.Communications.CommunicationsException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.Communications.CommunicationsException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Communications.CommunicationsService">
            <summary>
            Implementa el servicio de comunicaciones del workspace.
            </summary>
        </member>
        <member name="M:Cosmo.Communications.CommunicationsService.#ctor(Cosmo.Workspace)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Communications.CommunicationsService"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace"/> que representa el espacio de trabajo actual.</param>
        </member>
        <member name="M:Cosmo.Communications.CommunicationsService.Send(System.Object)">
            <summary>
            Envia un mensaje.
            </summary>
            <param name="message">Una instancia que representa el mensaje a enviar.</param>
        </member>
        <member name="M:Cosmo.Communications.CommunicationsService.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.Communications.CommunicationsService.LoadModules">
            <summary>
            Carga los módulos de comunicaciones.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.CommunicationsService.PrivateMessages">
            <summary>
            Permite acceder al servicio de mensajería privada entre usuarios del workspace.
            </summary>
        </member>
        <member name="T:Cosmo.Communications.ICommunicationsModule">
            <summary>
            Interface que deben implementar todos los módulos de comunicaciones.
            </summary>
        </member>
        <member name="M:Cosmo.Communications.ICommunicationsModule.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Communications.ICommunicationsModule"/>.
            </summary>
            <param name="workspace">Una instancia del workspace actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que contiene  todas las propiedades para instanciar y configurar el módulo.</param>
        </member>
        <member name="M:Cosmo.Communications.ICommunicationsModule.Send(System.Object)">
            <summary>
            Envia el mensaje del tipo indicado por el parámetro <c>MessageQualifiedName</c>.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Cosmo.Communications.ICommunicationsModule.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.ICommunicationsModule.ID">
            <summary>
            Devuelve el nombre (ID) del módulo de comunicaciones.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.ICommunicationsModule.MessageQualifiedName">
            <summary>
            Devuelve el nombre qualificado de la classe que implementa los mensajes que permite enviar el módulo.
            </summary>
        </member>
        <member name="T:Cosmo.Communications.Impl.SmtpMailModuleImpl">
            <summary>
            Implementa un módulo de servicio de correo SMTP usando el cliente nativo de .NET.
            </summary>
        </member>
        <member name="M:Cosmo.Communications.Impl.SmtpMailModuleImpl.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Communications.Impl.SmtpMailModuleImpl"/>.
            </summary>
            <param name="workspace">Una instancia del workspace actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que contiene  todas las propiedades para instanciar y configurar el módulo.</param>
        </member>
        <member name="M:Cosmo.Communications.Impl.SmtpMailModuleImpl.Send(System.Object)">
            <summary>
            Envia un mensaje usando el servidor de correo del workspace.
            </summary>
            <param name="message">Mensaje a enviar.</param>
        </member>
        <member name="M:Cosmo.Communications.Impl.SmtpMailModuleImpl.Send(System.Object[])">
            <summary>
            Envia los mensajes contenidos en un array.
            </summary>
            <param name="messages">Array de mensajes.</param>
        </member>
        <member name="M:Cosmo.Communications.Impl.SmtpMailModuleImpl.Send(System.Collections.Generic.List{System.Object})">
            <summary>
            Envia los mensajes contenidos en un array.
            </summary>
            <param name="messages">Lista de mensajes.</param>
        </member>
        <member name="M:Cosmo.Communications.Impl.SmtpMailModuleImpl.Initialize(Cosmo.Utils.Plugin)">
            <summary>
            Inicializa el servidor de correo electrónico.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.Impl.SmtpMailModuleImpl.MessageQualifiedName">
            <summary>
            Devuelve el nombre de la clase (nombre calificado) admitida como contenedor de mensajes.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.Impl.SmtpMailModuleImpl.Workspace">
            <summary>
            Devuelve o establece el workspace actual.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.Impl.SmtpMailModuleImpl.UseSSL">
            <summary>
            Indica si el servidor usa SSL.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.Impl.SmtpMailModuleImpl.ServerAddress">
            <summary>
            Devuelve o establece la dirección del servidor SMTP.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.Impl.SmtpMailModuleImpl.ServerPort">
            <summary>
            Devuelve o establece el puerto del servidor SMTP.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.Impl.SmtpMailModuleImpl.AccountLogin">
            <summary>
            Devuelve o establece el login del usuario de acceso al servidor SMTP.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.Impl.SmtpMailModuleImpl.AccountPassword">
            <summary>
            Devuelve o establece la contraseña del usuario de acceso al servidor SMTP.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.Impl.SmtpMailModuleImpl.MessageClassName">
            <summary>
            Devuelve o establece la clase (con namespace) de los mensajes que gestiona este módulo.
            </summary>
        </member>
        <member name="T:Cosmo.Communications.Impl.TwitterModuleImpl">
            <summary>
            Implementa un módulo de servicio para envios a una cuenta de Twitter.
            Basado en: https://tweetinvi.codeplex.com
            </summary>
        </member>
        <member name="M:Cosmo.Communications.Impl.TwitterModuleImpl.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Communications.Impl.SmtpMailModuleImpl"/>.
            </summary>
            <param name="workspace">Una instancia del workspace actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que contiene  todas las propiedades para instanciar y configurar el módulo.</param>
        </member>
        <member name="M:Cosmo.Communications.Impl.TwitterModuleImpl.Send(System.Object)">
            <summary>
            Envia un mensaje usando el servidor de correo del workspace.
            </summary>
            <param name="message">Mensaje a enviar.</param>
        </member>
        <member name="M:Cosmo.Communications.Impl.TwitterModuleImpl.Initialize(Cosmo.Utils.Plugin)">
            <summary>
            Inicializa el servidor de correo electrónico.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.Impl.TwitterModuleImpl.MessageQualifiedName">
            <summary>
            Devuelve el nombre de la clase (nombre calificado) admitida como contenedor de mensajes.
            </summary>
        </member>
        <member name="T:Cosmo.Communications.PrivateMessages.PrivateMessagesService">
            <summary>
            Implementa las funciones de mensajería privada como servicio.
            </summary>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessagesService.#ctor(Cosmo.Workspace)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Communications.PrivateMessages.PrivateMessagesService"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace"/> que representa el espacio de trabajo actual.</param>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessagesService.CountUnreadMessages">
            <summary>
            Obtiene el número de mensajes pendientes de leer.
            </summary>
            <returns>Un entero que indica el número de mensajes no leídos.</returns>
        </member>
        <member name="T:Cosmo.Communications.PrivateMessages.PrivateMessageThread">
            <summary>
            Representa un hilo de mensajes privados entre dos usuarios.
            </summary>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageThread.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Communications.PrivateMessages.PrivateMessageThread"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageThread.AddMostRecent(Cosmo.Communications.PrivateMessages.PrivateMessage)">
            <summary>
            Agrega un mensaje al thread siempre que no sea del propio autor.
            </summary>
            <param name="message">Una instancia de <see cref="T:Cosmo.Communications.PrivateMessages.PrivateMessage"/> que representa el mensaje privado a agregar al thread.</param>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageThread.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessageThread.RemoteUserId">
            <summary>
            Devuelve o establece el identificador de usuario remoto.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessageThread.RemoteUser">
            <summary>
            Devuelve o establece el usuario remoto con el que se establece la conversación.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessageThread.HaveUnreadMessages">
            <summary>
            Indica si el hilo contiene elementos no leidos.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessageThread.LastMessagesDate">
            <summary>
            Devuelve o establece la fecha del último mensaje enviado al hilo.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessageThread.Messages">
            <summary>
            Devuelve o establece la lista de mensajes privados que componen el hilo.
            </summary>
        </member>
        <member name="T:Cosmo.Data.Lists.IDataList">
            <summary>
            Declara la estructura que deben implementar los proveedores de listas de datos dinámicas.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Lists.IDataList.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.Lists.IDataList"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="P:Cosmo.Data.Lists.IDataList.Workspace"/> que representa el espacio de trabajo actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que contiene los datos del módulo y su configuración.</param>
        </member>
        <member name="M:Cosmo.Data.Lists.IDataList.GetValueByKey(System.String)">
            <summary>
            Obtiene el valor asociado a una determinada clave.
            </summary>
            <param name="key">Clave para la que se desea obtener el valor.</param>
            <returns>Una cadena que contiene el valor asociado a la clave proporcionada.</returns>
        </member>
        <member name="P:Cosmo.Data.Lists.IDataList.Workspace">
            <summary>
            Devuelve el <see cref="P:Cosmo.Data.Lists.IDataList.Workspace"/> actual.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Lists.IDataList.ID">
            <summary>
            Devuelve o establece el identificador único de la lista.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Lists.IDataList.DefaultValue">
            <summary>
            Devuelve o establece el valor por defecto que debe aparecer seleccionado en la listas.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Lists.IDataList.Values">
            <summary>
            Devuelve o establece la lista de valores que contiene la lista.
            </summary>
        </member>
        <member name="T:Cosmo.Data.Lists.Impl.SqlDataListImpl">
            <summary>
            Implementa una lista de datos que se puede usar para rellenar campso de lista, etc.
            </summary>
        </member>
        <member name="F:Cosmo.Data.Lists.Impl.SqlDataListImpl.LABEL_VALUES_SEPARATOR">
            <summary>Define el separador de los valores múltiples en las etiquetas de cada valor.</summary>
        </member>
        <member name="M:Cosmo.Data.Lists.Impl.SqlDataListImpl.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.Lists.Impl.SqlDataListImpl"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace"/> que representa el espacio de trabajo actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que contiene los datos del módulo y su configuración.</param>
        </member>
        <member name="M:Cosmo.Data.Lists.Impl.SqlDataListImpl.GetValueByKey(System.String)">
            <summary>
            Obtiene el valor asociado a una determinada clave.
            </summary>
            <param name="key">Clave para la que se desea obtener el valor.</param>
            <returns>Una cadena que contiene el valor asociado a la clave proporcionada.</returns>
        </member>
        <member name="M:Cosmo.Data.Lists.Impl.SqlDataListImpl.LoadData">
            <summary>
            Carga los valores desde la base de datos.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Lists.Impl.SqlDataListImpl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Lists.Impl.SqlDataListImpl.Values">
            <summary>
            Devuelve o establece la lista de valores que contiene la lista.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Lists.Impl.SqlDataListImpl.DataModuleID">
            <summary>
            Devuelve o establece el identificador único del <see cref="T:Cosmo.Data.Connection.IDataModule"/> que se usará para obtener los datos de una lista dinámica.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Lists.Impl.SqlDataListImpl.SqlQuery">
            <summary>
            Devuelve o establece la senténcia SQL que usará una lista dinámica para obtener los datos.
            </summary>
            <remarks>
            El primer campo devuelto en la consulta corresponde al valor y el resto a la/s etiqueta/s.
            </remarks>
        </member>
        <member name="T:Cosmo.Data.Lists.Impl.StaticDataListImpl">
            <summary>
            Implementa un proveedor de listas de datos estáticas.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Lists.Impl.StaticDataListImpl.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.Lists.Impl.StaticDataListImpl"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace"/> que representa el espacio de trabajo actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que contiene los datos del módulo y su configuración.</param>
        </member>
        <member name="M:Cosmo.Data.Lists.Impl.StaticDataListImpl.GetValueByKey(System.String)">
            <summary>
            Obtiene el valor asociado a una determinada clave.
            </summary>
            <param name="key">Clave para la que se desea obtener el valor.</param>
            <returns>Una cadena que contiene el valor asociado a la clave proporcionada.</returns>
        </member>
        <member name="M:Cosmo.Data.Lists.Impl.StaticDataListImpl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Lists.Impl.StaticDataListImpl.LoadData(Cosmo.Utils.Plugin)">
            <summary>
            Carga los valores de la lista desde la configuración del módulo.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Lists.Impl.StaticDataListImpl.Values">
            <summary>
            Devuelve o establece la lista de valores que contiene la lista.
            </summary>
        </member>
        <member name="T:Cosmo.Data.ORM.ValidInteger">
            <summary>
            Implementa un mapeo de campo de formulario ORM.
            </summary>
        </member>
        <member name="M:Cosmo.Data.ORM.ValidInteger.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.ORM.ValidInteger"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Data.ORM.ValidInteger.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="T:Cosmo.Data.ORM.OrmException">
            <summary>
            Excepción de error en procesos de modelado ORM.
            </summary>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmException.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.ORM.OrmException"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.ORM.OrmException"/>.
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.ORM.OrmException"/>.
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Data.ORM.MappingFieldGroup">
            <summary>
            Implementa un mapeo de campo de formulario ORM.
            </summary>
        </member>
        <member name="M:Cosmo.Data.ORM.MappingFieldGroup.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.ORM.MappingField"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Data.ORM.MappingFieldGroup.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="T:Cosmo.Data.ORM.MappingDataType">
            <summary>
            Determina el tipo de dato de un campo de mapeo.
            </summary>
        </member>
        <member name="F:Cosmo.Data.ORM.MappingDataType.String">
            <summary>String. Cadena de texto simple.</summary>
        </member>
        <member name="F:Cosmo.Data.ORM.MappingDataType.MultilineString">
            <summary>String. Cadena de texto simple con múltiples líneas.</summary>
        </member>
        <member name="F:Cosmo.Data.ORM.MappingDataType.Integer">
            <summary>Número entero.</summary>
        </member>
        <member name="F:Cosmo.Data.ORM.MappingDataType.Decimal">
            <summary>Número decimal.</summary>
        </member>
        <member name="F:Cosmo.Data.ORM.MappingDataType.Mail">
            <summary>Correo electrónico.</summary>
        </member>
        <member name="F:Cosmo.Data.ORM.MappingDataType.Login">
            <summary>Nombre de usuario.</summary>
        </member>
        <member name="F:Cosmo.Data.ORM.MappingDataType.Date">
            <summary>Fecha.</summary>
        </member>
        <member name="F:Cosmo.Data.ORM.MappingDataType.Boolean">
            <summary>Booleano (Sí/No).</summary>
        </member>
        <member name="F:Cosmo.Data.ORM.MappingDataType.Url">
            <summary>Dirección URL.</summary>
        </member>
        <member name="F:Cosmo.Data.ORM.MappingDataType.Password">
            <summary>Contraseña.</summary>
        </member>
        <member name="F:Cosmo.Data.ORM.MappingDataType.Hidden">
            <summary>Campo oculto (no editable).</summary>
        </member>
        <member name="T:Cosmo.Data.ORM.MappingField">
            <summary>
            Implementa un mapeo de campo de formulario ORM.
            </summary>
        </member>
        <member name="M:Cosmo.Data.ORM.MappingField.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.ORM.MappingField"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Data.ORM.MappingField.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.Data.ORM.MappingField.IsPrimaryKey">
            <summary>
            Indica si el campo es índice de la tabla.
            </summary>
        </member>
        <member name="P:Cosmo.Data.ORM.MappingField.FieldName">
            <summary>
            Indica el nombre del campo (propiedad <em>name</em> del DOM).
            </summary>
        </member>
        <member name="P:Cosmo.Data.ORM.MappingField.Label">
            <summary>
            Devuelve o establece la etiqueta visible que aparecerá junto al campo.
            </summary>
        </member>
        <member name="P:Cosmo.Data.ORM.MappingField.GroupID">
            <summary>
            Devuelve o establece el identificador del grupo de controles al que debe agregarse el campo.
            </summary>
            <remarks>
            Si no se establece, el control será representado al inicio del formulario fuera de los 
            grupos de controles.
            </remarks>
        </member>
        <member name="P:Cosmo.Data.ORM.MappingField.DataType">
            <summary>
            Devuelve o establece el tipo de datos que contiene el campo.
            </summary>
        </member>
        <member name="P:Cosmo.Data.ORM.MappingField.DataListID">
            <summary>
            Devuelve o establece el identificador de la lista que rellena la lista de posibles 
            valores del control.
            </summary>
            <remarks>
            Sólo aplicable a campos de tipo lista.
            </remarks>
        </member>
        <member name="P:Cosmo.Data.ORM.MappingField.Required">
            <summary>
            Indica si un campo es obligatorio.
            </summary>
        </member>
        <member name="P:Cosmo.Data.ORM.MappingField.RewriteRequired">
            <summary>
            Indica si el contenido del campo se pedirá dos veces para evitar errores de introducción.
            </summary>
            <remarks>
            Sólo aplicable en campos de tipo eMail o password.
            </remarks>
        </member>
        <member name="P:Cosmo.Data.ORM.MappingField.ManualSet">
            <summary>
            Indica que el campo se establece manualmente justo antes de realizar una acción y no debe
            entrar en las validaciones ni aparecer como campo oculto.
            </summary>
        </member>
        <member name="T:Cosmo.Data.ORM.MappingObject">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.ORM.MappingObject"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Data.ORM.MappingObject.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.ORM.MappingObject"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Data.ORM.MappingObject.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.Data.ORM.MappingObject.Caption">
            <summary>
            Devuelve o establece el título del formulario.
            </summary>
        </member>
        <member name="P:Cosmo.Data.ORM.MappingObject.CaptionIcon">
            <summary>
            Devuelve o establece el icono que aparece junto al título del formulario.
            </summary>
        </member>
        <member name="P:Cosmo.Data.ORM.MappingObject.Description">
            <summary>
            Devuelve o establece la descripción del formulario.
            </summary>
        </member>
        <member name="P:Cosmo.Data.ORM.MappingObject.DatabaseTableName">
            <summary>
            Devuelve o establece el nombre de la tabla de datos dónde se almacenan los objetos.
            </summary>
        </member>
        <member name="P:Cosmo.Data.ORM.MappingObject.FormStyle">
            <summary>
            Devuelve o establece el estilo de formulario que se generará.
            </summary>
        </member>
        <member name="T:Cosmo.Data.ORM.OrmEngine">
            <summary>
            Implementa el motor ORM de Cosmo.
            </summary>
        </member>
        <member name="F:Cosmo.Data.ORM.OrmEngine.TAG_WORKSPACE_NAME">
            <summary>TAG para incluir el nombre del workspace</summary>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmEngine.#ctor">
            <summary>
            Gets a new instance of <see cref="T:Cosmo.Data.ORM.OrmEngine"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmEngine.ProcessForm(System.Object,Cosmo.UI.Controls.FormControl,Cosmo.Net.Url)">
            <summary>
            Inicializa una determinada instancia con los datos de un formulario. Si la validación de los datos
            falla marca los campos como error de datos para su posterior representación.
            </summary>
            <param name="obj">Una instancia del tipo que se desea rellenar a partir de los datos recibidos desde el formulario.</param>
            <param name="form">Una instancia de <see cref="T:Cosmo.UI.Controls.FormControl"/> que contiene el formulario necesario para recoger los datos de la instancia.</param>
            <param name="parameters">Una instancia de <see cref="T:Cosmo.Net.Url"/> que contiene los datos proporcionados por el usuario en el formulario.</param>
            <returns><c>true</c> si la validación del formulario es correcta o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmEngine.GetObjectData(System.Object,Cosmo.Net.Url)">
            <summary>
            Obtiene los valores procedentes de un formulario y los establece en una instancia.
            </summary>
            <param name="obj">Instancia a rellenar.</param>
            <param name="parameters">Parámetros recibidos del cliente.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmEngine.CreateForm(Cosmo.UI.View,System.Object,System.Boolean)">
            <summary>
            Genera el formulario correspondiente a un determinado objeto anotado mediante Cosmo ORM Annotations.
            </summary>
            <param name="parentView">Contenedor de destino del formulario.</param>
            <param name="instance">Instancia del objeto para el que se desea crear un formulario.</param>
            <param name="enableHumanCheck">Habilita un campo <em>CAPTCHA</em> para impedir envios automatizados en formularios de carácter público.</param>
            <returns>Una instancia de <see cref="T:Cosmo.UI.Controls.FormControl"/> que representa el formulario correspondiente al objeto.</returns>
            <remarks>
            Los campos del formulario tomarán como valor el que se obtenga de las propiedades de la instancia.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmEngine.CreateForm(Cosmo.UI.View,System.Type,System.Boolean)">
            <summary>
            Genera el formulario correspondiente a un determinado objeto anotado mediante Cosmo ORM Annotations.
            </summary>
            <param name="parentView">Contenedor de destino del formulario.</param>
            <param name="type">Tipo correspondiente al objeto para el qual se desea representar el formulario.</param>
            <param name="enableHumanCheck">Habilita un campo <em>CAPTCHA</em> para impedir envios automatizados en formularios de carácter público.</param>
            <returns>Una instancia de <see cref="T:Cosmo.UI.Controls.FormControl"/> que representa el formulario correspondiente al objeto.</returns>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmEngine.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmEngine.AddGroupFields(Cosmo.Data.ORM.MappingFieldGroup,Cosmo.UI.Controls.FormControl,System.Type)">
            <summary>
            Agrega campos mapeados al formulario.
            </summary>
            <param name="group">
            Una instancia de <see cref="T:Cosmo.Data.ORM.MappingFieldGroup"/> que indica el grupo de controles dónde agregar los campos. 
            Si es <c>null</c> se agregarán desagrupados al principio del formulario.
            </param>
            <param name="modal">Formulario dónde se agregarán los controles.</param>
            <param name="type">Tipo de objeto para el que se está creando el formulario.</param>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmEngine.CountGroupFields(Cosmo.Data.ORM.MappingFieldGroup,System.Type)">
            <summary>
            Devuelve el número de campos de un determinado grupo.
            </summary>
            <param name="group">
            Una instancia de <see cref="T:Cosmo.Data.ORM.MappingFieldGroup"/> que indica el grupo para el que se desea 
            obtener el número de campos. Si es <c>null</c> se contabilizarán los campos desagrupados.
            </param>
            <param name="type">Tipo de objeto para el que se está creando el formulario.</param>
            <returns>Un número entero que indica el número de campos en un determinado grupo.</returns>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmEngine.AddHumanCheck(Cosmo.UI.Controls.FormControl)">
            <summary>
            Agrega una verificación de seguridad basada en <em>CAPTCHA</em>.
            </summary>
            <param name="modal">La instancia de <see cref="T:Cosmo.UI.Controls.FormControl"/> dónde se agregará el control.</param>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmEngine.CreateField(Cosmo.UI.Controls.FormControl,Cosmo.Data.ORM.MappingField)">
            <summary>
            Genera un campo a partir de una propiedad mapeada.
            </summary>
            <param name="modal">La instancia de <see cref="T:Cosmo.UI.Controls.FormControl"/> dónde se agregará el nuevo campo.</param>
            <param name="field">Campo mapeado.</param>
            <returns>Un control que representa el campo generado.</returns>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmEngine.GetMappingObject(System.Type)">
            <summary>
            Obtiene el <see cref="T:Cosmo.Data.ORM.MappingObject"/> de una clase determinada.
            </summary>
            <param name="type">Tipo para el que se desea obtener la información ORM.</param>
            <returns>La instancia de <see cref="T:Cosmo.Data.ORM.MappingObject"/> solicitada o <c>null</c> si la clase no contiene la anotación.</returns>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmEngine.GetMappingField(System.Reflection.PropertyInfo)">
            <summary>
            Obtiene el <see cref="T:Cosmo.Data.ORM.MappingField"/> de una determinada propiedad.
            </summary>
            <param name="property">Propiedad para la que se desea obtener la información ORM.</param>
            <returns>La instancia de <see cref="T:Cosmo.Data.ORM.MappingField"/> solicitada o <c>null</c> si la propiedad no contiene la anotación.</returns>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmEngine.GetFieldGroups(System.Type)">
            <summary>
            Obtiene una lista de los grupos de controles que tiene el formulario.
            </summary>
            <param name="type">Tipo correspondiente al objeto para el qual se desea representar el formulario.</param>
            <returns>Una lista de instancias de <see cref="T:Cosmo.Data.ORM.MappingFieldGroup"/>.</returns>
        </member>
        <member name="M:Cosmo.Data.ORM.OrmEngine.ConvertProperty(System.Reflection.PropertyInfo,System.String)">
            <summary>
            Convierte un valor obtenido como parámetro de llamada (string) al tipo indicado por una propiedad.
            </summary>
        </member>
        <member name="P:Cosmo.Data.ORM.OrmEngine.DiscardFields">
            <summary>
            Lista de campos que no se deben tener en cuenta a la hora de generar y/o procesar los formularios.
            </summary>
        </member>
        <member name="P:Cosmo.Data.ORM.OrmEngine.FormStyle">
            <summary>
            Devuelve o establece la forma de representar los grupos de controles en los formularios generados.
            </summary>
        </member>
        <member name="T:Cosmo.Data.ORM.OrmEngine.OrmFormStyle">
            <summary>
            Determina el estilo de generación de formularios para el objeto.
            </summary>
        </member>
        <member name="F:Cosmo.Data.ORM.OrmEngine.OrmFormStyle.Standard">
            <summary>Formulario estándar, colocando todos los grupos de forma consecutiva.</summary>
        </member>
        <member name="F:Cosmo.Data.ORM.OrmEngine.OrmFormStyle.Tabbed">
            <summary>Formulario tabular, colocando todos los grupos en pestañas.</summary>
        </member>
        <member name="T:Cosmo.Data.ORM.OrmEngine.MappingFieldGroupComparator">
            <summary>
            Comparador que permite ordenar alfabéticamente los grupos de controles.
            </summary>
        </member>
        <member name="T:Cosmo.FileSystem.WorkspaceFolders">
            <summary>
            Carpetas de un workspace
            </summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ClientRoot">
            <summary>Directorio raíz de instalación en las estaciones cliente.</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerRoot">
            <summary>Carpeta raíz del servidor web.</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerAppBrowsers">
            <summary>Carpeta \App_Browsers (.NET).</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerAppCode">
            <summary>Carpeta \App_Code (.NET).</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerAppData">
            <summary>Carpeta \App_Data (.NET).</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerAppLocalResources">
            <summary>Carpeta \App_LocalResources (.NET).</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerAppGlobalResources">
            <summary>Carpeta \App_GlobalResources (.NET).</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerAppThemes">
            <summary>Carpeta \App_Themes (.NET).</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerAppWebReferences">
            <summary>Carpeta \App_WebReferences (.NET).</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerBin">
            <summary>Carpeta \bin (.NET).</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerImages">
            <summary>Carpeta \images usada para poner las imágenes que no forman parte de ninguna plantilla.</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerInclude">
            <summary>Carpeta \includes.</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerWorkspaceFileStorageRoot">
            <summary>Carpeta raíz del sistema de archivos del workspace (usualmente \docs).</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerTemporaryStorage">
            <summary>Carpeta para ubicar archivos temporales.</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerTemplatesPrivate">
            <summary>Carpeta para una plantilla de presentación \webserver\Templates\%TEMPLATE_ID%.</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerTemplatesShared">
            <summary>Carpeta de recursos compartidos para plantillas de presentación.</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.ServerTemplatesRoot">
            <summary>Carpeta raíz para las plantillas (en teoria, nunca deberá haber ningún archivo aquí).</summary>
        </member>
        <member name="F:Cosmo.FileSystem.WorkspaceFolders.Unknown">
            <summary>
            Carpeta indfefinida
            </summary>
        </member>
        <member name="T:Cosmo.FileSystem.IFileSystemService">
            <summary>
            Declaración de la clase que deben implementar todos los módulos del servicio FileSystem.
            </summary>
        </member>
        <member name="M:Cosmo.FileSystem.IFileSystemService.#ctor(Cosmo.Workspace)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.FileSystem.IFileSystemService"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="P:Cosmo.FileSystem.IFileSystemService.Workspace"/>.</param>
        </member>
        <member name="M:Cosmo.FileSystem.IFileSystemService.GetServicePath(System.String)">
            <summary>
            Obtiene la ruta física a la carpeta de un determinado servicio.
            </summary>
            <param name="serviceFolderName">Identificador del objeto.</param>
            <returns>La ruta física en el servidor web a la carpeta solicitada.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.IFileSystemService.GetFilePath(System.String,System.String)">
            <summary>
            Obtiene la ruta física a un archivo asociado a un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <param name="filename">Nombre del archivo (sin ruta).</param>
            <returns>La ruta al archivo solicitado.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.IFileSystemService.GetFileURL(System.String,System.String)">
            <summary>
            Obtiene la URL a un archivo asociado a un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <param name="filename">Nombre del archivo (sin ruta).</param>
            <returns>La URL al archivo solicitado.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.IFileSystemService.GetFileURL(System.String,System.String,System.Boolean)">
            <summary>
            Obtiene la URL a un archivo asociado a un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <param name="filename">Nombre del archivo (sin ruta).</param>
            <param name="relativeUrl">Indica si se desea obtener una URL relativa.</param>
            <returns>La URL al archivo solicitado.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.IFileSystemService.GetObjectFolder(System.String)">
            <summary>
            Obtiene la ruta física a la carpeta contenedora de un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <returns>La ruta al directorio privado de un objeto.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.IFileSystemService.GetObjectFiles(System.String)">
            <summary>
            Obtiene una lista con los archivos asociados a un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <returns>Una lista de instancias de <see cref="T:System.IO.FileInfo"/> que representan los archivos asociados al objeto.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.IFileSystemService.DeleteFile(System.String,System.String,System.Boolean)">
            <summary>
            Delete a file associated to an object.
            </summary>
            <param name="objectId">Object unique identifier.</param>
            <param name="filename">File name without path.</param>
            <param name="throwError">Indicates if the method must thrown an error if the file don't exist or if it can be deleted.</param>
        </member>
        <member name="M:Cosmo.FileSystem.IFileSystemService.GetFolderName(Cosmo.FileSystem.WorkspaceFolders)">
            <summary>
            Devuelve el nombre de una carpeta Cosmo
            </summary>
            <param name="folder">Identificador de la carpeta</param>
            <returns>Una cadena que representa el nombre de la carpeta</returns>
        </member>
        <member name="P:Cosmo.FileSystem.IFileSystemService.Workspace">
            <summary>
            Devuelve la instancia de <see cref="P:Cosmo.FileSystem.IFileSystemService.Workspace"/> usada en el módulo.
            </summary>
        </member>
        <member name="P:Cosmo.FileSystem.IFileSystemService.ApplicationPath">
            <summary>
            Devuelve la ruta raíz de la aplicación.
            </summary>
        </member>
        <member name="T:Cosmo.FileSystem.Impl.CosmoFileSystemImpl">
            <summary>
            Implementa una clase para la gestión del sistema de archivos del workspace.
            </summary>
        </member>
        <member name="M:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="P:Cosmo.Workspace.FileSystemService"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace"/>.</param>
            <param name="plugin">Contiene toda la información de configuración del módulo.</param>
        </member>
        <member name="M:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.FileExist(System.String,System.String[])">
            <summary>
            Averigua si existe un determinado archivo.
            </summary>
            <param name="filename">Nombre del archivo sin ruta.</param>
            <param name="folders">Carpetas de acceso.</param>
            <returns><c>True</c> si existe el archivo o <c>False</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.FileInformation(System.String,System.String[])">
            <summary>
            Obtiene las propiedades de un archivo.
            </summary>
            <param name="filename">Nombre del archivo sin ruta.</param>
            <param name="folders">Carpetas de acceso.</param>
            <returns>Una instancia de <see cref="T:System.IO.FileInfo"/> que contiene las priopiedades del archivo.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.FileCopy(System.String)">
            <summary>
            Crea una carpeta en el sistema de archivos del workspace.
            </summary>
            <param name="filename">Archivo que se desea copiar en el sistema de archivos.</param>
            <remarks>
            Si la carpeta existe no hace nada.
            </remarks>
        </member>
        <member name="M:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.FileCopy(System.String,System.String)">
            <summary>
            Crea una carpeta en el sistema de archivos del workspace.
            </summary>
            <param name="filename">Archivo que se desea copiar al sistema de archivos.</param>
            <param name="destinationFolderName">Nombre de la carpeta dónde se desea incorporar el archivo.</param>
            <remarks>
            Si la carpeta existe no hace nada.
            </remarks>
        </member>
        <member name="M:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.DirectoryCreate(System.String)">
            <summary>
            Crea una carpeta en el sistema de archivos del workspace.
            </summary>
            <param name="name">Nombre de la carpeta a crear.</param>
            <remarks>
            Si la carpeta existe no hace nada.
            </remarks>
        </member>
        <member name="M:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.GetTemporaryFolder">
            <summary>
            Devuelve una instancia de <see cref="T:System.IO.DirectoryInfo"/> que representa la carpeta temporal.
            </summary>
        </member>
        <member name="M:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.GetServicePath(System.String)">
            <summary>
            Obtiene la ruta física a la carpeta de un determinado servicio.
            </summary>
            <param name="serviceFolderName">Identificador del objeto.</param>
            <returns>La ruta física en el servidor web a la carpeta solicitada.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.GetFilePath(System.String,System.String)">
            <summary>
            Obtiene la ruta física a un archivo asociado a un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <param name="filename">Nombre del archivo (sin ruta).</param>
            <returns>La ruta al archivo solicitado.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.GetFileURL(System.String,System.String)">
            <summary>
            Obtiene la URL a un archivo asociado a un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <param name="filename">Nombre del archivo (sin ruta).</param>
            <returns>La URL al archivo solicitado.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.GetFileURL(System.String,System.String,System.Boolean)">
            <summary>
            Obtiene la URL a un archivo asociado a un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <param name="filename">Nombre del archivo (sin ruta).</param>
            <param name="relativeUrl">Indica si se desea obtener una URL relativa.</param>
            <returns>La URL al archivo solicitado.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.GetObjectFolder(System.String)">
            <summary>
            Obtiene la ruta física a la carpeta contenedora de un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <returns>La ruta al directorio privado de un objeto.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.GetObjectFiles(System.String)">
            <summary>
            Obtiene una lista con los archivos asociados a un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <returns>Una lista de instancias de <see cref="T:System.IO.FileInfo"/> que representan los archivos asociados al objeto.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.DeleteFile(System.String,System.String,System.Boolean)">
            <summary>
            Delete a file associated to an object.
            </summary>
            <param name="objectId">Object unique identifier.</param>
            <param name="filename">File name without path.</param>
            <param name="throwError">Indicates if the method must thrown an error if the file don't exist or if it can be deleted.</param>
        </member>
        <member name="P:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.RootFolderName">
            <summary>
            Devuelve o establece el nombre de la carpeta que contiene el sistema de archivos del workspace.
            </summary>
            <remarks>
            Usualmente suele ser <c>docs</c>.
            El sistema de archivos permite a los servicios gestionar archivos (documentos, imágenes, etc) que contengan datos de los mismos.
            </remarks>
        </member>
        <member name="P:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.RootUrl">
            <summary>
            Devuelve la URL al sistema de archivos de datos del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.ApplicationPath">
            <summary>
            Devuelve la ruta raíz de la aplicación.
            </summary>
        </member>
        <member name="P:Cosmo.FileSystem.Impl.CosmoFileSystemImpl.RootPath">
            <summary>
            Devuelve la ruta al sistema de archivos de datos del workspace (usualmente [WebServerPath]/docs).
            </summary>
        </member>
        <member name="T:Cosmo.Net.Mail">
            <summary>
            Implementa una clase helper para tratar direcciones de correo electrónico.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.Obfuscate(System.String)">
            <summary>
            Permite codificar una dirección de _message con los equivalentes de los códigos numéricos de los carácteres.
            </summary>
            <param name="mail">Dirección de correo electrónico.</param>
            <returns>La dirección de correo electrónico (no enlace) codificado.</returns>
        </member>
        <member name="M:Cosmo.Net.Mail.Obfuscate(System.String,System.String)">
            <summary>
            Permite codificar una dirección de _message con los equivalentes de los códigos numéricos de los carácteres.
            </summary>
            <param name="mail">Dirección de correo electrónico.</param>
            <param name="linkText">Texto que aparece en en enlace.</param>
            <returns>El enlace al correo electrónico codificado.</returns>
        </member>
        <member name="M:Cosmo.Net.Mail.IsValidAddress(System.String)">
            <summary>
            Devuelve un valor que indica si una dirección es válida
            </summary>
            <param name="address">Dirección de correo electrónico a verificar</param>
            <returns>Un valor que indica si una dirección es válida</returns>
        </member>
        <member name="T:Cosmo.Net.UrlRoute">
            <summary>
            Implementa un gestor de rutas URL <em>friendly</em>.
            Concretamente esta clase permite recuperar de forma transparente los datos de una URL 
            con el siguiente formato:
            
            [ServerAddress]/ServiceName/Action/ID
            
            Por ejemplo:
            www.myserver.com/Photos/ByUser/12
            
            ...dónde:
            Action -> <c>ByUser</c>
            ID -> <c>12</c>
            </summary>
        </member>
        <member name="M:Cosmo.Net.UrlRoute.#ctor(System.Web.HttpRequest)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Net.UrlRoute"/>.
            </summary>
            <param name="request">El contexto de la llamada.</param>
        </member>
        <member name="M:Cosmo.Net.UrlRoute.Initiazlize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.Net.UrlRoute.GetService">
            <summary>
            Devuelve el nombre del servicio.
            </summary>
        </member>
        <member name="P:Cosmo.Net.UrlRoute.GetAction">
            <summary>
            Devuelve el nombre de la acción.
            </summary>
        </member>
        <member name="P:Cosmo.Net.UrlRoute.GetStringID">
            <summary>
            Devuelve el identificador de la acción (en formato <em>string</em>).
            </summary>
        </member>
        <member name="P:Cosmo.Net.UrlRoute.GetIntegerID">
            <summary>
            Devuelve el identificador de la acción (en formato <em>int</em>).
            </summary>
        </member>
        <member name="T:Cosmo.REST.RestHandler">
            <summary>
            Implementa una clase base para la creación de servicios API REST de Cosmo.
            </summary>
        </member>
        <member name="M:Cosmo.REST.RestHandler.ServiceRequest(System.String)">
            <summary>
            Método invocado al recibir una petición.
            </summary>
            <param name="command">Comando a ejecutar pasado mediante el parámetro definido mediante <see cref="F:Cosmo.Workspace.PARAM_COMMAND"/>.</param>
        </member>
        <member name="M:Cosmo.REST.RestHandler.InvokeRestMethod(System.Web.HttpContext)">
            <summary>
            Invoke the requested REST method.
            </summary>
            <param name="context">Call context.</param>
        </member>
        <member name="M:Cosmo.REST.RestHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Evento que se lanza al recibir una petición.
            </summary>
            <param name="context">Contexto del servidor en el momento de la llamada.</param>
        </member>
        <member name="M:Cosmo.REST.RestHandler.SendResponse(Cosmo.UI.Scripting.AjaxResponse)">
            <summary>
            Envia una respuesta al cliente.
            </summary>
            <param name="response">Una instancia de <see cref="T:Cosmo.UI.Scripting.AjaxResponse"/> que describe si la 
            acción ha tenido éxito o no.</param>
        </member>
        <member name="M:Cosmo.REST.RestHandler.CheckSecurityConstrains(System.Reflection.MethodInfo)">
            <summary>
            Check for security attributes
            </summary>
        </member>
        <member name="P:Cosmo.REST.RestHandler.Workspace">
            <summary>
            Devuelve el workspace actual.
            </summary>
        </member>
        <member name="P:Cosmo.REST.RestHandler.Request">
            <summary>
            Devuelve la instancia que contiene el contexto de la petición.
            </summary>
        </member>
        <member name="P:Cosmo.REST.RestHandler.Session">
            <summary>
            Devuelve la instancia que contiene la sesión de usuario en el servidor.
            </summary>
        </member>
        <member name="P:Cosmo.REST.RestHandler.Response">
            <summary>
            Devuelve la instancia que contiene el contexto de la respuesta al cliente.
            </summary>
        </member>
        <member name="P:Cosmo.REST.RestHandler.IsAuthenticated">
            <summary>
            Indica si existe un usuario autenticado.
            </summary>
            <returns><c>true</c> si existe una sesión autenticada o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="P:Cosmo.REST.RestHandler.Parameters">
            <summary>
            Devuelve la colección de parámetros de llamada (o de un formulario) que ha recibido la página.
            </summary>
        </member>
        <member name="P:Cosmo.REST.RestHandler.IsReusable">
            <summary>
            Indica al servidor web si la instancia es rehusable.
            </summary>
        </member>
        <member name="T:Cosmo.REST.RestHandler.RestCallResponse">
            <summary>
            Tipos de respuesta a llamadas a métodos REST (que no devuelvan valores).
            </summary>
        </member>
        <member name="F:Cosmo.REST.RestHandler.RestCallResponse.Successful">
            <summary>Indica que la llamada a un método REST ha tenido éxito.</summary>
        </member>
        <member name="F:Cosmo.REST.RestHandler.RestCallResponse.Fail">
            <summary>Indica que la llamada a un método REST ha fallado.</summary>
        </member>
        <member name="T:Cosmo.REST.CommunicationsRestHandler">
            <summary>
            Handler que implementa los servicios REST correspondientes al servicio UI de Cosmo.
            </summary>
        </member>
        <member name="F:Cosmo.REST.CommunicationsRestHandler.PARAMETER_TEMPLATE_NAME">
            <summary>parámetro de llamada: Nombre de archivo.</summary>
        </member>
        <member name="F:Cosmo.REST.CommunicationsRestHandler.COMMAND_SEND">
            <summary>Identificador del parámetro QueryString para el comando SEND.</summary>
        </member>
        <member name="F:Cosmo.REST.CommunicationsRestHandler.COMMAND_READ">
            <summary>Identificador del parámetro QueryString para el comando READ.</summary>
        </member>
        <member name="F:Cosmo.REST.CommunicationsRestHandler.COMMAND_DELETE">
            <summary>Identificador del parámetro QueryString para el comando DELETE.</summary>
        </member>
        <member name="F:Cosmo.REST.CommunicationsRestHandler.COMMAND_GETTHREADMSGS">
            <summary>ID del comando GetThreadMessages.</summary>
        </member>
        <member name="M:Cosmo.REST.CommunicationsRestHandler.ServiceRequest(System.String)">
            <summary>
            Método invocado al recibir una petición.
            </summary>
            <param name="command">Comando a ejecutar pasado mediante el parámetro definido mediante <see cref="F:Cosmo.Workspace.PARAM_COMMAND"/>.</param>
        </member>
        <member name="M:Cosmo.REST.CommunicationsRestHandler.PrivateMessageSend">
            <summary>
            Envia un mensaje privado.
            </summary>
        </member>
        <member name="M:Cosmo.REST.CommunicationsRestHandler.MessageRead">
            <summary>
            Muestra un mensaje privado.
            </summary>
        </member>
        <member name="M:Cosmo.REST.CommunicationsRestHandler.PrivateMessageDelete">
            <summary>
            Elimina un mensaje privado.
            </summary>
        </member>
        <member name="M:Cosmo.REST.CommunicationsRestHandler.PrivateMessageGetThreadMessages">
            <summary>
            Devuelve el código XHTML necesario para representar los mensajes de un determinado thread.
            </summary>
        </member>
        <member name="T:Cosmo.REST.RestMethod">
            <summary>
            Implements a definition of a REST method for Cosmo REST handlers.
            </summary>
        </member>
        <member name="P:Cosmo.REST.RestMethod.CommandName">
            <summary>
            Returns or sets the command name associated to a class method.
            </summary>
            <remarks>
            This name is used to create URL: <c>myServer.com\RestHandler?cmd=[CommandName]</c>.
            </remarks>
        </member>
        <member name="P:Cosmo.REST.RestMethod.DataType">
            <summary>
            Returns or sets the type of data returned by method.
            </summary>
        </member>
        <member name="T:Cosmo.REST.RestMethod.RestMethodReturnType">
            <summary>
            Enumerate the type of data returned by method.
            </summary>
        </member>
        <member name="T:Cosmo.REST.RestMethodParameter">
            <summary>
            Implements a definition of a REST method parameter for Cosmo REST handlers.
            </summary>
        </member>
        <member name="P:Cosmo.REST.RestMethodParameter.UrlParameterName">
            <summary>
            The name of the parameter that is used in URL.
            </summary>
        </member>
        <member name="P:Cosmo.REST.RestMethodParameter.MethodParameterName">
            <summary>
            The name of the parameter that is used in REST class method.
            </summary>
        </member>
        <member name="P:Cosmo.REST.RestMethodParameter.DataType">
            <summary>
            The type of the parameter.
            </summary>
        </member>
        <member name="T:Cosmo.REST.UIRestHandler">
            <summary>
            Handler que implementa los servicios REST correspondientes al servicio UI de Cosmo.
            </summary>
        </member>
        <member name="F:Cosmo.REST.UIRestHandler.PARAMETER_TEMPLATE_NAME">
            <summary>parámetro de llamada: Nombre de archivo.</summary>
        </member>
        <member name="F:Cosmo.REST.UIRestHandler.COMMAND_GET_CAPTCHA">
            <summary>Devuelve una imagen CAPTCHA y coloca su equivalente de texto en la sesión de usuario.</summary>
        </member>
        <member name="F:Cosmo.REST.UIRestHandler.COMMAND_RENDER_TEMPLATE">
            <summary>Renderiza una template y devuelve el código XHTML.</summary>
        </member>
        <member name="M:Cosmo.REST.UIRestHandler.ServiceRequest(System.String)">
            <summary>
            Método invocado al recibir una petición.
            </summary>
            <param name="command">Comando a ejecutar pasado mediante el parámetro definido mediante <see cref="F:Cosmo.Workspace.PARAM_COMMAND"/>.</param>
        </member>
        <member name="M:Cosmo.REST.UIRestHandler.GetCaptchaUrl">
            <summary>
            Genera una URL válida para descargar un archivo asociado a un objeto.
            </summary>
            <returns>Una cadena que representa la URL solicitada.</returns>
        </member>
        <member name="M:Cosmo.REST.UIRestHandler.GetCaptcha">
            <summary>
            Procesa la petición al ser recibida y sirve la imagen Captcha.
            </summary>
        </member>
        <member name="M:Cosmo.REST.UIRestHandler.GetRenderTemplateUrl(System.String)">
            <summary>
            Genera una URL válida para descargar un archivo asociado a un objeto.
            </summary>
            <param name="templateName">Nombre de la plantilla a renderizar.</param>
            <returns>Una cadena que representa la URL solicitada.</returns>
        </member>
        <!-- El comentario XML con formato incorrecto se omite para el miembro "M:Cosmo.REST.UIRestHandler.RenderTemplate(System.String)" -->
        <member name="P:Cosmo.REST.UIRestHandler.ServiceUrl">
            <summary>
            Devuelve la URL a la que se debe atacar para realizar operaciones REST sobre el servicio.
            </summary>
        </member>
        <member name="T:Cosmo.REST.FileSystemRestHandler">
            <summary>
            Handler que implementa los servicios REST correspondientes al servicio FileSystem de Cosmo.
            </summary>
        </member>
        <member name="F:Cosmo.REST.FileSystemRestHandler.PARAMETER_FILENAME">
            <summary>parámetro de llamada: Nombre de archivo.</summary>
        </member>
        <member name="F:Cosmo.REST.FileSystemRestHandler.COMMAND_DOWNLOAD">
            <summary>Comando para descargar un fichero asociado a un objeto.</summary>
        </member>
        <member name="F:Cosmo.REST.FileSystemRestHandler.COMMAND_DELETE">
            <summary>Comando para eliminar un fichero asociado a un objeto.</summary>
        </member>
        <member name="F:Cosmo.REST.FileSystemRestHandler.COMMAND_UPLOAD">
            <summary>Agrega un archivo a un objeto.</summary>
        </member>
        <member name="M:Cosmo.REST.FileSystemRestHandler.ServiceRequest(System.String)">
            <summary>
            Método invocado al recibir una petición.
            </summary>
            <param name="command">Comando a ejecutar pasado mediante el parámetro definido mediante <see cref="F:Cosmo.Workspace.PARAM_COMMAND"/>.</param>
        </member>
        <member name="M:Cosmo.REST.FileSystemRestHandler.GetDownloadFileUrl(System.String,System.String)">
            <summary>
            Genera una URL válida para descargar un archivo asociado a un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <param name="filename">Nombre del archivo (sin path o ruta).</param>
            <returns>Una cadena que representa la URL solicitada.</returns>
        </member>
        <!-- El comentario XML con formato incorrecto se omite para el miembro "M:Cosmo.REST.FileSystemRestHandler.DownloadFile(System.String,System.String)" -->
        <member name="M:Cosmo.REST.FileSystemRestHandler.GetDeleteFileUrl(System.String,System.String)">
            <summary>
            Genera una URL válida para eliminar un archivo asociado a un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <param name="filename">Nombre del archivo (sin path o ruta).</param>
            <returns>Una cadena que representa la URL solicitada.</returns>
        </member>
        <!-- El comentario XML con formato incorrecto se omite para el miembro "M:Cosmo.REST.FileSystemRestHandler.DeleteFile(System.String,System.String)" -->
        <member name="M:Cosmo.REST.FileSystemRestHandler.GetUploadFilesUrl(System.String)">
            <summary>
            Genera una URL válida para eliminar un archivo asociado a un objeto.
            </summary>
            <returns>Una cadena que representa la URL solicitada.</returns>
        </member>
        <member name="M:Cosmo.REST.FileSystemRestHandler.UploadFiles(System.String)">
            <summary>
            Recibe uno o más archivos y los guarda asociados a un determinado objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
        </member>
        <member name="P:Cosmo.REST.FileSystemRestHandler.ServiceUrl">
            <summary>
            Devuelve la URL a la que se debe atacar para realizar operaciones REST sobre el servicio.
            </summary>
        </member>
        <member name="T:Cosmo.REST.SecurityRestHandler">
            <summary>
            Implementa un handler para la gestión de las acciones sobre usuarios
            </summary>
            <remarks>
            Para usar cualquier método de este Handler debe existir sesión de usuario inicuiada.
            </remarks>
        </member>
        <member name="F:Cosmo.REST.SecurityRestHandler.PARAM_QUERY">
            <summary>parámetro para pasar consultas.</summary>
        </member>
        <member name="F:Cosmo.REST.SecurityRestHandler.PARAM_VERIFY_KEY">
            <summary>Parámetro que contiene la clave de verificación de una cuenta de correo.</summary>
        </member>
        <member name="F:Cosmo.REST.SecurityRestHandler.PARAM_PWD_REC_MAIL_KEY">
            <summary>Parámetro que contiene el correo electrónico.</summary>
        </member>
        <member name="F:Cosmo.REST.SecurityRestHandler.COMMAND_USER_DATA">
            <summary>Comando para el handler de usuarios: Devuelve los datos públicos de un usuario.</summary>
        </member>
        <member name="F:Cosmo.REST.SecurityRestHandler.COMMAND_USER_SEARCH">
            <summary>Comando para el handler de usuarios: Comando para búsquedas.</summary>
        </member>
        <member name="F:Cosmo.REST.SecurityRestHandler.COMMAND_USER_AUTHENTICATION">
            <summary>Comando para el handler de usuarios: Comando para autenticar usuarios.</summary>
        </member>
        <member name="F:Cosmo.REST.SecurityRestHandler.COMMAND_USER_LOGOFF">
            <summary>Comando: Comando para terminar con la sesión de usuario.</summary>
        </member>
        <member name="F:Cosmo.REST.SecurityRestHandler.COMMAND_USER_VERIFIY">
            <summary>Comando para el handler de usuarios: Verificación de cuenta de correo electrónico.</summary>
        </member>
        <member name="F:Cosmo.REST.SecurityRestHandler.COMMAND_USER_PASSWORD_RECOVER">
            <summary>Comando para el handler de usuarios: Recuperación de los datos de acceso.</summary>
        </member>
        <member name="F:Cosmo.REST.SecurityRestHandler.COMMAND_USER_CANCEL">
            <summary>User handler command: Cancel user account.</summary>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.ServiceRequest(System.String)">
            <summary>
            Evento que se invoca al recibir una petición.
            </summary>
            <param name="command">Comando a ejecutar pasado mediante el parámetro definido mediante <see cref="F:Cosmo.Workspace.PARAM_COMMAND"/>.</param>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.GetUserDataUrl(System.Int32)">
            <summary>
            Generate a valid URL to call the <c>SecurityRestHandler.UserSearch()</c> method.
            </summary>
            <param name="userId">User identifier.</param>
            <returns>A string containing the URL to call the method.</returns>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.UserData(System.Int32)">
            <summary>
            Muestra la ficha informativa de un usuario.
            </summary>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.GetUserSearchUrl(System.String)">
            <summary>
            Generate a valid URL to call the <c>SecurityRestHandler.UserSearch()</c> method.
            </summary>
            <param name="queryText">Text to search.</param>
            <returns>A string containing the URL to call the method.</returns>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.UserSearch(System.String)">
            <summary>
            Busca usuarios por <em>login</em>.
            </summary>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.GetUserAuthenticationUrl(System.String,System.String,System.String)">
            <summary>
            Generate a valid URL to call the <c>SecurityRestHandler.UserAuthentication()</c> method.
            </summary>
            <param name="urlLoginRedirect"></param>
            <param name="login"></param>
            <param name="password"></param>
            <returns>A string containing the URL to call the method.</returns>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.UserAuthentication(System.String,System.String,System.String)">
            <summary>
            Authenticate a user with basic credentials.
            </summary>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.GetUserLogOffUrl(System.String)">
            <summary>
            Genera una URL válida para cerrar la sesión de usuario.
            </summary>
            <param name="urlLoginRedirect">La URL dónde se debe redirigir al usuario después de cerrar la sesión.</param>
            <returns>Una cadena que representa la URL solicitada.</returns>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.GetUserLogOffUrl">
            <summary>
            Genera una URL válida para cerrar la sesión de usuario.
            </summary>
            <returns>Una cadena que representa la URL solicitada.</returns>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.UserLogOff(System.String)">
            <summary>
            Close de current autheticated session and redirects usert to a specified URL.
            </summary>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.GetUserMailVerificationUrl(System.String)">
            <summary>
            Genera una URL válida para verificar una dirección de correo electrónico de un usuario.
            </summary>
            <param name="verificationKey">Clave de verificación (recibida en un correo electrónico).</param>
            <returns>Una cadena que representa la URL solicitada.</returns>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.UserMailVerification">
            <summary>
            Verifica el correo de un usuario y activa su cuenta.
            </summary>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.GetPasswordRecoveryUrl(System.String)">
            <summary>
            Genera una URL válida para recuperar los datos de conexión de un usuario.
            </summary>
            <param name="eMail">Cuenta de correo del usuario que desea recuperar los datos de conexión.</param>
            <returns>Una cadena que representa la URL solicitada.</returns>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.UserPasswordRecover">
            <summary>
            Envia los datos de conexión a un usuario.
            </summary>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.GetCancelAccountUrl(System.Int32)">
            <summary>
            Generates a valid URL to call this REST method.
            </summary>
            <param name="userId">User identifier.</param>
            <returns>A string containg the requested URL.</returns>
        </member>
        <member name="M:Cosmo.REST.SecurityRestHandler.CancelAccount(System.Int32)">
            <summary>
            Cancel a user account.
            </summary>
        </member>
        <member name="P:Cosmo.REST.SecurityRestHandler.ServiceUrl">
            <summary>
            Devuelve la URL a la que se debe atacar para realizar operaciones REST sobre el servicio.
            </summary>
        </member>
        <member name="T:Cosmo.Security.AuthenticationRequired">
            <summary>
            Implementa un atributo para indicar a las páginas Cosmo que se reguiere cierto rol para acceder a ellas.
            </summary>
            <remarks>
            Añadir este atributo a una página conlleva implícitamente  que el usuario debe estar autenticado.
            </remarks>
        </member>
        <member name="T:Cosmo.Security.AuthorizationRequired">
            <summary>
            Implementa un atributo para indicar a las páginas Cosmo que se reguiere cierto rol para acceder a ellas.
            </summary>
            <remarks>
            Añadir este atributo a una página conlleva implícitamente  que el usuario debe estar autenticado.
            </remarks>
        </member>
        <member name="M:Cosmo.Security.AuthorizationRequired.#ctor(System.String[])">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.AuthorizationRequired"/>.
            </summary>
            <param name="args">Los roles que dan acceso a la página o recurso.</param>
        </member>
        <member name="P:Cosmo.Security.AuthorizationRequired.RequiredRole">
            <summary>
            Nombre del rol requerido para acceder a las páginas que contengan este atributo.
            </summary>
        </member>
        <member name="T:Cosmo.Security.UserNotFoundException">
            <summary>
            Excepción que se lanza cuando la cuenta de usuario está inhabilitada.
            </summary>
        </member>
        <member name="M:Cosmo.Security.UserNotFoundException.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.UserDisabledException"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Security.UserNotFoundException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.UserDisabledException"/>.
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.Security.UserNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.UserDisabledException"/>.
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Net.DeviceDetector">
            <summary>
            Clase especializada en la detección del tipo de dispositivo.
            </summary>
        </member>
        <member name="T:Cosmo.Net.DeviceDetector.DeviceType">
            <summary>
            Enumera los distintos tipos de dispositivo.
            </summary>
        </member>
        <member name="F:Cosmo.Net.DeviceDetector.DeviceType.Desktop">
            <summary>Dispositivo de sobremesa con todas las capacidades de visualización</summary>
        </member>
        <member name="F:Cosmo.Net.DeviceDetector.DeviceType.Tablet">
            <summary>Dispositivo tipo tablet</summary>
        </member>
        <member name="F:Cosmo.Net.DeviceDetector.DeviceType.Mobile">
            <summary>Dispositivo tipo Smartphone</summary>
        </member>
        <member name="T:Cosmo.UI.ControlCache">
            <summary>
            Implements a control cache for implementatios of <see cref="T:Cosmo.UI.View"/> class.
            </summary>
        </member>
        <member name="F:Cosmo.UI.ControlCache.DEFAULT_CACHE_TIME">
            <summary>Decfine the default time (in minutes) for cache content.</summary>
        </member>
        <member name="M:Cosmo.UI.ControlCache.#ctor(System.Web.Caching.Cache)">
            <summary>
            Create an instance of <see cref="T:Cosmo.UI.ControlCache"/>.
            </summary>
            <param name="serverCache">An instance of <see cref="T:System.Web.Caching.Cache"/> representing the server cache.</param>
        </member>
        <member name="M:Cosmo.UI.ControlCache.Exist(System.String)">
            <summary>
            Indicate if an object is stored in cache.
            </summary>
            <param name="key">Identifier for object stored.</param>
            <returns><c>true</c> if object exist, otherwise return <c>false</c>.</returns>
        </member>
        <member name="M:Cosmo.UI.ControlCache.Add(System.String,Cosmo.UI.Controls.Control)">
            <summary>
            Add a control into cache with default time and priority.
            </summary>
            <param name="key">Identifier for object stored.</param>
            <param name="control">Control to store in cache.</param>
        </member>
        <member name="M:Cosmo.UI.ControlCache.Add(System.String,Cosmo.UI.Controls.Control,System.Int32)">
            <summary>
            Add a control into cache with default priority.
            </summary>
            <param name="key">Identifier for object stored.</param>
            <param name="control">Control to store in cache.</param>
            <param name="minutes">Amount of minutes that the control remain stored.</param>
        </member>
        <member name="M:Cosmo.UI.ControlCache.Add(System.String,Cosmo.UI.Controls.Control,System.Int32,System.Web.Caching.CacheItemPriority)">
            <summary>
            Add a control into cache with default priority.
            </summary>
            <param name="key">Identifier for object stored.</param>
            <param name="control">Control to store in cache.</param>
            <param name="minutes">Amount of minutes that the control remain stored.</param>
            <param name="priority">Priority (to remain stored) of objects stored in cache.</param>
        </member>
        <member name="M:Cosmo.UI.ControlCache.Remove(System.String)">
            <summary>
            Remove a control from cache.
            </summary>
            <param name="key">Identifier for object stored.</param>
        </member>
        <member name="M:Cosmo.UI.ControlCache.Initialize">
            <summary>
            Initialize the instance.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.Control">
            <summary>
            Clase abstracta que deben implementar todos los componentes de Bootstrap.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.Control.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.Control"/>.
            </summary>
            <param name="parentView">Instancia de <see cref="T:Cosmo.UI.View"/> que contiene el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.Control.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.Control"/>.
            </summary>
            <param name="parentView">Instancia de <see cref="T:Cosmo.UI.View"/> que contiene el control.</param>
            <param name="domId">Identificador único del componente dentro de la vista (DOM).</param>
        </member>
        <member name="M:Cosmo.UI.Controls.Control.AddScript(Cosmo.UI.Scripting.Script)">
            <summary>
            Agrega un script necesario para la correcta visualización del control.
            </summary>
            <param name="script">Una instancia de <see cref="T:Cosmo.UI.Scripting.Script"/> que representa el script a incoporar.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.Control.ToXhtml">
            <summary>
            Convierte la instancia a una cadena que contiene el código XHTML necesario para representar el control.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.Control.GetIdParameter">
            <summary>
            Devuelve el parámetro ID para incrustar en un TAG XHTML.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.Control.GetNameParameter">
            <summary>
            Devuelve el parámetro NAME para incrustar en un TAG XHTML.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.Control.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.Control.DomID">
            <summary>
            Devuelve o establece el identificador del componente en el DOM.
            Sólo se debe establecer este valor si se desea acceder al componente a través de JavaScript.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.Control.ParentView">
            <summary>
            Devuelve o establece la instancia de <see cref="T:Cosmo.UI.View"/> que contiene el control.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.AjaxControl.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            
            </summary>
            <param name="ownerView"></param>
            <param name="domId"></param>
        </member>
        <member name="T:Cosmo.UI.Controls.SplitButtonControl">
            <summary>
            Implementa un botón que al ser pulsado muestra un menú de opciones.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ButtonControl">
            <summary>
            Implementa un botón de comando.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ButtonControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ButtonControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ButtonControl.#ctor(Cosmo.UI.View,System.String,System.String,Cosmo.UI.Controls.ButtonControl.ButtonTypes)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ButtonControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador del control en la página (DOM ID).</param>
            <param name="caption">Texto visible para el botón.</param>
            <param name="type">Tipo de botón a representar.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ButtonControl.#ctor(Cosmo.UI.View,System.String,System.String,System.String,Cosmo.UI.Controls.ButtonControl.ButtonTypes)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ButtonControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador del control en la página (DOM ID).</param>
            <param name="caption">Texto visible para el botón.</param>
            <param name="icon">Código del icono a mostrar.</param>
            <param name="type">Tipo de botón a representar.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ButtonControl.#ctor(Cosmo.UI.View,System.String,System.String,Cosmo.UI.ModalView)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ButtonControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador del control en la página (DOM ID).</param>
            <param name="caption">Texto visible para el botón.</param>
            <param name="modal">Formulario modal que abrirá el botón.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ButtonControl.#ctor(Cosmo.UI.View,System.String,System.String,System.String,Cosmo.UI.ModalView)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ButtonControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador del control en la página (DOM ID).</param>
            <param name="caption">Texto visible para el botón.</param>
            <param name="modal">Formulario modal que abrirá el botón.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ButtonControl.#ctor(Cosmo.UI.View,System.String,System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ButtonControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador del control en la página (DOM ID).</param>
            <param name="caption">Texto visible para el botón.</param>
            <param name="href">Enlace dónde se redirige al hacer clic.</param>
            <param name="jsAction">Acción JS que se ejecutará al hacer clic.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ButtonControl.#ctor(Cosmo.UI.View,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ButtonControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador del control en la página (DOM ID).</param>
            <param name="caption">Texto visible para el botón.</param>
            <param name="icon">Código del icono a mostrar.</param>
            <param name="href">Enlace dónde se redirige al hacer clic.</param>
            <param name="jsAction">Acción JS que se ejecutará al hacer clic.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ButtonControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ButtonControl.Enabled">
            <summary>
            Indica si el botó está habilitado (<c>true</c>) o deshabilitado (<c>false</c>).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ButtonControl.IsBlock">
            <summary>
            Indica si es un botón <em>block</em> (si ocupa todo el ancho disponible en el contenedor).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ButtonControl.Text">
            <summary>
            Devuelve o establece el texto visible que mostrará el componente.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ButtonControl.Icon">
            <summary>
            Devuelve o establece el código del icono que se mostrará en el componente.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ButtonControl.JavaScriptAction">
            <summary>
            Devuelve o establece la llamada a una acción JavaScript.
            </summary>
            <example>
            <c>...onclick="javascript:<b>navigateToUrl();</b>"...</c>
            </example>
        </member>
        <member name="P:Cosmo.UI.Controls.ButtonControl.Href">
            <summary>
            Devuelve o establece la URL a la que se invocará si se hace click..
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ButtonControl.ModalDomId">
            <summary>
            Devuelve o establece el identificador del formulario modal que debe abrir el botón.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ButtonControl.Color">
            <summary>
            Devuelve o establece el color que se aplicará al componente.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ButtonControl.Size">
            <summary>
            Devuelve o establece el tamaño que debe adoptar el componente.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ButtonControl.Type">
            <summary>
            Devuelve o establece el tipo de botón.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ButtonControl.ButtonSizes">
            <summary>
            Enumera los distintos tamaños de botón.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ButtonControl.ButtonSizes.Large">
            <summary>Grande</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ButtonControl.ButtonSizes.Default">
            <summary>Normal</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ButtonControl.ButtonSizes.Small">
            <summary>Pequeño</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ButtonControl.ButtonSizes.ExtraSmall">
            <summary>Miniatura</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ButtonControl.ButtonTypes">
            <summary>
            Enumera los distintos tipos de botón.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ButtonControl.ButtonTypes.Normal">
            <summary>Normal. Se controla el botón mediante eventos de JavaScript.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ButtonControl.ButtonTypes.Submit">
            <summary>Envío. Situado en un formulario envia los datos del mismo.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ButtonControl.ButtonTypes.SubmitJS">
            <summary>Send form data. In a form send data using JavaScript/jQuery.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ButtonControl.ButtonTypes.OpenModalForm">
            <summary>Open Modal. Abre un formulario modal habilitado en la página.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ButtonControl.ButtonTypes.CloseModalForm">
            <summary>Close Modal. Cierra el formulario modal dónde se encuentra el botón.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ButtonControl.ButtonTypes.OpenModalView">
            <summary>Open Modal view. Abre un formulario modal habilitado en la página.</summary>
        </member>
        <member name="M:Cosmo.UI.Controls.SplitButtonControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.SplitButtonControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.SplitButtonControl.Initialize">
            <summary>
            Inicialización de la clase.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.SplitButtonControl.MenuOptions">
            <summary>
            Contiene la lista de opciones que se presentarán al desplegar el menú.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ControlNotFoundException">
            <summary>
            Excepción que indica que no se ha encontrado un determinado control
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ControlNotFoundException.#ctor">
            <summary>
            Devuelve una instancia de <see cref="!:OrmException"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ControlNotFoundException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de <see cref="!:OrmException"/>.
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ControlNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de <see cref="!:OrmException"/>.
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="P:Cosmo.UI.Controls.CookiesAdvisorControl.Message">
            <summary>
            Return or set the message thes show this control to user.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CookiesAdvisorControl.InformationHref">
            <summary>
            Return or set the content ID that contains more detailed information about legal aspects.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.DocumentHeaderControl">
            <summary>
            Implementa un control para incrustar en la cabecera de un documento y que permite mostrar
            el título del contenido y una descripción.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.DocumentHeaderControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.PageHeaderControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.DocumentHeaderControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.DocumentHeaderControl.Title">
            <summary>
            Devuelve o establece el título de la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.DocumentHeaderControl.SubTitle">
            <summary>
            Devuelve o establece el subtítulo de la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.DocumentHeaderControl.Icon">
            <summary>
            Devuelve o establece el código del icono que acompaña el título.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.PictureControl">
            <summary>
            Implementa una imagen representable en un control <see cref="T:Cosmo.UI.Controls.PictureGalleryControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.PictureControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.PictureControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.PictureControl.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.PictureControl"/>.
            </summary>
            <param name="parentView">The view that contains the control.</param>
            <param name="domId">Identificador del elemento en el documento (DOM).</param>
        </member>
        <member name="M:Cosmo.UI.Controls.PictureControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PictureControl.Width">
            <summary>
            Devuelve o establece en ancho (en píxeles) la imagen miniatura.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PictureControl.ImageHref">
            <summary>
            Devuelve o establece la URL del enlace que representa la imagen miniatura.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PictureControl.ImageUrl">
            <summary>
            Devuelve o establece la URL de la imagen miniatura.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PictureControl.ImageAlternativeText">
            <summary>
            Devuelve o establece el texto alternativo que se mostrará en lugar de la imagen (propiedad Alt).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PictureControl.Text">
            <summary>
            Devuelve o establece el texto a mostrar bajo la imagen.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PictureControl.Footer">
            <summary>
            Gets or sets the content to show in the footer section.
            </summary>
            <remarks>
            If a <see cref="T:Cosmo.UI.Controls.Control"/> is used, it will be rendered, otherwise the render shown
            a <c>ToString()</c> result.
            </remarks>
        </member>
        <member name="P:Cosmo.UI.Controls.PictureControl.Type">
            <summary>
            Devuelve o establece el color del cuadro de la imagen (dependerá del renderizador dónde se aplique el color).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PictureControl.HasSplitButton">
            <summary>
            Gets a boolean value indicatin if action menú is used.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PictureControl.SplitButton">
            <summary>
            Gets or sets the SplitButton (menú) associated with the control.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.PictureGalleryControl">
            <summary>
            Implementa una galeria de imágenes.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.PictureGalleryControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.AlertControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.PictureGalleryControl.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.AlertControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.PictureGalleryControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.UserLinkControl">
            <summary>
            Implements a control that allow to open a modal form with its public data.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.UserLinkControl.#ctor(Cosmo.UI.View)">
            <summary>
            Gets an instance of <see cref="T:Cosmo.UI.Controls.UserLinkControl"/>.
            </summary>
            <param name="view">Container view of the control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.UserLinkControl.#ctor(Cosmo.UI.View,System.Int32,System.String,Cosmo.UI.ModalView)">
            <summary>
            Gets an instance of <see cref="T:Cosmo.UI.Controls.UserLinkControl"/>.
            </summary>
            <param name="view">Container view of the control.</param>
            <param name="userId">User unique identifier.</param>
            <param name="userDisplayName">User display name (usually the <c>login</c>.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.UserLinkControl.#ctor(Cosmo.UI.View,Cosmo.Security.User,Cosmo.UI.ModalView)">
            <summary>
            Gets an instance of <see cref="T:Cosmo.UI.Controls.UserLinkControl"/>.
            </summary>
            <param name="view">Container view of the control.</param>
            <param name="user">An instance of <see cref="T:Cosmo.Security.User"/> representing the user.</param>
            <param name="userDisplayName">User display name (usually the <c>login</c>.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.UserLinkControl.Initialize">
            <summary>
            Initializes the instance.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.UserLinkControl.UserID">
            <summary>
            Gets or sets the user unique identifier.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.UserLinkControl.UserDisplayName">
            <summary>
            Gets or sets the user display name (usually the <c>login</c>.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.UserLinkControl.ModalView">
            <summary>
            Gets or sets the modal view used to show the user data.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Scripting.Behaviors.ShowAjaxResponseBehavior">
            <summary>
            JavaScript Behavior:
            Muestra la información devuelta en una instancia de <see cref="T:Cosmo.UI.Scripting.AjaxResponse"/> por una llamada 
            a un <see cref="!:RestHandler"/>.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Scripting.Script">
            <summary>
            Interface que deben implementar todos los scripts.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Scripting.Script.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.Script"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <!-- El comentario XML con formato incorrecto se omite para el miembro "M:Cosmo.UI.Scripting.Script.#ctor(Cosmo.UI.View,System.String)" -->
        <member name="M:Cosmo.UI.Scripting.Script.#ctor(Cosmo.UI.View,System.Text.StringBuilder)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.Script"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="source">Una instancia de <see cref="T:System.Text.StringBuilder"/> que contiene código JavaScript.</param>
        </member>
        <member name="M:Cosmo.UI.Scripting.Script.AppendComment(System.String)">
            <summary>
            Añade un comentario al código.
            </summary>
            <param name="comment"></param>
        </member>
        <member name="M:Cosmo.UI.Scripting.Script.AppendSourceLine(System.String)">
            <summary>
            Añade una línea de código fuente.
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Cosmo.UI.Scripting.Script.AppendSource(System.String)">
            <summary>
            Añade código fuente.
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Cosmo.UI.Scripting.Script.LoadFromFile(System.String)">
            <summary>
            Carga el código del script desde un archivo.
            </summary>
            <param name="filename">Nombre (con ruta) del archivo a cargar.</param>
        </member>
        <member name="M:Cosmo.UI.Scripting.Script.GetSource">
            <summary>
            Genera el código fuente (JavaScript).
            </summary>
            <returns>Una cadena de texto que contiene el código JavaScript generado.</returns>
        </member>
        <member name="M:Cosmo.UI.Scripting.Script.GetFieldValue(System.String)">
            <summary>
            Devuelve el valor de un campo en el formulario via <c>scripting</c>.
            </summary>
            <param name="fieldDomId">Nombre del campo (DOM ID) para el que se desea obtener el valor.</param>
            <returns>Una secuéncia JavaScript (JQuery) que obtiene el valor del campo.</returns>
        </member>
        <member name="M:Cosmo.UI.Scripting.Script.GetFieldValue(System.String,Cosmo.UI.Controls.FormField)">
            <summary>
            Devuelve el valor de un campo en el formulario via <c>scripting</c>.
            </summary>
            <param name="formName">Nombre del formulario al que pertenece el campo.</param>
            <param name="field">Campo para el que se desea obtener el valor (actualmente sólo funciona para campos de tipo INPUT y SELECT).</param>
            <returns>Una secuéncia JavaScript (JQuery) que obtiene el valor del campo.</returns>
        </member>
        <member name="M:Cosmo.UI.Scripting.Script.ConvertToFunctionName(System.String)">
            <summary>
            Transform a DOM ID to a string that can be used as a part of a JavaScript function name.
            </summary>
            <param name="domId">DOM ID to be converted.</param>
            <returns>A string that can be used as a part of a JavaScript function name.</returns>
        </member>
        <member name="M:Cosmo.UI.Scripting.Script.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.Script.ExecutionType">
            <summary>
            Indica si el script se debe ejecutar en el evento <c>$( document ).ready()</c> 
            de <em>jQuery</em>.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.Script.ParentView">
            <summary>
            Devuelve la pPágina o contenedor dónde se representará el control.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.Script.Source">
            <summary>
            Devuelve o establece el código fuente del script.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Scripting.Script.ScriptExecutionMethod">
            <summary>
            Enumera los distintos tipos de llamada al código.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Scripting.Script.ScriptExecutionMethod.OnDocumentReady">
            <summary>Se ejecuta cuando el documento está completamente cargado.</summary>
        </member>
        <member name="F:Cosmo.UI.Scripting.Script.ScriptExecutionMethod.OnEvent">
            <summary>Se ejecuta cuando el documento está completamente cargado.</summary>
        </member>
        <member name="M:Cosmo.UI.Scripting.Behaviors.ShowAjaxResponseBehavior.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.Behaviors.NavigateBehavior"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Una cadena que contiene la URL dónde se debe navegar.</param>
        </member>
        <member name="M:Cosmo.UI.Scripting.Behaviors.ShowAjaxResponseBehavior.GetSource">
            <summary>
            Devuelve el código de la senténcia JavaScript.
            </summary>
            <returns>Una cadena que contiene el código JavaScript solicitado.</returns>
        </member>
        <member name="P:Cosmo.UI.Scripting.Behaviors.ShowAjaxResponseBehavior.DomID">
            <summary>
            Devuelve o establece el identificador del elemento a actualizar.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Scripting.ModalViewOpenScript">
            <summary>
            Implementation of script that open a Modal View.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Scripting.ModalViewOpenScript.#ctor(Cosmo.UI.ModalView)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.ModalViewSendFormScript"/>.
            </summary>
            <param name="modalView">Una instancia del formulario que se desea enviar via AJAX.</param>
        </member>
        <member name="M:Cosmo.UI.Scripting.ModalViewOpenScript.GetSource">
            <summary>
            Genera y devuelve una cadena con el código JavaScript a incorporar a la vista.
            </summary>
            <returns>Una cadena que contiene el código JavasScript solicitado.</returns>
        </member>
        <member name="M:Cosmo.UI.Scripting.ModalViewOpenScript.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="T:Cosmo.UI.ViewParameter">
            <summary>
            Permite definir los parámetros de llamada de una vista.
            </summary>
        </member>
        <member name="M:Cosmo.UI.ViewParameter.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.ViewParameter"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.ViewParameter.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.ViewParameter.ParameterName">
            <summary>
            Devuelve o establece el nombre del parámetro.
            </summary>
        </member>
        <member name="P:Cosmo.UI.ViewParameter.PropertyName">
            <summary>
            Devuelve o establece el nombre de la propiedad a la que se debe asociar.
            </summary>
        </member>
        <member name="T:Cosmo.UI.ModalView">
            <summary>
            Implementa una vista que permite generarse sin estar dentro de una página.
            </summary>
        </member>
        <member name="T:Cosmo.UI.View">
            <summary>
            Implements a container that represents a web page.
            </summary>
        </member>
        <member name="M:Cosmo.UI.View.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.View"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.View.Redirect(System.String)">
            <summary>
            Redirige al cliente hacia otra URL.
            </summary>
            <param name="destinationUrl">La URL de destino.</param>
        </member>
        <member name="M:Cosmo.UI.View.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Evento que se lanza al recibir una petición.
            Equivale al ciclo de vida de la página.
            </summary>
            <param name="context">Contexto del servidor en el momento de la llamada.</param>
        </member>
        <member name="M:Cosmo.UI.View.StartViewLifecycle">
            <summary>
            Inicia el ciclo de vida de la vista.
            </summary>
        </member>
        <member name="M:Cosmo.UI.View.InitPage">
            <summary>
            Método invocado al iniciar la carga de la página, antes de procesar los datos recibidos.
            </summary>
        </member>
        <member name="M:Cosmo.UI.View.FormDataReceived(Cosmo.UI.Controls.FormControl)">
            <summary>
            Método invocado al recibir datos de un formulario.
            </summary>
            <param name="receivedForm">Una instancia de <see cref="T:Cosmo.UI.Controls.FormControl"/> que representa el formulario recibido. El formulario está actualizado con los datos recibidos.</param>
        </member>
        <member name="M:Cosmo.UI.View.FormDataLoad(System.String)">
            <summary>
            Método invocado antes de renderizar todo forumario (excepto cuando se reciben datos invalidos).
            </summary>
            <param name="formDomID">Identificador (DOM) del formulario a renderizar.</param>
        </member>
        <member name="M:Cosmo.UI.View.LoadPage">
            <summary>
            Método invocado durante la carga de la página.
            </summary>
        </member>
        <member name="M:Cosmo.UI.View.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.UI.View.ReadParameters">
            <summary>
            Lee los parámetros de llamada defenidos mediante <see cref="T:Cosmo.UI.ViewParameter"/> i los coloca
            ens las correspondientes propiedades.
            </summary>
        </member>
        <member name="M:Cosmo.UI.View.CheckSecurityConstrains">
            <summary>
            Comprueba las reglas de seguridad para acceder a la página actual.
            </summary>
        </member>
        <member name="P:Cosmo.UI.View.Workspace">
            <summary>
            Devuelve o establece el workspace actual.
            </summary>
        </member>
        <member name="P:Cosmo.UI.View.Cache">
            <summary>
            Return an instance of <see cref="T:Cosmo.UI.ControlCache"/> that allow to store and retrieve controls in cache.
            </summary>
        </member>
        <member name="P:Cosmo.UI.View.Request">
            <summary>
            Devuelve una instancia de <see cref="T:System.Web.HttpRequest"/> que representa el contexto de llamada a la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.View.Response">
            <summary>
            Devuelve una instancia de <see cref="T:System.Web.HttpResponse"/> que representa la respuesta del servidor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.View.Parameters">
            <summary>
            Devuelve la colección de parámetros de llamada (o de un formulario) que ha recibido la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.View.IsAuthenticated">
            <summary>
            Indica si existe un usuario autenticado.
            </summary>
            <returns><c>true</c> si existe una sesión autenticada o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="P:Cosmo.UI.View.IsFormReceived">
            <summary>
            Devuelve <c>true</c> si la llamada corresponde al envio de un formulario o <c>false</c> 
            en cualquier otro caso.
            </summary>
        </member>
        <member name="P:Cosmo.UI.View.FormReceivedDomID">
            <summary>
            Returns the DOM identifier of the form taht is being received.
            </summary>
        </member>
        <member name="P:Cosmo.UI.View.DeviceType">
            <summary>
            Devuelve el tipo de dispositivo usado para acceder a la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.View.Scripts">
            <summary>
            Lista de los componentes <see cref="T:Cosmo.UI.Scripting.Script"/> que se deben usar para representar correctamente el contenido.
            </summary>
        </member>
        <member name="P:Cosmo.UI.View.Resources">
            <summary>
            Lista de los recursos <see cref="T:Cosmo.UI.ViewResource"/> (archivos CSS, JS, fuentes, etc.) que se deben usar para representar correctamente el contenido.
            </summary>
        </member>
        <member name="P:Cosmo.UI.View.IsReusable">
            <summary>
            Indica al servidor web si la instancia es rehusable.
            </summary>
        </member>
        <member name="P:Cosmo.UI.View.ViewName">
            <summary>
            Gets the name of view.
            </summary>
            <remarks>
            This name is useful to use in URL creation.
            </remarks>
        </member>
        <member name="M:Cosmo.UI.ModalView.#ctor">
            <summary>
            Gets an instance of <see cref="T:Cosmo.UI.ModalView"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.ModalView.ShowError(System.String,System.String)">
            <summary>
            Muestra un mensaje de error.
            </summary>
            <param name="title">Título del error.</param>
            <param name="description">Descripción del error.</param>
        </member>
        <member name="M:Cosmo.UI.ModalView.ShowError(System.Exception)">
            <summary>
            Muestra un mensaje de error.
            </summary>
            <param name="exception">Excepción a mostrar.</param>
        </member>
        <member name="M:Cosmo.UI.ModalView.GetInvokeFunctionWithParameters(System.Object[])">
            <summary>
            Generate JS call for modal using data passed as method parameters. 
            </summary>
            <returns></returns>
            <remarks>
            This method allows to get invoke call without initialize modal properties.
            </remarks>
        </member>
        <member name="M:Cosmo.UI.ModalView.GetInvokeFunction">
            <summary>
            Generate JS call from modal. 
            </summary>
            <returns></returns>
            <remarks>
            Modal must have initialized properties.
            </remarks>
        </member>
        <member name="M:Cosmo.UI.ModalView.GetOpenModalScript">
            <summary>
            Generates the script that allow load and show modal view.
            </summary>
            <returns>A <see cref="T:Cosmo.UI.Scripting.Script"/> instance containing the requestes script.</returns>
        </member>
        <member name="M:Cosmo.UI.ModalView.StartViewLifecycle">
            <summary>
            Inicia el ciclo de vida de la vista.
            </summary>
        </member>
        <member name="M:Cosmo.UI.ModalView.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.UI.ModalView.GetProcessedForm">
            <summary>
            Devuelve la instancia de <see cref="T:Cosmo.UI.Controls.FormControl"/> correspondiente al formulario recibido (con los datos actualizados) si la validación 
            es correcta o <c>null</c> en cualquier otro caso.
            </summary>
        </member>
        <member name="P:Cosmo.UI.ModalView.DomID">
            <summary>
            Gets the unique identifier in DOM for this element.
            </summary>
            <remarks>
            This property have a protected <c>setter</c> because every modal view must have a 
            constant DOM unique identifier. You can set this property only in a implementations
            of the abstract class <see cref="T:Cosmo.UI.ModalView"/>.
            </remarks>
        </member>
        <member name="P:Cosmo.UI.ModalView.Title">
            <summary>
            Gets or sets the modal title.
            </summary>
        </member>
        <member name="P:Cosmo.UI.ModalView.Icon">
            <summary>
            Gets or sets the modal title icon.
            </summary>
            <remarks>
            This property must be set with an icon code. You have all codes in <see cref="T:Cosmo.UI.Controls.IconControl"/>
            as a <c>ICON_xxxx</c> constants
            </remarks>
        </member>
        <member name="P:Cosmo.UI.ModalView.Content">
            <summary>
            Devuelve o establece el contenido de la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.ModalView.Closeable">
            <summary>
            Indica si la vista modal debe contener un botón que permita cerrarla.
            </summary>
        </member>
        <member name="T:Cosmo.UI.PartialView">
            <summary>
            Implementa una vista que permite generarse sin estar dentro de una página.
            </summary>
        </member>
        <member name="M:Cosmo.UI.PartialView.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.PartialView"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.PartialView.StartViewLifecycle">
            <summary>
            Inicia el ciclo de vida de la vista.
            </summary>
        </member>
        <member name="M:Cosmo.UI.PartialView.ShowError(System.String,System.String)">
            <summary>
            Muestra un mensaje de error.
            </summary>
            <param name="title">Título del error.</param>
            <param name="description">Descripción del error.</param>
        </member>
        <member name="M:Cosmo.UI.PartialView.ShowError(System.Exception)">
            <summary>
            Muestra un mensaje de error.
            </summary>
            <param name="exception">Excepción a mostrar.</param>
        </member>
        <member name="M:Cosmo.UI.PartialView.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.UI.PartialView.GetProcessedForm">
            <summary>
            Devuelve la instancia de <see cref="T:Cosmo.UI.Controls.FormControl"/> correspondiente al formulario recibido (con los datos actualizados) si la validación 
            es correcta o <c>null</c> en cualquier otro caso.
            </summary>
        </member>
        <member name="P:Cosmo.UI.PartialView.Content">
            <summary>
            Devuelve o establece el contenido de la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.PartialView.Modals">
            <summary>
            Gets a modal views used by this view.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Scripting.AjaxResponse">
            <summary>
            Implementa una respuesta estandarizada para cualquier llamada AJAX.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Scripting.AjaxResponse.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.AjaxResponse"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Scripting.AjaxResponse.#ctor(System.Int32,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.AjaxResponse"/>.
            </summary>
            <param name="errCode">Código de error.</param>
            <param name="errMessage">Descripción del error.</param>
        </member>
        <member name="M:Cosmo.UI.Scripting.AjaxResponse.#ctor(System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.AjaxResponse"/>.
            </summary>
            <param name="xhtml">Código XHTML a devolver al cliente para ser representado.</param>
        </member>
        <member name="M:Cosmo.UI.Scripting.AjaxResponse.#ctor(System.Object)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.AjaxResponse"/>.
            </summary>
            <param name="data">Datos solicitados en la llamada.</param>
        </member>
        <member name="M:Cosmo.UI.Scripting.AjaxResponse.ToJSON">
            <summary>
            Devuelve una cadena que contiene la instancia actual en formato JSON.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmo.UI.Scripting.AjaxResponse.Initialize">
            <summary>
            Initialize the instance.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.AjaxResponse.Result">
            <summary>
            Devuelve o establece el resultado de la ejecución del comando solicitado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.AjaxResponse.ErrorCode">
            <summary>
            Devuelve o establece el código de error que identifica el error producido.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.AjaxResponse.ErrorMessage">
            <summary>
            Devuelve o establece el mensaje de error producido.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.AjaxResponse.Xhtml">
            <summary>
            Devuelve o establece el código XHTML que se debe reemplazar en el cliente como respuesta.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.AjaxResponse.Data">
            <summary>
            Devuelve o establece los datos solicitados.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.AjaxResponse.ToURL">
            <summary>
            Devuelve o establece la URL dónde se debe navegar una vez se ha recibido la respuesta.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Scripting.AjaxResponse.JsonResponse">
            <summary>
            Tipos de respuesta a llamadas a métodos REST (que no devuelvan valores).
            </summary>
        </member>
        <member name="F:Cosmo.UI.Scripting.AjaxResponse.JsonResponse.Successful">
            <summary>Indica que la llamada a un método REST ha tenido éxito.</summary>
        </member>
        <member name="F:Cosmo.UI.Scripting.AjaxResponse.JsonResponse.Fail">
            <summary>Indica que la llamada a un método REST ha fallado.</summary>
        </member>
        <member name="T:Cosmo.UI.Scripting.AjaxRestSimpleCallScript">
            <summary>
            Implementa un script que permite realizar una llamada a un método simple de la API REST
            de Cosmo y que devuelve un token JSON. La llamada se realiza siempre por POST.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Scripting.AjaxRestSimpleCallScript.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.AjaxRestSimpleCallScript"/>.
            </summary>
            <param name="viewport">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Scripting.AjaxRestSimpleCallScript.GetSource">
            <summary>
            Genera el código fuente (JavaScript).
            </summary>
            <returns>Una cadena de texto que contiene el código JavaScript generado.</returns>
        </member>
        <member name="M:Cosmo.UI.Scripting.AjaxRestSimpleCallScript.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.AjaxRestSimpleCallScript.FunctionName">
            <summary>
            Devuelve o establece el nombre (identificador) de la función.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.AjaxRestSimpleCallScript.URL">
            <summary>
            Devuelve o establece el nombre del script a invocar.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.AjaxRestSimpleCallScript.Parameters">
            <summary>
            Colección de parámetros que se pasarán en la llamada al método REST.
            </summary>
            <remarks>
            Dado que el valor de cada parámetro puede ser una variable, una constante o cualquier
            llamada a otra función, se debe tener cuidado en como se especifican, sobretodo, las
            cadenas (el valor se debe especificar entre comillas: "string").
            </remarks>
        </member>
        <member name="T:Cosmo.UI.Scripting.ModalViewSendFormScript">
            <summary>
            Implementa un script para enviar el contenido de un formulario via AJAX a un 
            <see cref="T:Cosmo.REST.RestHandler"/>, <see cref="T:Cosmo.UI.PageView"/> o 
            <see cref="T:Cosmo.UI.PartialView"/> .
            </summary>
        </member>
        <member name="M:Cosmo.UI.Scripting.ModalViewSendFormScript.#ctor(Cosmo.UI.ModalView,Cosmo.UI.Controls.FormControl)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.ModalViewSendFormScript"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="form">Una instancia del formulario que se desea enviar via AJAX.</param>
        </member>
        <member name="M:Cosmo.UI.Scripting.ModalViewSendFormScript.GetSource">
            <summary>
            Genera y devuelve una cadena con el código JavaScript a incorporar a la vista.
            </summary>
            <returns>Una cadena que contiene el código JavasScript solicitado.</returns>
        </member>
        <member name="M:Cosmo.UI.Scripting.ModalViewSendFormScript.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.ModalViewSendFormScript.Form">
            <summary>
            Devuelve o establece el formulario para el que se desea generar el script.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.ModalViewSendFormScript.OnCallSuccess">
            <summary>
            Llista de acciones a ejecutar si la llamada tiene éxito (evento <c>success</c> de la llamada AJAX, 
            con respuesta de éxito por parte del handler).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.ModalViewSendFormScript.OnCallFail">
            <summary>
            Llista de acciones a ejecutar si la llamada falla (evento <c>success</c> de la llamada AJAX, 
            con respuesta de error por parte del handler).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.ModalViewSendFormScript.OnCallError">
            <summary>
            Llista de acciones a ejecutar si no se puede realizar la llamada (evento <c>error</c> de la llamada AJAX).
            </summary>
        </member>
        <member name="T:Cosmo.UI.Scripting.AjaxUpdateHtmlScript">
            <summary>
            Implementa un script que permite actualizar un elemento del DOM con el contenido devuelto por una llamada AJAX.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Scripting.AjaxUpdateHtmlScript.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.AjaxUpdateHtmlScript"/>.
            </summary>
            <param name="viewport">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Scripting.AjaxUpdateHtmlScript.GetSource">
            <summary>
            Genera el código JavaScript.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Scripting.AjaxUpdateHtmlScript.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.AjaxUpdateHtmlScript.Id">
            <summary>
            Devuelve o establece una cadena única para cada script.
            </summary>
            <remarks>
            Est acadena permite crear variables y funciones con un nombre distinto para cada 
            script y evitar duplicidad.
            </remarks>
        </member>
        <member name="P:Cosmo.UI.Scripting.AjaxUpdateHtmlScript.UpdateDiv">
            <summary>
            Devuelve o establece el contenedor DIV que se actualizará cuando el tipo de script sea <c>UpdateHtml</c>.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.AjaxUpdateHtmlScript.FunctionName">
            <summary>
            Devuelve o establece el nombre de la función que encapsula el script.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.AjaxUpdateHtmlScript.Url">
            <summary>
            Devuelve o establece la URL y los parámetros de la llamada a realizar para la acción AJAX.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.BadgeControl">
            <summary>
            Implementa un control de tipo <em>badge</em>, insertable en diversos controles.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.BadgeControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.BadgeControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.BadgeControl.#ctor(Cosmo.UI.View,System.String,Cosmo.UI.Controls.ComponentColorScheme,System.Boolean)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.BadgeControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="text">Texto que contiene el control.</param>
            <param name="type">Tipo (color) de mensaje a representar.</param>
            <param name="roundedBorders">Indica si se debe representar con los bordes redondeados.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.BadgeControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.BadgeControl.Text">
            <summary>
            Devuelve o establece el contenido del <em>badge</em>.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.BadgeControl.RoundedBorders">
            <summary>
            Indica si el <em>badge</em> debe tener los extremos redondeados (<c>true</c>) o cuadrados (<c>false</c>).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.BadgeControl.Type">
            <summary>
            Devuelve o establece el color del componente.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ButtonGroupControl">
            <summary>
            Implementa una barra de herramientas.
            http://getbootstrap.com/components/#btn-groups
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ButtonGroupControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ButtonGroupControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ButtonGroupControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ButtonGroupControl.Vertical">
            <summary>
            Indica si la barra está alineada verticalmente.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ButtonGroupControl.Size">
            <summary>
            Devuelve o establece el tamaño que deben tener los botones de la barra.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ButtonGroupControl.Buttons">
            <summary>
            Contiene la lista de botones de la barra de herramientas.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ErrorControl">
            <summary>
            Implementa un aviso de error.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ErrorControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ErrorControl"/>
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ErrorControl.#ctor(Cosmo.UI.View,System.Exception)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ErrorControl"/>
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="exception">La excepción que contiene los detalles a mostrar.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ErrorControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ErrorControl.Exception">
            <summary>
            Devuelve o establece la instancia de <see cref="P:Cosmo.UI.Controls.ErrorControl.Exception"/> que contiene los detalles a mostrar.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormControl">
            <summary>
            Implementa un formulario web.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.IControlSingleContainer">
            <summary>
            Interface que deben cumplir los controles contenedores simples (una zona).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.IControlSingleContainer.Content">
            <summary>
            Devuelve o establece el contenido del contenedor.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormControl.FORM_ACTION_SEND">
            <summary>Acción: Send Form</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormControl.FORM_ID">
            <summary>Parámetro que contiene el identificador de formulario enviado.</summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador único del componente dentro de la vista.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.AddFormSetting(System.String,System.String)">
            <summary>
            Agrega un valor de configuración al formulario.
            Estos valores equivalen a los campos <em>hidden</em>.
            </summary>
            <param name="key">Clave del valor.</param>
            <param name="value">Valor.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.AddFormSetting(System.String,System.Int32)">
            <summary>
            Agrega un valor de configuración al formulario.
            Estos valores equivalen a los campos <em>hidden</em>.
            </summary>
            <param name="key">Clave del valor.</param>
            <param name="value">Valor.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.AddFormSetting(System.String,System.Boolean)">
            <summary>
            Agrega un valor de configuración al formulario.
            Estos valores equivalen a los campos <em>hidden</em>.
            </summary>
            <param name="key">Clave del valor.</param>
            <param name="value">Valor.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.SetFieldValue(System.String,System.String)">
            <summary>
            Establece el valor de un campo del formulario.
            </summary>
            <param name="domId">Identificador único del campo (parámetro ID del DOM).</param>
            <param name="value">Valor a establecer.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.SetFieldValue(System.String,System.Boolean)">
            <summary>
            Establece el valor de un campo del formulario.
            </summary>
            <param name="domId">Identificador único del campo (parámetro ID del DOM).</param>
            <param name="value">Valor a establecer.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.SetFieldValue(System.String,System.Int32)">
            <summary>
            Establece el valor de un campo del formulario.
            </summary>
            <param name="domId">Identificador único del campo (parámetro ID del DOM).</param>
            <param name="value">Valor a establecer.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.GetField(System.String)">
            <summary>
            Devuelve un determinado campo del formulario.
            </summary>
            <param name="domId">Identificador único del campo.</param>
            <returns>Una instancia de <see cref="T:Cosmo.UI.Controls.FormField"/> que representa el campo solicitado o <c>null</c> si no se encuentra el campo.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.GetStringFieldValue(System.String)">
            <summary>
            Obtiene el valor de un campo como cadena de texto.
            </summary>
            <param name="domId">Identificador (DOM) del campo solicitado.</param>
            <returns>Devuelve la cadena de texto solicitada o <c>string.Empty</c> si se produce cualquier error de transformación.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.GetStringFieldValue(System.String,System.String)">
            <summary>
            Obtiene el valor de un campo como cadena de texto.
            </summary>
            <param name="domId">Identificador (DOM) del campo solicitado.</param>
            <param name="defaultValue">Valor a devolver en caso de producirse un error de transformación.</param>
            <returns>Devuelve la cadena de texto solicitada o <c>defaultValue</c> si se produce cualquier error de transformación.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.GetBoolFieldValue(System.String)">
            <summary>
            Obtiene el valor de un campo como booleano.
            </summary>
            <param name="domId">Identificador (DOM) del campo solicitado.</param>
            <returns>Devuelve el valor booleano o <c>false</c> si se produce cualquier error de transformación.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.GetIntFieldValue(System.String)">
            <summary>
            Obtiene el valor de un campo como número entero.
            </summary>
            <param name="domId">Identificador (DOM) del campo solicitado.</param>
            <returns>Devuelve el número entero solicitado o <c>0</c> si se produce cualquier error de transformación.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.GetIntFieldValue(System.String,System.Int32)">
            <summary>
            Obtiene el valor de un campo como número entero.
            </summary>
            <param name="domId">Identificador (DOM) del campo solicitado.</param>
            <param name="defaultValue">Valor a devolver en caso de producirse un error de transformación.</param>
            <returns>Devuelve el número entero solicitado o <c>defaultValue</c> si se produce cualquier error de transformación.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.GetDateFieldValue(System.String)">
            <summary>
            Obtiene el valor de un campo como fecha/hora.
            </summary>
            <param name="domId">Identificador (DOM) del campo solicitado.</param>
            <returns>Devuelve la hora/fecha solicitada o la fecha/hora actual si se produce cualquier error de transformación.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.GetDateFieldValue(System.String,System.DateTime)">
            <summary>
            Obtiene el valor de un campo como fecha/hora.
            </summary>
            <param name="domId">Identificador (DOM) del campo solicitado.</param>
            <param name="defaultValue">Valor a devolver en caso de producirse un error de transformación.</param>
            <returns>Devuelve la hora/fecha solicitada o <c>defaultValue</c> si se produce cualquier error de transformación.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.GetFileFieldValue(System.String)">
            <summary>
            Para un campo de archivo, descarga el archivo, lo almacena y devuelve una referencia.
            </summary>
            <param name="domId">Identificador (DOM) del campo solicitado.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.ProcessForm(Cosmo.Net.Url)">
            <summary>
            Procesa los datos recibidos .
            </summary>
            <param name="parameters">Una instancia de <see cref="T:Cosmo.Net.Url"/> que contiene los datos recibidos al formulario.</param>
            <returns><c>true</c> si el contenido del formulario es correcto o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormControl.Icon">
            <summary>
            Devuelve o establece el código de icono a mostrar junto al título del formulario.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormControl.Caption">
            <summary>
            Devuelve o establece el título visible del formulario.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormControl.Action">
            <summary>
            Devuelve o establece la URL dónde se mandarán los datos del formulario.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormControl.Method">
            <summary>
            Devuelve o establece el método de envio de datos, <em>get</em> o <em>post</em>.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormControl.IsMultipart">
            <summary>
            Indica si el formulario se debe mandar como <c>multipart/modal-data</c>.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormControl.FormButtons">
            <summary>
            Contiene la lista de botones del formulario.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormControl.Content">
            <summary>
            Contiene la lista de campos (o controles) del formulario.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormControl.UsePanel">
            <summary>
            Indica si se debe colocar el formulario dentro de un control panel.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormControl.SendDataMethod">
            <summary>
            Devuelve o establece el método de envio de los datos del formulario.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormControl.IsValid">
            <summary>
            Return or set the validation status of this control.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormControl.FormSendDataMethod">
            <summary>
            Enumera los tipos de envio de datos soportados por el control.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormControl.FormSendDataMethod.ButtonSubmit">
            <summary>Envia el formulario mediante un envio estándard mediante botón tipo <c>Submit</c>.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormControl.FormSendDataMethod.JSSubmit">
            <summary>Envia el formulario mediante AJAX.</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormControl.ValidationStatus">
            <summary>
            Enumerate the validation status of the form.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormControl.ValidationStatus.NotValidated">
            <summary>The form isn't yet validated.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormControl.ValidationStatus.ValidData">
            <summary>The form data is valid.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormControl.ValidationStatus.InvalidData">
            <summary>The form data isn't valid.</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldFile">
            <summary>
            Implementa un campo que permite incorporar archivos.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormField">
            <summary>
            Interface que deben implementar todos los campos de formulario que pueden contener un valor.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormField.FIELD_CHECK_POST_DOMID">
            <summary>Cadena que debe concatenarse al final del DomID del campo original para obtener el campo de verificación.</summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormField.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormField"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormField.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormField"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador único del componente dentro de la vista.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormField.LoadValueFromRequest">
            <summary>
            Obtiene el valor del campo a partir de los datos recibidos mediante GET o POST.
            </summary>
            <returns><c>true</c> si el valor obtenido es válido o <c>false</c> si el valor no puede ser aceptado.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormField.Validate">
            <summary>
            Valida el valor del campo.
            </summary>
            <returns><c>true</c> si el valor és aceptable o <c>false</c> si el valor no es válido.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormField.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormField.FieldType">
            <summary>
            Devuelve el tipo de campo que implementa.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormField.Value">
            <summary>
            Devuelve o establece el valor del campo de formulario.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormField.IsValidContent">
            <summary>
            Indica si el contenido del campo contiene errores.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormField.InvalidContentMessage">
            <summary>
            Devuelve o establece el mensaje a mostrar cuando la validación del contenido del campo ha fallado.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormField.FieldTypes">
            <summary>
            Enumera los tipos de campo que se pueden implementar.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormField.FieldTypes.Standard">
            <summary>Campos que recogen un valor del formulario (texto, números, fechas, etc.).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormField.FieldTypes.Upload">
            <summary>Campos de archivo que implican subida de datos físicos.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormField.FieldTypes.Check">
            <summary>Campos de comprobación (capchas, etc.)</summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldFile.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldFile"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldFile.#ctor(Cosmo.UI.View,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldFile"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldFile.#ctor(Cosmo.UI.View,System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldFile"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
            <param name="value"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldFile.#ctor(Cosmo.UI.View,System.String,System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldFile"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
            <param name="description"></param>
            <param name="value"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldFile.LoadValueFromRequest">
            <summary>
            Obtiene el valor del campo a partir de los datos recibidos mediante GET o POST.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldFile.Validate">
            <summary>
            Valida el valor del campo.
            </summary>
            <returns><c>true</c> si el valor és aceptable o <c>false</c> si el valor no es válido.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldFile.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldFile.CreateImageThumbnail(System.String)">
            <summary>
            Genera una imagen miniatura del archivo indicado.
            </summary>
            <param name="filename">Nombre (con ruta) del archivo para el que se desea obtener la miniatura.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldFile.ThumbnailCallback">
            <summary>
            Required, but not used
            </summary>
            <returns>true</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldFile.GenerateThumbnailFilename(System.String)">
            <summary>
            Devuelve un nombre válido para una imagen miniatura
            </summary>
            <param name="filename">Nombre de la imagen original (con path).</param>
            <returns>El nombre a usar para la imagen miniatura.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldFile.GetThumbnailSize(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calcula las dimensiones reales del thumbnail.
            http://stackoverflow.com/questions/5222711/image-resize-in-c-sharp-algorith-to-determine-resize-dimensions-height-and-wi
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldFile.FieldType">
            <summary>
            Devuelve el tipo de campo implementado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldFile.Required">
            <summary>
            Indica si el campo es obligatorio.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldFile.Label">
            <summary>
            Devuelve o establece el texto que mostrará la etiqueta del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldFile.Placeholder">
            <summary>
            Devuelve o establece un texto en el control que desaparece cuando contiene algún valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldFile.Description">
            <summary>
            Devuelve o establece una descripción que aparecerá en pequeño junto al campo (dependiendo de la plantilla de renderización).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldFile.FileName">
            <summary>
            Devuelve o establece el nombre que recibirá el archivo al ser guardado en el servidor.
            Si esta propiedad se deja en blanco, se usará el nombre original.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldFile.DowloadPath">
            <summary>
            Devuelve o establece la ruta a la carpeta dónde se debe almacenar el archivo recibido.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldFile.CreateThumbnail">
            <summary>
            Indica si se debe crear una imagen miniatura del archivo original.
            Sólo funciona con archivos JPEG, GIF y PNG.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldFile.ThumbnailMaxWith">
            <summary>
            Devuelve o establece la anchura máxima de la imagen miniatura a crear si la propiedad <c>CreateThumbnail = true</c>.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldFile.ThumbnailMaxHeight">
            <summary>
            Devuelve o establece la altura máxima de la imagen miniatura a crear si la propiedad <c>CreateThumbnail = true</c>.
            </summary>
        </member>
        <!-- El comentario XML con formato incorrecto se omite para el miembro "P:Cosmo.UI.Controls.FormFieldFile.MaxLength" -->
        <member name="P:Cosmo.UI.Controls.FormFieldFile.AllowedExtensions">
            <summary>
            Devuelve o establece la lista de extensiones de archivo permitidas.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldFile.Thumbnail">
            <summary>
            Devuelve el archivo correspondiente a la imagen miniatura generada al subir el archivo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldFile.Value">
            <summary>
            Devuelve el valor del campo.
            </summary>
            <remarks>
            Aunque elsta propiedad se puede establecer, omite cualquier operación. Esta propiedad es de
            solo lectura puesto que los campos archivo en un formulario no permiten pre-establecerlos 
            a un valor.
            </remarks>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldImage">
            <summary>
            Implementa un campo que permite seleccionar una imagen.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldImage.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldImage"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldImage.#ctor(Cosmo.UI.View,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldImage"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldImage.#ctor(Cosmo.UI.View,System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldImage"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
            <param name="value"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldImage.#ctor(Cosmo.UI.View,System.String,System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldImage"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
            <param name="description"></param>
            <param name="value"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldImage.Validate">
            <summary>
            Valida el valor del campo.
            </summary>
            <returns><c>true</c> si el valor és aceptable o <c>false</c> si el valor no es válido.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldImage.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldImage.Required">
            <summary>
            Indica si el campo es obligatorio.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldImage.Label">
            <summary>
            Devuelve o establece el texto que mostrará la etiqueta del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldImage.Placeholder">
            <summary>
            Devuelve o establece un texto en el control que desaparece cuando contiene algún valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldImage.Description">
            <summary>
            Devuelve o establece una descripción que aparecerá en pequeño junto al campo (dependiendo de la plantilla de renderización).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldImage.PreviewUrl">
            <summary>
            Devuelve o establece la URL (relativa o absoluta) de la imagen que se debe previsualizar.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldImage.MinLength">
            <summary>
            Devuelve o establece la longitud (en carácteres) mínima que debe tener el valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldImage.MaxLength">
            <summary>
            Devuelve o establece la longitud (en carácteres) máxima que debe tener el valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldImage.Value">
            <summary>
            Devuelve o establece el valor del campo.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldEditor">
            <summary>
            Implementa un campo editor de texto (TextArea) que permite editar texto sencillo, HTML o BBCode.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldEditor.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldEditor"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldEditor.#ctor(Cosmo.UI.View,System.String,System.String,Cosmo.UI.Controls.FormFieldEditor.FieldEditorType)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
            <param name="type"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldEditor.#ctor(Cosmo.UI.View,System.String,System.String,Cosmo.UI.Controls.FormFieldEditor.FieldEditorType,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
            <param name="type"></param>
            <param name="value"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldEditor.LoadValueFromRequest">
            <summary>
            Obtiene el valor del campo a partir de los datos recibidos mediante GET o POST.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldEditor.Validate">
            <summary>
            Valida el valor del campo.
            </summary>
            <returns><c>true</c> si el valor és aceptable o <c>false</c> si el valor no es válido.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldEditor.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldEditor.FieldType">
            <summary>
            Devuelve el tipo de campo implementado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldEditor.Required">
            <summary>
            Indica si el campo es obligatorio.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldEditor.Label">
            <summary>
            Devuelve o establece el texto que mostrará la etiqueta del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldEditor.Placeholder">
            <summary>
            Devuelve o establece un texto en el control que desaparece cuando contiene algún valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldEditor.Description">
            <summary>
            Devuelve o establece una descripción que aparecerá en pequeño junto al campo (dependiendo de la plantilla de renderización).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldEditor.Value">
            <summary>
            Devuelve o establece el valor del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldEditor.MinLength">
            <summary>
            Devuelve o establece la longitud (en carácteres) mínima que debe tener el valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldEditor.MaxLength">
            <summary>
            Devuelve o establece la longitud (en carácteres) máxima que debe tener el valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldEditor.Type">
            <summary>
            Devuelve o establece el tipo de editor de texto a mostrar.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldEditor.FieldEditorType">
            <summary>
            Enumera los distintos tipos de editor que implementa el control.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldEditor.FieldEditorType.Simple">
            <summary>Permite editar texto simple.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldEditor.FieldEditorType.HTML">
            <summary>Permite editar texto en formato HTML.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldEditor.FieldEditorType.BBCode">
            <summary>Permite editar texto en formato BBCode (usualmente para foros).</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldList">
            <summary>
            Implementa un campo de texto simple (Input).
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldList.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldList"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldList.#ctor(Cosmo.UI.View,System.String,System.String,Cosmo.UI.Controls.FormFieldList.ListType)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldList"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
            <param name="type"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldList.#ctor(Cosmo.UI.View,System.String,System.String,Cosmo.UI.Controls.FormFieldList.ListType,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldList"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
            <param name="type"></param>
            <param name="value"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldList.LoadValuesFromDataList(System.String)">
            <summary>
            Carga los valores de un <c>DataList</c> como valores de la lista.
            </summary>
            <param name="dataListID">Identificador del <c>DataList</c>.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldList.LoadValueFromRequest">
            <summary>
            Obtiene el valor del campo a partir de los datos recibidos mediante GET o POST.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldList.Validate">
            <summary>
            Valida el valor del campo.
            </summary>
            <returns><c>true</c> si el valor és aceptable o <c>false</c> si el valor no es válido.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldList.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldList.FieldType">
            <summary>
            Devuelve el tipo de campo implementado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldList.Required">
            <summary>
            Indica si el campo es obligatorio.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldList.Label">
            <summary>
            Devuelve o establece el texto que mostrará la etiqueta del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldList.Placeholder">
            <summary>
            Devuelve o establece un texto en el control que desaparece cuando contiene algún valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldList.Description">
            <summary>
            Devuelve o establece una descripción que aparecerá en pequeño junto al campo (dependiendo de la plantilla de renderización).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldList.Value">
            <summary>
            Devuelve o establece el valor del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldList.Type">
            <summary>
            Devuelve o establece el valor del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldList.Values">
            <summary>
            Contiene la lista de valores del campo.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldList.ListType">
            <summary>
            Enumera los distintos tipos de lista que permite albergar el control
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldList.ListType.Multiple">
            <summary>Permite seleccionar múltiples elementos</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldList.ListType.Single">
            <summary>Permite seleccionar sólo un elemento</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldBoolean">
            <summary>
            Implementa un campo booleano (CheckBox).
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldBoolean.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldBoolean"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de la vista (DOM).</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldBoolean.#ctor(Cosmo.UI.View,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldBoolean"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del control en la página.</param>
            <param name="label">Texto visible del control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldBoolean.#ctor(Cosmo.UI.View,System.String,System.String,System.Boolean)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldBoolean"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del control en la página.</param>
            <param name="label">Texto visible del control.</param>
            <param name="value">Valor de inicialización que tendrá el campo.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldBoolean.LoadValueFromRequest">
            <summary>
            Obtiene el valor del campo a partir de los datos recibidos mediante GET o POST.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldBoolean.Validate">
            <summary>
            Valida el valor del campo.
            </summary>
            <returns><c>true</c> si el valor és aceptable o <c>false</c> si el valor no es válido.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldBoolean.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldBoolean.FieldType">
            <summary>
            Devuelve el tipo de campo implementado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldBoolean.Required">
            <summary>
            Indica si el campo es obligatorio.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldBoolean.Label">
            <summary>
            Devuelve o establece el texto que mostrará la etiqueta del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldBoolean.Description">
            <summary>
            Devuelve o establece una descripción que aparecerá en pequeño junto al campo (dependiendo de la plantilla de renderización).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldBoolean.Value">
            <summary>
            Devuelve o establece el valor del campo.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldDate">
            <summary>
            Implementa un campo de tipo fecha/hora.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldDate.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldDate.#ctor(Cosmo.UI.View,System.String,System.String,Cosmo.UI.Controls.FormFieldDate.FieldDateType)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
            <param name="type"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldDate.#ctor(Cosmo.UI.View,System.String,System.String,Cosmo.UI.Controls.FormFieldDate.FieldDateType,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
            <param name="type"></param>
            <param name="value"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldDate.LoadValueFromRequest">
            <summary>
            Obtiene el valor del campo a partir de los datos recibidos mediante GET o POST.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldDate.Validate">
            <summary>
            Valida el valor del campo.
            </summary>
            <returns><c>true</c> si el valor és aceptable o <c>false</c> si el valor no es válido.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldDate.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldDate.FieldType">
            <summary>
            Devuelve el tipo de campo implementado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldDate.Required">
            <summary>
            Indica si el campo es obligatorio.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldDate.Label">
            <summary>
            Devuelve o establece el texto que mostrará la etiqueta del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldDate.Placeholder">
            <summary>
            Devuelve o establece un texto en el control que desaparece cuando contiene algún valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldDate.Description">
            <summary>
            Devuelve o establece una descripción que aparecerá en pequeño junto al campo (dependiendo de la plantilla de renderización).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldDate.Type">
            <summary>
            Devuelve o establece el valor del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldDate.Value">
            <summary>
            Devuelve o establece el valor del campo.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldDate.FieldDateType">
            <summary>
            Enumera los distintos tipos de contenido que permite albergar el control
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldDate.FieldDateType.Date">
            <summary>Fecha</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldDate.FieldDateType.Time">
            <summary>Hora</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldDate.FieldDateType.Datetime">
            <summary>Fecha y hora</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldHidden">
            <summary>
            Implementa un campo oculto.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldHidden.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del campo en el formulario.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldHidden.#ctor(Cosmo.UI.View,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del campo en el formulario.</param>
            <param name="value">Valor inicial del campo.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldHidden.Validate">
            <summary>
            Valida el valor del campo.
            </summary>
            <returns><c>true</c> si el valor és aceptable o <c>false</c> si el valor no es válido.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldHidden.LoadValueFromRequest">
            <summary>
            Obtiene el valor del campo a partir de los datos recibidos mediante GET o POST.
            </summary>
            <returns><c>true</c> si el valor obtenido es válido o <c>false</c> si el valor no puede ser aceptado.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldHidden.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldHidden.FieldType">
            <summary>
            Devuelve el tipo de campo implementado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldHidden.Value">
            <summary>
            Devuelve o establece el valor del campo.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldCaptcha">
            <summary>
            Implementa un campo de comprobación para humanos.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldCaptcha.CAPTCHA_FIELD_NAME">
            <summary>Nombre del campo por defecto.</summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldCaptcha.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldCaptcha"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldCaptcha.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldCaptcha"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldCaptcha.#ctor(Cosmo.UI.View,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldCaptcha"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldCaptcha.#ctor(Cosmo.UI.View,System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldCaptcha"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id"></param>
            <param name="label"></param>
            <param name="value"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldCaptcha.LoadValueFromRequest">
            <summary>
            Obtiene el valor del campo a partir de los datos recibidos mediante GET o POST.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldCaptcha.Validate">
            <summary>
            Valida el valor del campo.
            </summary>
            <returns><c>true</c> si el valor és aceptable o <c>false</c> si el valor no es válido.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldCaptcha.Validate(System.String,Cosmo.Workspace)">
            <summary>
            Permite validar el campo CAPTCHA.
            </summary>
            <param name="fieldValue">Valor introducido por el usuario.</param>
            <param name="workspace">Workspace actual.</param>
            <returns><c>true</c> si el código es correcto o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldCaptcha.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldCaptcha.FieldType">
            <summary>
            Devuelve el tipo de campo implementado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldCaptcha.Label">
            <summary>
            Devuelve o establece el texto que mostrará la etiqueta del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldCaptcha.Placeholder">
            <summary>
            Devuelve o establece un texto en el control que desaparece cuando contiene algún valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldCaptcha.Description">
            <summary>
            Devuelve o establece una descripción que aparecerá en pequeño junto al campo (dependiendo de la plantilla de renderización).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldCaptcha.Value">
            <summary>
            Devuelve o establece el valor del campo.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldPassword">
            <summary>
            Implementa un campo de contraseña.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldPassword.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldPassword.#ctor(Cosmo.UI.View,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldPassword.#ctor(Cosmo.UI.View,System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
            <param name="container">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador único del componente dentro de una vista.</param>
            <param name="label"></param>
            <param name="value"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldPassword.LoadValueFromRequest">
            <summary>
            Obtiene el valor del campo a partir de los datos recibidos mediante GET o POST.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldPassword.Validate">
            <summary>
            Valida el valor del campo.
            </summary>
            <returns><c>true</c> si el valor és aceptable o <c>false</c> si el valor no es válido.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldPassword.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldPassword.FieldType">
            <summary>
            Devuelve el tipo de campo implementado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldPassword.Required">
            <summary>
            Indica si el campo es obligatorio.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldPassword.RewriteRequired">
            <summary>
            Indica si el campo requiere un segundo campo de verificación.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldPassword.Label">
            <summary>
            Devuelve o establece el texto que mostrará la etiqueta del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldPassword.Placeholder">
            <summary>
            Devuelve o establece un texto en el control que desaparece cuando contiene algún valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldPassword.RewriteFieldPlaceholder">
            <summary>
            Devuelve o establece un texto para mostrar en el control de verificación del valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldPassword.Description">
            <summary>
            Devuelve o establece una descripción que aparecerá en pequeño junto al campo (dependiendo de la plantilla de renderización).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldPassword.MinLength">
            <summary>
            Devuelve o establece la longitud (en carácteres) mínima que debe tener el valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldPassword.MaxLength">
            <summary>
            Devuelve o establece la longitud (en carácteres) máxima que debe tener el valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldPassword.Value">
            <summary>
            Devuelve o establece el valor del campo.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldText">
            <summary>
            Implementa un campo de texto simple (Input).
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldText.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador único del componente dentro de la vista.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldText.#ctor(Cosmo.UI.View,System.String,System.String,Cosmo.UI.Controls.FormFieldText.FieldDataType)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador único del componente dentro de la vista.</param>
            <param name="label"></param>
            <param name="type"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldText.#ctor(Cosmo.UI.View,System.String,System.String,Cosmo.UI.Controls.FormFieldText.FieldDataType,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador único del componente dentro de la vista.</param>
            <param name="label"></param>
            <param name="type"></param>
            <param name="value"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldText.LoadValueFromRequest">
            <summary>
            Obtiene el valor del campo a partir de los datos recibidos mediante GET o POST.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldText.Validate">
            <summary>
            Valida el valor del campo.
            </summary>
            <returns><c>true</c> si el valor és aceptable o <c>false</c> si el valor no es válido.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldText.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldText.FieldType">
            <summary>
            Devuelve el tipo de campo implementado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldText.ReadOnly">
            <summary>
            Indictes if the field is read only or can be edited.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldText.Required">
            <summary>
            Indica si el campo es obligatorio.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldText.Label">
            <summary>
            Devuelve o establece el texto que mostrará la etiqueta del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldText.Placeholder">
            <summary>
            Devuelve o establece un texto en el control que desaparece cuando contiene algún valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldText.Description">
            <summary>
            Devuelve o establece una descripción que aparecerá en pequeño junto al campo (dependiendo de la plantilla de renderización).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldText.MinLength">
            <summary>
            Devuelve o establece la longitud (en carácteres) mínima que debe tener el valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldText.MaxLength">
            <summary>
            Devuelve o establece la longitud (en carácteres) máxima que debe tener el valor.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldText.Type">
            <summary>
            Devuelve o establece el valor del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldText.AddonIcon">
            <summary>
            Devuelve o establece el icono que debe aparecer como <em>addon</em>.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldText.Value">
            <summary>
            Devuelve o establece el valor del campo.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldText.FieldDataType">
            <summary>
            Enumera los distintos tipos de contenido que permite albergar el control
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldText.FieldDataType.Color">
            <summary>Color RGB</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldText.FieldDataType.Email">
            <summary>Correo electrónico</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldText.FieldDataType.Number">
            <summary>Número</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldText.FieldDataType.Range">
            <summary>Rango de valores</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldText.FieldDataType.Text">
            <summary>Texto</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldText.FieldDataType.Url">
            <summary>Dirección URL</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldText.FieldDataType.Phone">
            <summary>Teléfono</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.HtmlContentControl">
            <summary>
            Implementa un componente que permite mostrar contenido textual (tipografia) en una página.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.HtmlContentControl.HTML_SPACE">
            <summary>Blank space character.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.HtmlContentControl.HTML_NEW_LINE">
            <summary>New line tag.</summary>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.HtmlContentControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.HtmlContentControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="html">Una cadena que contiene el código HTML que será renderizado.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.AppendHeader(System.Int32,System.String)">
            <summary>
            Agrega un párrafo.
            </summary>
            <param name="level">Header level (1 to 6).</param>
            <param name="text">Texto contenido en el párrafo.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.AppendParagraph(System.String)">
            <summary>
            Agrega un párrafo.
            </summary>
            <param name="text">Texto contenido en el párrafo.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.AppendLineSeparator">
            <summary>
            Agrega una línea separadora entre párrafos o elementos.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.AppendDataTable(System.Collections.Generic.List{Cosmo.Utils.KeyValue})">
            <summary>
            Agrega una tabla de datos.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.AppendUnorderedList(System.Collections.Generic.List{System.String})">
            <summary>
            Agrega una lista (sin órden).
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.AppendLink(System.String,System.String,System.Boolean)">
            <summary>
            Agrega el código HTML correspondiente a un enlace.
            </summary>
            <param name="url">URL</param>
            <param name="text">Tenxto del enlace</param>
            <param name="openInNewWindow">Indica si se debe abrir el enlace en una nueva ventana.</param>
            <returns>Una cadena que contiene el código HTML correspondiente a un enlace.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.AppendDataList(System.Collections.Generic.List{Cosmo.Utils.KeyValue})">
            <summary>
            Adds a data list structure to the HTML content.
            </summary>
            <param name="values">List of values. <c>KeyValue.Label</c> is used as a title, <c>KeyValue.Label</c> is used as a text.</param>
            <returns>The current instance updated with the new data list.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.Link(System.String,System.String,System.Boolean)">
            <summary>
            Devuelve el código HTML correspondiente a un enlace.
            </summary>
            <param name="url">URL</param>
            <param name="text">Tenxto del enlace</param>
            <param name="openInNewWindow">Indica si se debe abrir el enlace en una nueva ventana.</param>
            <returns>Una cadena que contiene el código HTML correspondiente a un enlace.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.BoldText(System.Int32)">
            <summary>
            Mark text as a bold text.
            </summary>
            <param name="number">Numeric value to format as a bold text</param>
            <returns>A string containing formatted number.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.BoldText(System.String)">
            <summary>
            Mark text as a bold text.
            </summary>
            <param name="text">Text to format as a bold text</param>
            <returns>A string containing formatted text.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.EmphatizedText(System.Int32)">
            <summary>
            Mark numeric value as a emphatized text.
            </summary>
            <param name="number">Numeric value to format as a emphatized text</param>
            <returns>A string containing formatted numeric value.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.EmphatizedText(System.String)">
            <summary>
            Mark text as a emphatized text.
            </summary>
            <param name="text">Text to format as a emphatized text</param>
            <returns>A string containing formatted text.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.HtmlContentControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.HtmlContentControl.Html">
            <summary>
            Devuelve o establece el contenido.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.IControlCollectionContainer">
            <summary>
            Interface que deben cumplir los controles que contienen a su vez elementos contenedores,
            como Items, Carrouseles, etc.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.IControlCollectionContainer.NestedContainers">
            <summary>
            Colección de controles contenedores que son la base del control.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.PaginationControl">
            <summary>
            Implementa un control de tiopo Pagination para recorrer una lista por páginas.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.PaginationControl.URL_PAGEID_TAG">
            <summary>
            TAG que debe incluir el patrón URL que será sustituydo por el número de página.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.PaginationControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.PaginationControl"/>
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.PaginationControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PaginationControl.Min">
            <summary>
            Devuelve o establece el número mínimo de página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PaginationControl.Max">
            <summary>
            Devuelve o establece el número máximo de página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PaginationControl.Current">
            <summary>
            Devuelve o establece el número de página actual.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PaginationControl.UrlPattern">
            <summary>
            Devuelve o establece la URL base que servirá para generar la URL particular para cada página.
            Para ello se usa el tag <see cref="F:Cosmo.UI.Controls.PaginationControl.URL_PAGEID_TAG"/> como indicador de número de página.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ProgressBarControl">
            <summary>
            Implementa el componente PopOver de Bootstrap.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ProgressBarControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.PopoverControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ProgressBarControl.#ctor(Cosmo.UI.View,System.Int32,Cosmo.UI.Controls.ComponentColorScheme)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.PopoverControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="percentage"></param>
            <param name="color"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.ProgressBarControl.#ctor(Cosmo.UI.View,System.Int32,Cosmo.UI.Controls.ComponentColorScheme,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.PopoverControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="percentage"></param>
            <param name="color"></param>
            <param name="description"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.ProgressBarControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ProgressBarControl.Percentage">
            <summary>
            Devuelve o establece el título visible del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ProgressBarControl.Color">
            <summary>
            Devuelve o establece el color del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ProgressBarControl.Description">
            <summary>
            Devuelve o establece el texto descriptivo que aparece junto a la barra del progreso.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ProgressBarControl.PopoverDirections">
            <summary>
            Enumera las direcciones posibles del elemento.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ProgressBarControl.PopoverDirections.Right">
            <summary>Orientación derecha</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ProgressBarControl.PopoverDirections.Left">
            <summary>Orientación izquierda</summary>
        </member>
        <member name="T:Cosmo.UI.Scripting.Behaviors.DisableElementBehavior">
            <summary>
            JavaScript Behavior:
            Habilita/deshabilita un determinado elemento del DOM.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Scripting.Behaviors.DisableElementBehavior.#ctor(Cosmo.UI.View,System.String,System.Boolean)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.Behaviors.DisableElementBehavior"/>.
            </summary>
            <param name="viewport">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador del elemento.</param>
            <param name="disabled"><c>true</c> para inhabilitar el elemento o <c>false</c> para habilitarlo.</param>
        </member>
        <member name="M:Cosmo.UI.Scripting.Behaviors.DisableElementBehavior.GetSource">
            <summary>
            Devuelve el código de la senténcia JavaScript.
            </summary>
            <returns>Una cadena que contiene el código JavaScript solicitado.</returns>
        </member>
        <member name="P:Cosmo.UI.Scripting.Behaviors.DisableElementBehavior.DomId">
            <summary>
            Devuelve o establece el identificador del elemento a habilitar/deshabilitar.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Scripting.Behaviors.DisableElementBehavior.Disabled">
            <summary>
            Indica si el elemento seleccionado se debe habilitar o deshabilitar.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Scripting.Behaviors.NavigateBehavior">
            <summary>
            JavaScript Behavior:
            Navega a una determinada URL.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Scripting.Behaviors.NavigateBehavior.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.Behaviors.NavigateBehavior"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="url">Una cadena que contiene la URL dónde se debe navegar.</param>
        </member>
        <member name="M:Cosmo.UI.Scripting.Behaviors.NavigateBehavior.GetSource">
            <summary>
            Devuelve el código de la senténcia JavaScript.
            </summary>
            <returns>Una cadena que contiene el código JavaScript solicitado.</returns>
        </member>
        <member name="P:Cosmo.UI.Scripting.Behaviors.NavigateBehavior.URL">
            <summary>
            Devuelve o establece la URL dónde se desea navegar.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Scripting.Behaviors.UpdateHtmlBehavior">
            <summary>
            JavaScript Behavior:
            Actualiza el contenido (XHTML) de un determinado elemento.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Scripting.Behaviors.UpdateHtmlBehavior.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.Behaviors.NavigateBehavior"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Una cadena que contiene la URL dónde se debe navegar.</param>
        </member>
        <member name="M:Cosmo.UI.Scripting.Behaviors.UpdateHtmlBehavior.GetSource">
            <summary>
            Devuelve el código de la senténcia JavaScript.
            </summary>
            <returns>Una cadena que contiene el código JavaScript solicitado.</returns>
        </member>
        <member name="P:Cosmo.UI.Scripting.Behaviors.UpdateHtmlBehavior.DomID">
            <summary>
            Devuelve o establece el identificador del elemento a actualizar.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Scripting.SimpleScript">
            <summary>
            Representa un script que debe ser adjuntado a una página (o control).
            </summary>
        </member>
        <member name="M:Cosmo.UI.Scripting.SimpleScript.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.SimpleScript"/>.
            </summary>
            <param name="viewport">Instancia de <see cref="T:Cosmo.UI.View"/> que actúa de contenedor del control actual.</param>
        </member>
        <member name="M:Cosmo.UI.Scripting.SimpleScript.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Scripting.SimpleScript"/>.
            </summary>
            <param name="viewport">Instancia de <see cref="T:Cosmo.UI.View"/> que actúa de contenedor del control actual.</param>
            <param name="source">Una cadena que contiene el código JavaScript.</param>
        </member>
        <!-- El comentario XML con formato incorrecto se omite para el miembro "M:Cosmo.UI.Scripting.SimpleScript.#ctor(Cosmo.UI.View,System.Text.StringBuilder)" -->
        <member name="M:Cosmo.UI.Scripting.SimpleScript.GetSource">
            <summary>
            Devuelve el código JavaScript que se debe incorporar en la página.
            </summary>
            <returns>Una cadena que contiene código JavaScript.</returns>
        </member>
        <member name="T:Cosmo.UI.Controls.LayoutContainerControl">
            <summary>
            Implementa una página de Cosmo.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.LayoutContainerControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.LayoutContainerControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.LayoutContainerControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.LayoutContainerControl.FadeBackground">
            <summary>
            Indica si se debe mostrar el fondo del <em>layout</em> descolorido (o en un color alternativo).
            Esto permite, por ejemplo, mostrar páginas con un solo control como <em>Login</em>, <em>Registro</em>, etc.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.LayoutContainerControl.Header">
            <summary>
            Devuelve o establece la lista de controles que contiene la cabecera.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.LayoutContainerControl.Footer">
            <summary>
            Devuelve o establece la lista de controles que contiene el pie.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.LayoutContainerControl.LeftContent">
            <summary>
            Devuelve o establece la lista de controles que contiene la columna izquierda.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.LayoutContainerControl.MainContent">
            <summary>
            Devuelve o establece la lista de controles que contiene la zona de contenidos de la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.LayoutContainerControl.RightContent">
            <summary>
            Devuelve o establece la lista de controles que contiene la columna derecha.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.LayoutContainerControl.IsSingleControlLayout">
            <summary>
            Indica si se trata de una página que sólo muestra un control.
            Las páginas de un sólo control permiten, por ejemplo, implementar formularios, login, registro, etc.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.TabItemControl">
            <summary>
            Implementa una pestaña que puede contener controles.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.TabItemControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.TabbedContainerControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.TabItemControl.#ctor(Cosmo.UI.View,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.TabbedContainerControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="id"></param>
            <param name="caption"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.TabItemControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TabItemControl.Caption">
            <summary>
            Devuelve o establece el texto visible de la pestaña.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TabItemControl.Active">
            <summary>
            Indica si es la pestaña activa.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TabItemControl.Color">
            <summary>
            Devuelve o establece el color de la pestaña.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TabItemControl.Content">
            <summary>
            Lista de controles que contiene la pestaña.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TabItemControl.Icon">
            <summary>
            Devuelve o establece código del icono que aparecerá junto al título de la pestaña.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.TabbedContainerControl">
            <summary>
            Implementa un panel con pestañas.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.TabbedContainerControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.TabbedContainerControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.TabbedContainerControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TabbedContainerControl.TabItems">
            <summary>
            Lista de pestañas que contiene el control.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TabbedContainerControl.NestedContainers">
            <summary>
            Colección de controles contenedores que son la base del control.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.TimelineControl">
            <summary>
            Implementa el control Timeline.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.TimelineControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.TimelineControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.TimelineControl.clear">
            <summary>
            Limpia todos los elementos de la línea de tiempo.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.TimelineControl.AddItem(Cosmo.UI.Controls.TimelineItem)">
            <summary>
            Añade un nuevo elemento a la línea de tiempo.
            </summary>
            <param name="item">La instancia de <see cref="T:Cosmo.UI.Controls.TimelineItem"/> a añadir.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.TimelineControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TimelineControl.Items">
            <summary>
            Contiene la lista de elementos de la línea de timepo.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.TimelineItem">
            <summary>
            Representa un elemento insertable en un control <see cref="T:Cosmo.UI.Controls.TimelineControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.TimelineItem.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.TimelineItem"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.TimelineItem.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TimelineItem.ID">
            <summary>
            Devuelve o establece el identificador del elemento.
            Algunos renderizadores usan esta propiedad para identificar al elemento de forma única y 
            acceder a és mediante JavaScript.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TimelineItem.Title">
            <summary>
            Devuelve o establece el título del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TimelineItem.TitleControl">
            <summary>
            Gets or sets the control which will be rendered as the title.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TimelineItem.Time">
            <summary>
            Devuelve o establece el texto que indica el tiempo de publicación.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TimelineItem.Body">
            <summary>
            Devuelve o establece el contenido del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TimelineItem.Label">
            <summary>
            Devuelve o establece el contenido del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TimelineItem.Icon">
            <summary>
            Devuelve o establece el código del icono a mostrar junto al elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TimelineItem.Color">
            <summary>
            Devuelve o establece el color del icono a mostrar junto al elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TimelineItem.BackgroundColor">
            <summary>
            Devuelve o establece el color de fondo del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TimelineItem.Type">
            <summary>
            Devuelve o establece el tipo de elemento a representar.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TimelineItem.Buttons">
            <summary>
            Permite acceder a la barra de botones que se situa al lado del marcador de tiempo.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.TimelineItem.TimelineItemType">
            <summary>
            Enumera los tipos de elemento que se pueden insertar en un control <see cref="T:Cosmo.UI.Controls.TimelineControl"/>.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.TimelineItem.TimelineItemType.Label">
            <summary>Etiqueta.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.TimelineItem.TimelineItemType.Entry">
            <summary>Entrada en el diario.</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.TreeViewChildItemControl">
            <summary>
            Implementa un elemento del componente <see cref="T:Cosmo.UI.Controls.TreeViewControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.TreeViewChildItemControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ListItem"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.TreeViewChildItemControl.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ListItem"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador del componente en una vista (DOM).</param>
        </member>
        <member name="M:Cosmo.UI.Controls.TreeViewChildItemControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TreeViewChildItemControl.Caption">
            <summary>
            Devuelve o establece el título visible del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TreeViewChildItemControl.Description">
            <summary>
            Devuelve o establece el texto descriptivo del elemento.
            No soporta XHTML, sólo texto.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TreeViewChildItemControl.Href">
            <summary>
            Devuelve o establece la URL asociada al elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TreeViewChildItemControl.Icon">
            <summary>
            Devuelve o establece el código del icono a mostrar junto al título del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TreeViewChildItemControl.BadgeText">
            <summary>
            Devuelve o establece el texto que aparecerá como <em>badge</em> (usualmente para indicar, por ejemplo, el número de elementos en un categoria).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TreeViewChildItemControl.IsActive">
            <summary>
            Indica si el elemento debe mostrarse como activo (resaltado).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TreeViewChildItemControl.Type">
            <summary>
            Devuelve o establece el estilo de marcado del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TreeViewChildItemControl.ChildItems">
            <summary>
            Devuelve o establece la lista de hijos de la rama actual.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.PageHeaderControl">
            <summary>
            Implementa un control para incrustar en la cabecera de un documento o página y que permite mostrar
            el título del contenido, un breadcrumb, etc.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.PageHeaderControl.#ctor(Cosmo.UI.View)">
            <summary>
            Gets an instance of <see cref="T:Cosmo.UI.Controls.PageHeaderControl"/>.
            </summary>
            <param name="parentView">Owner view of the control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.PageHeaderControl.Initialize">
            <summary>
            Initializes the instance.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PageHeaderControl.Title">
            <summary>
            Devuelve o establece el título de la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PageHeaderControl.SubTitle">
            <summary>
            Devuelve o establece el subtítulo de la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PageHeaderControl.Icon">
            <summary>
            Devuelve o establece el icono que acompaña el título.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PageHeaderControl.Breadcrumb">
            <summary>
            Devuelve o establece el componente que permite integrar una ruta a la cabecera de página.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.SidebarControl">
            <summary>
            Implementa el control Sidebar (barra lateral de menú).
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.SidebarControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.SidebarControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.SidebarControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.SidebarControl.Buttons">
            <summary>
            Devuelve o establece el texto que se mostrará en la etiqueta (<c>badge</c>).
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.SidebarButton">
            <summary>
            Implementa un botón insertable en un control <see cref="T:Cosmo.UI.Controls.SidebarControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.SidebarButton.#ctor(Cosmo.UI.View)">
            <summary>
            Gets an instance of <see cref="T:Cosmo.UI.Controls.SidebarButton"/>.
            </summary>
            <param name="parentViewport">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.SidebarButton.#ctor(Cosmo.UI.View,System.String,System.String)">
            <summary>
            Gets an instance of <see cref="T:Cosmo.UI.Controls.SidebarButton"/>.
            </summary>
            <param name="parentViewport">Página o contenedor dónde se representará el control.</param>
            <param name="caption"></param>
            <param name="href"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.SidebarButton.#ctor(Cosmo.UI.View,System.String,System.String,System.String)">
            <summary>
            Gets an instance of <see cref="T:Cosmo.UI.Controls.SidebarButton"/>.
            </summary>
            <param name="parentViewport">Página o contenedor dónde se representará el control.</param>
            <param name="caption"></param>
            <param name="href"></param>
            <param name="icon"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.SidebarButton.SetRoles(System.String)">
            <summary>
            Set the roles list from a comma separated values list.
            </summary>
            <param name="rolesCsvList">Vomma separated values list of roles.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.SidebarButton.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.SidebarButton.Active">
            <summary>
            Indica si el elemento actual de la barra es el activo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.SidebarButton.Caption">
            <summary>
            Devuelve o establece el texto visible del control.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.SidebarButton.Href">
            <summary>
            Devuelve o establece la URL de destino (enlace).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.SidebarButton.Icon">
            <summary>
            Devuelve o establece el código del icono a mostrar junto al texto.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.SidebarButton.BadgeText">
            <summary>
            Devuelve o establece el texto que se mostrará en la etiqueta (<c>badge</c>).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.SidebarButton.SubItems">
            <summary>
            Devuelve o establece el texto que se mostrará en la etiqueta (<c>badge</c>).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.SidebarButton.Roles">
            <summary>
            Gets or sets the roles list allowed to view this element.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.TreeViewControl">
            <summary>
            Componente UI que implementa un árbol desplegable.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.TreeViewControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.TreeViewControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.TreeViewControl.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.TreeViewControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador del componente en una vista (DOM).</param>
        </member>
        <member name="M:Cosmo.UI.Controls.TreeViewControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TreeViewControl.Collapsed">
            <summary>
            Indica si se debe renderizar el control con los nodos colapsados.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TreeViewControl.ChildItems">
            <summary>
            Devuelve o establece la lista de elementos hijo que penden de la rama principal del árbol.
            </summary>
        </member>
        <member name="T:Cosmo.UI.PageView">
            <summary>
            Implementa una página de Cosmo que se genera si usar la capa System.Web.UI.
            </summary>
        </member>
        <member name="F:Cosmo.UI.PageView.LINK_TOP_PAGE">
            <summary>Nombre del enlace interno de inicio de página</summary>
        </member>
        <member name="M:Cosmo.UI.PageView.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.PageView"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.PageView.StartViewLifecycle">
            <summary>
            Inicia el ciclo de vida de la vista.
            </summary>
        </member>
        <member name="M:Cosmo.UI.PageView.ShowError(System.String,System.String)">
            <summary>
            Muestra un mensaje de error.
            </summary>
            <param name="title">Título del error.</param>
            <param name="description">Descripción del error.</param>
        </member>
        <member name="M:Cosmo.UI.PageView.ShowError(System.Exception)">
            <summary>
            Muestra un mensaje de error.
            </summary>
            <param name="exception">Excepción a mostrar.</param>
        </member>
        <member name="M:Cosmo.UI.PageView.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.PageView.Layout">
            <summary>
            Devuelve la estructura de página (contenedor de controles).
            </summary>
        </member>
        <member name="P:Cosmo.UI.PageView.Title">
            <summary>
            Devuelve o establece el título de la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.PageView.Description">
            <summary>
            Devuelve o establece la descripción del contenido de la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.PageView.Keywords">
            <summary>
            Devuelve o establece las palabras clave que definene el contenido de la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.PageView.FadeBackground">
            <summary>
            Indica si se debe mostrar el fondo del <em>layout</em> descolorido (o en un color alternativo dependiendo de la plantilla y/o el renderizador).
            Esto permite, por ejemplo, mostrar páginas con un solo control como <em>Login</em>, <em>Registro</em>, etc.
            </summary>
        </member>
        <member name="P:Cosmo.UI.PageView.HeaderContent">
            <summary>
            Devuelve o establece la lista de controles que contiene la cabecera.
            </summary>
        </member>
        <member name="P:Cosmo.UI.PageView.FooterContent">
            <summary>
            Devuelve o establece la lista de controles que contiene el pie.
            </summary>
        </member>
        <member name="P:Cosmo.UI.PageView.LeftContent">
            <summary>
            Devuelve o establece la lista de controles que contiene la columna izquierda.
            </summary>
        </member>
        <member name="P:Cosmo.UI.PageView.MainContent">
            <summary>
            Devuelve o establece la lista de controles que contiene la zona de contenidos de la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.PageView.RightContent">
            <summary>
            Devuelve o establece la lista de controles que contiene la columna derecha.
            </summary>
        </member>
        <member name="P:Cosmo.UI.PageView.ActiveMenuId">
            <summary>
            Devuelve o establece el identificador del elemento de menú que debe mostrarse activo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.PageView.Modals">
            <summary>
            Lista de ventanas modales que se van a invocar desde la vista actual.
            </summary>
        </member>
        <member name="T:Cosmo.UI.ViewResource">
            <summary>
            Representa un recurso necesario para representar una página XHTML de Cosmo.
            </summary>
        </member>
        <member name="M:Cosmo.UI.ViewResource.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.ViewResource"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.ViewResource.#ctor(Cosmo.UI.ViewResource.ResourceType,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.ViewResource"/>.
            </summary>
            <param name="type">Tipo de recurso.</param>
            <param name="filePath">Ruta al recurso.</param>
        </member>
        <member name="M:Cosmo.UI.ViewResource.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.ViewResource.Type">
            <summary>
            Devuelve o establece el tipo de recurso.
            </summary>
        </member>
        <member name="P:Cosmo.UI.ViewResource.FilePath">
            <summary>
            Devuelve o establece el nombre del archivo (y la ruta de acceso).
            </summary>
        </member>
        <member name="T:Cosmo.UI.ViewResource.ResourceType">
            <summary>
            Enumera los tipos de recurso admitidos.
            </summary>
        </member>
        <member name="F:Cosmo.UI.ViewResource.ResourceType.CSS">
            <summary>Hoja de estilos CSS.</summary>
        </member>
        <member name="F:Cosmo.UI.ViewResource.ResourceType.JavaScript">
            <summary>Archivo de código JavaScript.</summary>
        </member>
        <member name="T:Cosmo.UI.CosmoTemplate">
            <summary>
            Implementa un fragmento de página que se puede refrescar mediante AJAX.
            Indicado para listados y otros elementos dinámicos.
            </summary>
        </member>
        <member name="M:Cosmo.UI.CosmoTemplate.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.CosmoTemplate"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.CosmoTemplate.LoadTemplate">
            <summary>
            Método invocado durante la carga de la página.
            </summary>
        </member>
        <member name="M:Cosmo.UI.CosmoTemplate.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Evento que se lanza al recibir una petición.
            Equivale al ciclo de vida de la página.
            </summary>
            <param name="context">Contexto del servidor en el momento de la llamada.</param>
        </member>
        <member name="M:Cosmo.UI.CosmoTemplate.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.UI.CosmoTemplate.CheckSecurityConstrains">
            <summary>
            Comprueba las reglas de seguridad para acceder a la página actual.
            </summary>
        </member>
        <member name="M:Cosmo.UI.CosmoTemplate.ShowError(System.String,System.String)">
            <summary>
            Muestra un mensaje de error.
            </summary>
            <param name="title">Título del error.</param>
            <param name="description">Descripción del error.</param>
        </member>
        <member name="M:Cosmo.UI.CosmoTemplate.ShowError(System.Exception)">
            <summary>
            Muestra un mensaje de error.
            </summary>
            <param name="exception">Excepción a mostrar.</param>
        </member>
        <member name="P:Cosmo.UI.CosmoTemplate.DomID">
            <summary>
            Devuelve o establece el identificador del elemento en la estructura DOM de la página web.
            </summary>
        </member>
        <member name="P:Cosmo.UI.CosmoTemplate.Request">
            <summary>
            Devuelve una instancia de <see cref="T:System.Web.HttpRequest"/> que representa el contexto de llamada a la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.CosmoTemplate.Content">
            <summary>
            Devuelve o establece la lista de controles que contiene la cabecera.
            </summary>
        </member>
        <member name="P:Cosmo.UI.CosmoTemplate.IsAuthenticated">
            <summary>
            Indica si existe un usuario autenticado.
            </summary>
            <returns><c>true</c> si existe una sesión autenticada o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="P:Cosmo.UI.CosmoTemplate.Parameters">
            <summary>
            Devuelve la colección de parámetros de llamada (o de un formulario) que ha recibido la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.CosmoTemplate.IsReusable">
            <summary>
            Indica al servidor web si la instancia es rehusable.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Menu.IMenuProvider">
            <summary>
            Clase abstracta que deben implementar los proveedores de menú.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Menu.IMenuProvider.XML_MENUITEM_TAG">
            <summary>Tag XML que contiene la definición del elemento de menú</summary>
        </member>
        <member name="F:Cosmo.UI.Menu.IMenuProvider.XML_MENUITEM_ATTRIB_ID">
            <summary>Atributo XML que contiene el identificador del elemento de menú</summary>
        </member>
        <member name="F:Cosmo.UI.Menu.IMenuProvider.XML_MENUITEM_ATTRIB_NAME">
            <summary>Atributo XML que contiene el nombre del elemento de menú</summary>
        </member>
        <member name="F:Cosmo.UI.Menu.IMenuProvider.XML_MENUITEM_ATTRIB_HREF">
            <summary>Atributo XML que contiene el enlace del elemento de menú</summary>
        </member>
        <member name="F:Cosmo.UI.Menu.IMenuProvider.XML_MENUITEM_ATTRIB_ICON">
            <summary>Atributo XML que contiene el icono del elemento de menú</summary>
        </member>
        <member name="F:Cosmo.UI.Menu.IMenuProvider.XML_MENUITEM_ATTRIB_TYPE">
            <summary>Atributo XML que contiene el tipo de elemento de menú</summary>
        </member>
        <member name="F:Cosmo.UI.Menu.IMenuProvider.XML_MENUITEM_ATTRIB_ROLES">
            <summary>XML attribute that contains the roles authorized to view the element.</summary>
        </member>
        <member name="F:Cosmo.UI.Menu.IMenuProvider.MENUITEM_TYPE_NORMAL">
            <summary>Tipo de elemento de menú estándar</summary>
        </member>
        <member name="F:Cosmo.UI.Menu.IMenuProvider.MENUITEM_TYPE_BRAND">
            <summary>Tipo de elemento de menú que contiene el logotipo de la aplicación</summary>
        </member>
        <member name="F:Cosmo.UI.Menu.IMenuProvider.MENUITEM_TYPE_PROFILE">
            <summary>Tipo de elemento de menú para perfil de usuario</summary>
        </member>
        <member name="F:Cosmo.UI.Menu.IMenuProvider.MENUITEM_TYPE_PRIVATEMESSAGES">
            <summary>Tipo de elemento de menú para mensajes privados</summary>
        </member>
        <member name="M:Cosmo.UI.Menu.IMenuProvider.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Menu.IMenuProvider"/>.
            </summary>
            <param name="workspace">Una instancia del workspace actual.</param>
            <param name="plugin">Una instancia de <see cref="P:Cosmo.UI.Menu.IMenuProvider.Plugin"/> que contiene  todas las propiedades para instanciar y configurar el módulo.</param>
        </member>
        <member name="M:Cosmo.UI.Menu.IMenuProvider.GenerateSidebar(Cosmo.UI.View,System.String)">
            <summary>
            Genera un menú usando un control <see cref="T:Cosmo.UI.Controls.SidebarControl"/>.
            </summary>
            <param name="activeMenuItemId">Identificador del elemento activo actualmente.</param>
            <returns>Una instancia de <see cref="T:Cosmo.UI.Controls.SidebarControl"/> que representa el menú solicitado.</returns>
        </member>
        <member name="M:Cosmo.UI.Menu.IMenuProvider.GenerateNavbar(Cosmo.UI.View,System.String)">
            <summary>
            Genera un menú usando un control <see cref="T:Cosmo.UI.Controls.NavbarControl"/>.
            </summary>
            <param name="activeMenuItemId">Una cadena que contiene el identificador del elemento de menú que debe aparecer activo.</param>
            <returns>Una instancia de <see cref="T:Cosmo.UI.Controls.NavbarControl"/> convenientemente configurada y lista para ser renderizada.</returns>
        </member>
        <member name="M:Cosmo.UI.Menu.IMenuProvider.ConvertToSidebarButton(Cosmo.UI.View,Cosmo.UI.Menu.MenuItem,System.String)">
            <summary>
            Convierte la instancia <see cref="T:Cosmo.UI.Menu.MenuItem"/> en <see cref="T:Cosmo.UI.Controls.SidebarButton"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Menu.IMenuProvider.ConvertToNavbarButton(Cosmo.UI.View,Cosmo.UI.Menu.MenuItem,System.String)">
            <summary>
            Convierte la instancia <see cref="T:Cosmo.UI.Menu.MenuItem"/> en <see cref="T:Cosmo.UI.Controls.NavbarIButtonControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Menu.IMenuProvider.GetBrand(System.Collections.Generic.List{Cosmo.UI.Menu.MenuItem})">
            <summary>
            Obtiene el elemento de menú que contiene el logotipo de la aplicación.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Menu.IMenuProvider.Workspace">
            <summary>
            Devuelve una instancia del workspace actual.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Menu.IMenuProvider.Plugin">
            <summary>
            Devuelve una instancia del workspace actual.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Menu.IMenuProvider.ID">
            <summary>
            Devuelve el nombre (ID) del módulo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Menu.IMenuProvider.MenuItems">
            <summary>
            Devuelve o establece los elementos de menú que ha obtenido el proveedor.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Menu.Impl.DbMenuProviderImpl">
            <summary>
            Implementa un proveedor de menús de aplicación que obtiene las opciones de una base de datos.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Menu.Impl.DbMenuProviderImpl.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Menu.Impl.DbMenuProviderImpl"/>.
            </summary>
            <param name="workspace">Una instancia del workspace actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que contiene  todas las propiedades para instanciar y configurar el módulo.</param>
        </member>
        <member name="T:Cosmo.UI.Menu.Impl.StaticMenuProviderImpl">
            <summary>
            Implementa un proveedor de menús de aplicación que obtiene las distintas opciones del archivo de configuración del workspace.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Menu.Impl.StaticMenuProviderImpl.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Menu.Impl.StaticMenuProviderImpl"/>.
            </summary>
            <param name="workspace">Una instancia del workspace actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que contiene  todas las propiedades para instanciar y configurar el módulo.</param>
        </member>
        <member name="M:Cosmo.UI.Menu.Impl.StaticMenuProviderImpl.LoadMenu(System.Xml.XmlNode)">
            <summary>
            Carga el menú a partir de la información XML contenida dentro de la definición de Plugin.
            </summary>
        </member>
        <member name="T:Cosmo.Utils.Collections">
            <summary>
            Clase <em>helper</em> para la manipulación de colecciones.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Collections.ContainsKey(System.Collections.Specialized.NameObjectCollectionBase,System.String)">
            <summary>
            Indica si existe una determinada clave en una colección.
            </summary>
            <param name="collection">Colección a analizar.</param>
            <param name="key">Clave que se desea rastrear.</param>
            <returns><c>true</c> si la colección contiene la clave proporcionada o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="T:Cosmo.Utils.ControlCollection">
            <summary>
            Implementa un contenedor de controles UI.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Utils.ControlCollection"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.#ctor(System.Type)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Utils.ControlCollection"/>.
            </summary>
            <param name="type">Tipo de objetos que admite la colección (todas las instancias deben descender directamente de este tipo).</param>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.Clear">
            <summary>
            Vacía la colección y elimina todo su contenido.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.Get(System.Int32)">
            <summary>
            Obtiene un determinado control.
            </summary>
            <param name="index">Índice del control a obtener.</param>
            <returns>La instancia de <see cref="T:Cosmo.UI.Controls.Control"/> solicitada o <c>null</c> si el control no existe o no está accesible.</returns>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.Get(System.String)">
            <summary>
            Obtiene un determinado control.
            </summary>
            <param name="domId">Identificador del control que se desea obtener.</param>
            <returns>La instancia de <see cref="T:Cosmo.UI.Controls.Control"/> solicitada o <c>null</c> si el control no existe o no está accesible.</returns>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.Get(System.String,System.Boolean)">
            <summary>
            Obtiene un determinado control.
            </summary>
            <param name="domId">Identificador del control que se desea obtener.</param>
            <param name="throwExceptionOnMissingControl">Indica si en caso de no encontrar el control solicitado debe generar una excepción (<c>true</c>) o debe devolver un valor <c>null</c> (<c>false</c>).</param>
            <returns>La instancia de <see cref="T:Cosmo.UI.Controls.Control"/> solicitada o <c>null</c> si el control no existe o no está accesible.</returns>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.Remove(System.String)">
            <summary>
            Elimina un control de la colección.
            </summary>
            <param name="id">Identificador del elemento a eliminar.</param>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.GetByControlType(System.Type)">
            <summary>
            Obtiene todos los controles de un determinado tipo.
            </summary>
            <param name="controlType">Tipo de control a obtener.</param>
            <returns>La lista de controles solicitada.</returns>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.GetFormFields">
            <summary>
            Obtiene todos los campos de formulario de la colección.
            </summary>
            <param name="controlType">Tipo de control a obtener.</param>
            <returns>La lista de controles solicitada.</returns>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.Add(Cosmo.UI.Controls.Control)">
            <summary>
            Agrega un nuevo control a la colección.
            </summary>
            <param name="control">Instancia de <see cref="T:Cosmo.UI.Controls.Control"/> a agregar.</param>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.Add(Cosmo.Utils.ControlCollection)">
            <summary>
            Agrega los controles contenidops en otra colección de controles.
            </summary>
            <param name="control">Instancia de <see cref="T:Cosmo.Utils.ControlCollection"/> a agregar.</param>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.Remove(Cosmo.UI.Controls.Control)">
            <summary>
            Elimina un determinado control de la colección.
            </summary>
            <param name="control">Instancia de <see cref="T:Cosmo.UI.Controls.Control"/> a eliminar.</param>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.GetEnumerator">
            <summary>
            Obtiene el <see cref="!:IEnumerator"/> que permite que la colección sea enumerable.
            </summary>
            <returns>Una instancia de <see cref="!:IEnumerator"/>.</returns>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Devuelve el enumerador de la coelcción.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.ControlCollection.ImplementsIControlCollectionContainer(System.Type)">
            <summary>
            Indica si un determinado tipo implementa el interface <see cref="T:Cosmo.UI.Controls.IControlCollectionContainer"/>.
            </summary>
            <param name="type">Tipo a evaluar.</param>
            <returns><c>true</c> si el tipo especificado implementa el interface o <c>false</c> en cualquir otro caso.</returns>
        </member>
        <member name="P:Cosmo.Utils.ControlCollection.Count">
            <summary>
            Devuelve el número de controles que contiene la colección.
            </summary>
        </member>
        <member name="T:Cosmo.Utils.PluginCollection">
            <summary>
            Implementa una colección de plugins.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.PluginCollection.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Utils.PluginCollection"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.PluginCollection.AddPlugin(Cosmo.Utils.Plugin)">
            <summary>
            Agrega un nuevo plugin de forma segura a la colección evitando duplicados en los identificadores.
            </summary>
            <param name="plugin">La instancia de <see cref="T:Cosmo.Utils.Plugin"/> que se desea agregar.</param>
        </member>
        <member name="M:Cosmo.Utils.PluginCollection.GetDefaultPlugin">
            <summary>
            Devuelve el plugin seleccionado por defecto.
            </summary>
            <returns>Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> seleccionado por defecto o <c>null</c> si no se encuentra o no está definido.</returns>
        </member>
        <member name="M:Cosmo.Utils.PluginCollection.GetPlugin(System.String)">
            <summary>
            Obtiene un plugin a partir de su identificador único en la colección.
            </summary>
            <param name="pluginId">Identificador único del plugin.</param>
            <returns>La instancia de <see cref="T:Cosmo.Utils.Plugin"/> solicitada o <c>null</c> si no existe el identificador en la colección.</returns>
        </member>
        <member name="M:Cosmo.Utils.PluginCollection.LoadPluginCollection(System.Xml.XmlDocument,System.String)">
            <summary>
            Devuelve una lista de <em>plugins</em> del mismo tipo.
            </summary>
            <param name="xmlDoc">Documento XML que contiene los TAGs XML que definen a un tipo de <em>plugins</em>.</param>
            <param name="pluginTagName">Nombre del TAG que contiene el <em>plugin</em>.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Utils.PluginCollection.LoadPluginCollection(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            Devuelve una lista de <em>plugins</em> del mismo tipo.
            </summary>
            <param name="xmlDoc">Documento XML que contiene los TAGs XML que definen a un tipo de <em>plugins</em>.</param>
            <param name="defaultAttributeName"></param>
            <param name="pluginTagName">Nombre del TAG que contiene el <em>plugin</em>.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Utils.PluginCollection.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.PluginCollection.ReadPlugin(System.Xml.XmlNode)">
            <summary>
            Lee las propiedades de un <em>plugin</em>.
            </summary>
            <param name="xmlNode">Nodo que contiene la definición del <em>plugin</em>.</param>
        </member>
        <member name="P:Cosmo.Utils.PluginCollection.DefaultPluginId">
            <summary>
            Devuelve o establece el identificador del plugin seleccionado por defecto.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.PluginCollection.Plugins">
            <summary>
            Contiene la lista 
            </summary>
        </member>
        <member name="T:Cosmo.Utils.XmlUtilities">
            <summary>
            Clase <em>helper</em> con diversasutilidades para tratar documentos XML.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.XmlUtilities.ReadTagParameter(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            Obtiene el valor de un parámetro de un TAG determinado.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.XmlUtilities.ReplaceTags(System.String)">
            <summary>
            Reemplaza los valores variables en un valor obtenido de un nodo o atributo XML.
            </summary>
            <param name="value">Valor original a analizar.</param>
            <returns>Valor original con las variables transformadas.</returns>
        </member>
        <member name="T:Cosmo.WebApp.Admin.AdminUserData">
            <summary>
            Cosmo Common Pages
            Implementa el espacio dónde el usuario puede modificar los datos de su suscripción.
            </summary>
            <remarks>
            Author : Gerard Llort
            Version: 1.0.0
            Copyright (c) InforGEST
            </remarks>
        </member>
        <member name="M:Cosmo.WebApp.Admin.AdminUserData.FormDataLoad(System.String)">
            <summary>
            Método invocado antes de renderizar todo forumario (excepto cuando se reciben datos invalidos).
            </summary>
            <param name="formDomID">Identificador (DOM) del formulario a renderizar.</param>
        </member>
        <member name="M:Cosmo.WebApp.Admin.AdminUserData.GetUrl(System.Int32)">
            <summary>
            Return the appropiate URL to call this view.
            </summary>
            <param name="userId">User identifier.</param>
            <returns>A string containing the requested URL.</returns>
        </member>
        <member name="T:Cosmo.WebApp.FileSystemServices.ModalFormUpload">
            <summary>
            Implementa un formulario modal para subir archivos al servidor.
            </summary>
        </member>
        <member name="M:Cosmo.WebApp.FileSystemServices.ModalFormUpload.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.WebApp.FileSystemServices.ModalFormUpload"/>.
            </summary>
        </member>
        <member name="M:Cosmo.WebApp.FileSystemServices.ModalFormUpload.#ctor(System.Int32)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.WebApp.FileSystemServices.ModalFormUpload"/>.
            </summary>
            <param name="objectId">Identificador del objeto al que va asociado el contenido subido.</param>
        </member>
        <member name="M:Cosmo.WebApp.FileSystemServices.ModalFormUpload.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.WebApp.FileSystemServices.ModalFormUpload.ObjectID">
            <summary>
            Devuelve o establece el identificador del objeto al que va asociado el contenido subido.
            </summary>
        </member>
        <member name="M:Cosmo.WebApp.Common.Model.PasswordRecoveryData.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.WebApp.Common.Model.PasswordRecoveryData"/>.
            </summary>
        </member>
        <member name="M:Cosmo.WebApp.Common.Model.PasswordRecoveryData.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.WebApp.Common.Model.PasswordRecoveryData.Mail">
            <summary>
            Cuenta de correo electrónico principal
            </summary>
        </member>
        <member name="M:Cosmo.WebApp.UserServices.UserAuth.FormDataReceived(Cosmo.UI.Controls.FormControl)">
            <param name="receivedForm">Una instancia de <see cref="T:Cosmo.UI.Controls.FormControl"/> que representa el formulario recibido. El formulario está actualizado con los datos recibidos.</param>
        </member>
        <member name="M:Cosmo.WebApp.UserServices.UserAuth.FormDataLoad(System.String)">
            <summary>
            Método invocado antes de renderizar todo forumario (excepto cuando se reciben datos invalidos).
            </summary>
            <param name="formDomID">Identificador (DOM) del formulario a renderizar.</param>
        </member>
        <member name="T:Cosmo.WebApp.UserServices.UserData">
            <summary>
            Cosmo Common Pages
            Implementa el espacio dónde el usuario puede modificar los datos de su suscripción.
            </summary>
            <remarks>
            Author : Gerard Llort
            Version: 1.0.0
            Copyright (c) InforGEST
            </remarks>
        </member>
        <member name="M:Cosmo.WebApp.UserServices.UserData.FormDataLoad(System.String)">
            <summary>
            Método invocado antes de renderizar todo forumario (excepto cuando se reciben datos invalidos).
            </summary>
            <param name="formDomID">Identificador (DOM) del formulario a renderizar.</param>
        </member>
        <member name="T:Cosmo.WebApp.UserServices.UserDataModal">
            <summary>
            Implements a view that show the user public data.
            </summary>
        </member>
        <member name="M:Cosmo.WebApp.UserServices.UserDataModal.#ctor">
            <summary>
            Gets an instance of <see cref="T:Cosmo.WebApp.UserServices.UserDataModal"/>.
            </summary>
        </member>
        <member name="M:Cosmo.WebApp.UserServices.UserDataModal.#ctor(System.Int32)">
            <summary>
            Gets an instance of <see cref="T:Cosmo.WebApp.UserServices.UserDataModal"/>.
            </summary>
            <param name="userId">User identifier.</param>
        </member>
        <member name="P:Cosmo.WebApp.UserServices.UserDataModal.UserID">
            <summary>
            Gets or sets the user identifier.
            </summary>
        </member>
        <member name="T:Cosmo.WebApp.UserServices.UserJoin">
            <summary>
            Formulario de alta para nuevos usuarios.
            </summary>
            <remarks>
            Author : Gerard Llort
            Version: 1.0.0
            Copyright (c) InforGEST
            </remarks>
        </member>
        <member name="M:Cosmo.WebApp.UserServices.UserJoin.FormDataLoad(System.String)">
            <summary>
            Método invocado antes de renderizar todo forumario (excepto cuando se reciben datos invalidos).
            </summary>
            <param name="formDomID">Identificador (DOM) del formulario a renderizar.</param>
        </member>
        <member name="T:Cosmo.WebApp.UserServices.UserJoinVerification">
            <summary>
            Formulario de verificación de nuevas cuentas de usuario.
            </summary>
            <remarks>
            Author : Gerard Llort
            Version: 1.0.0
            Copyright (c) InforGEST
            </remarks>
        </member>
        <member name="F:Cosmo.WebApp.UserServices.UserJoinVerification.PARAM_VERIFY_KEY">
            <summary>Parámetro que contiene la clave de verificación de una cuenta de correo.</summary>
        </member>
        <member name="M:Cosmo.WebApp.UserServices.UserJoinVerification.FormDataLoad(System.String)">
            <summary>
            Método invocado antes de renderizar todo forumario (excepto cuando se reciben datos invalidos).
            </summary>
            <param name="formDomID">Identificador (DOM) del formulario a renderizar.</param>
        </member>
        <member name="M:Cosmo.WebApp.UserServices.UserPasswordRecovery.FormDataLoad(System.String)">
            <summary>
            Método invocado antes de renderizar todo forumario (excepto cuando se reciben datos invalidos).
            </summary>
            <param name="formDomID">Identificador (DOM) del formulario a renderizar.</param>
        </member>
        <member name="T:Cosmo.WorkspaceSettingsException">
            <summary>
            Se produce cuando un módulo de renderizado no puede renderizar un determinado control.
            </summary>
        </member>
        <member name="M:Cosmo.WorkspaceSettingsException.#ctor">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
        </member>
        <member name="M:Cosmo.WorkspaceSettingsException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.WorkspaceSettingsException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Data.DataService">
            <summary>
            Implementa el sericio de acceso a datos de Cosmo.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DataService.#ctor(Cosmo.Workspace)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.DataService"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace"/> que representa el espacio de trabajo actual.</param>
        </member>
        <member name="M:Cosmo.Data.DataService.GetDataSource">
            <summary>
            Devuelve el DataSource por defecto.
            </summary>
            <returns>La instancia solicitada de <see cref="T:Cosmo.Data.Connection.IDataModule"/>.</returns>
        </member>
        <member name="M:Cosmo.Data.DataService.GetDataSource(System.String)">
            <summary>
            Devuelve el DataSource solicitado.
            </summary>
            <param name="name">Identificador de la conexión que se desea obtener.</param>
            <returns>La instancia solicitada de <see cref="T:Cosmo.Data.Connection.IDataModule"/>.</returns>
        </member>
        <member name="M:Cosmo.Data.DataService.GetDataList(System.String)">
            <summary>
            Obtiene una determinada lista.
            </summary>
            <param name="name">Identificador de la lista que se desea obtener.</param>
            <returns>La instancia solicitada de <see cref="T:Cosmo.Data.Lists.IDataList"/>.</returns>
        </member>
        <member name="M:Cosmo.Data.DataService.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DataService.LoadDataModules">
            <summary>
            Carga los datasources definidos en la configuración y selecciona el datasource por defecto.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DataService.LoadDataLists">
            <summary>
            Carga las listas de datos definidas en la configuración.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DataService.CheckInstance(Cosmo.Utils.Plugin)">
            <summary>
            Obtiene la instancia de un determinado plugin.
            </summary>
        </member>
        <member name="T:Cosmo.Data.Connection.Impl.SqlServerDataSourceImpl">
            <summary>
            Representa una conexión a base de datos.
            </summary>
        </member>
        <member name="T:Cosmo.Data.Connection.IDataModule">
            <summary>
            Declara el interface que deben implementar los DataSources.
            </summary>
        </member>
        <member name="F:Cosmo.Data.Connection.IDataModule.SETTING_DB_SERVER">
            <summary>Clave de la propiedad de configuración del plugin que contiene el servidor SQL Server.</summary>
        </member>
        <member name="F:Cosmo.Data.Connection.IDataModule.SETTING_DB_SCHEMA">
            <summary>Clave de la propiedad de configuración del plugin que contiene el esquema de base de datos.</summary>
        </member>
        <member name="F:Cosmo.Data.Connection.IDataModule.SETTING_DB_LOGIN">
            <summary>Clave de la propiedad de configuración del plugin que contiene el login de la cuenta de acceso.</summary>
        </member>
        <member name="F:Cosmo.Data.Connection.IDataModule.SETTING_DB_PASSWORD">
            <summary>Clave de la propiedad de configuración del plugin que contiene el la contraseña de la cuenta de acceso.</summary>
        </member>
        <member name="M:Cosmo.Data.Connection.IDataModule.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.Connection.IDataModule"/>.
            </summary>
            <param name="workspace">Una instancia del workspace actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que contiene  todas las propiedades para instanciar y configurar el módulo.</param>
        </member>
        <member name="M:Cosmo.Data.Connection.IDataModule.Connect">
            <summary>
            Inicializa una conexión con la base de datos del Workspace.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Connection.IDataModule.Disconnect">
            <summary>
            Cierra la conexión a la base de datos del Workspace.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Connection.IDataModule.TestConnection">
            <summary>
            Testea una conexión a base de datos.
            </summary>
            <returns><c>true</c> si la conexión se establece correctamente o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Connection.IDataModule.CloseAndDispose(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Cierra i dispone un objeto de tipo <see cref="T:System.Data.SqlClient.SqlDataReader"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Connection.IDataModule.CloseAndDispose(System.Data.SqlClient.SqlCommand)">
            <summary>
            Cierra i dispone un objeto de tipo <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Connection.IDataModule.CloseAndDispose(System.Data.SqlClient.SqlDataAdapter)">
            <summary>
            Close and dispose a <see cref="T:System.Data.SqlClient.SqlDataAdapter"/> instance.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Connection.IDataModule.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Connection.IDataModule.ID">
            <summary>
            Devuelve el nombre (ID) del módulo de datos.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Connection.IDataModule.Connection">
            <summary>
            Devuelve o establece la conexión a la base de datos.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Connection.Impl.SqlServerDataSourceImpl.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.Connection.Impl.SqlServerDataSourceImpl"/>.
            </summary>
            <param name="workspace">Una instancia del workspace actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que contiene  todas las propiedades para instanciar y configurar el módulo.</param>
        </member>
        <member name="M:Cosmo.Data.Connection.Impl.SqlServerDataSourceImpl.GetDSN">
            <summary>
            Devuelve la cadena de conexión a la base de datos del workspace
            </summary>
            <returns>La cadena de conexión.</returns>
        </member>
        <member name="M:Cosmo.Data.Connection.Impl.SqlServerDataSourceImpl.Connect">
            <summary>
            Inicializa una conexión con la base de datos del Workspace.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Connection.Impl.SqlServerDataSourceImpl.Disconnect">
            <summary>
            Cierra la conexión a la base de datos del Workspace.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Connection.Impl.SqlServerDataSourceImpl.TestConnection">
            <summary>
            Testea una conexión a base de datos.
            </summary>
            <returns><c>true</c> si la conexión se establece correctamente o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="P:Cosmo.Data.Connection.Impl.SqlServerDataSourceImpl.ServerName">
            <summary>
            Devuelve o establece el nombre del servidor de base de datos.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Connection.Impl.SqlServerDataSourceImpl.DatabaseName">
            <summary>
            Devuelve o establece el nombre de la base de datos.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Connection.Impl.SqlServerDataSourceImpl.AccountLogin">
            <summary>
            Devuelve o establece el login de la cuenta de acceso.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Connection.Impl.SqlServerDataSourceImpl.AccountPassword">
            <summary>
            Devuelve o establece la contraseña de la cuenta de acceso.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Connection.Impl.SqlServerDataSourceImpl.Connection">
            <summary>
            Devuelve o establece la conexión a la base de datos.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.AlertControl">
            <summary>
            Implementa el componente Alert.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.AlertControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.AlertControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.AlertControl.#ctor(Cosmo.UI.View,System.String,Cosmo.UI.Controls.ComponentColorScheme)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.AlertControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="text"></param>
            <param name="type"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.AlertControl.#ctor(Cosmo.UI.View,System.String,Cosmo.UI.Controls.ComponentColorScheme,System.Boolean)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.AlertControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="text"></param>
            <param name="type"></param>
            <param name="closeable"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.AlertControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.AlertControl.Text">
            <summary>
            Devuelve o establece el texto visible del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.AlertControl.Closeable">
            <summary>
            Indica si el cuadro de se puede cerrar.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.AlertControl.Type">
            <summary>
            Devuelve o establece el tipo de alerta que se va a mostrar.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.BreadcrumbControl">
            <summary>
            Implementa el componente <strong>Breadcrumb</strong>.
            Detalles: http://getbootstrap.com/components/#breadcrumbs
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.BreadcrumbControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.BreadcrumbControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.BreadcrumbControl.SetLastActive">
            <summary>
            Establece el último elemento de la ruta como activo.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.BreadcrumbControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.BreadcrumbControl.Items">
            <summary>
            Devuelve o establece la lista de elementos de la ruta.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.BreadcrumbItem">
            <summary>
            Implementa un elemento insertable en el componente <see cref="T:Cosmo.UI.Controls.BreadcrumbControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.BreadcrumbItem.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.BreadcrumbItem"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.BreadcrumbItem.#ctor(System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.BreadcrumbItem"/>.
            </summary>
            <param name="caption">Texto visible que se mostrará en el elemento.</param>
            <param name="href">URL asociada al enlace del elemento.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.BreadcrumbItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.BreadcrumbItem"/>.
            </summary>
            <param name="caption">Texto visible que se mostrará en el elemento.</param>
            <param name="href">URL asociada al enlace del elemento.</param>
            <param name="icon">Código del icono a mostrar junto al elemento.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.BreadcrumbItem.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.BreadcrumbItem"/>.
            </summary>
            <param name="caption">Texto visible que se mostrará en el elemento.</param>
            <param name="href">URL asociada al enlace del elemento.</param>
            <param name="isActive">Indica si es el elemento activo.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.BreadcrumbItem.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.BreadcrumbItem.IsActive">
            <summary>
            Indica si el elemento es o no el activo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.BreadcrumbItem.Caption">
            <summary>
            Devuelve o establece el texto visible que se mostrará en el elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.BreadcrumbItem.Href">
            <summary>
            Devuelve o establece la URL asociada al enlace del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.BreadcrumbItem.Icon">
            <summary>
            Devuelve o establece el código del icono a mostrar junto al elemento.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.CalloutControl">
            <summary>
            Implementa el componente Callout de Bootstrap.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.CalloutControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.CalloutControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.CalloutControl.#ctor(Cosmo.UI.View,Cosmo.UI.Controls.ComponentColorScheme)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.CalloutControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="type">Tipo de mensaje a mostrar.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.CalloutControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CalloutControl.Title">
            <summary>
            Devuelve o establece el título del control.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CalloutControl.Text">
            <summary>
            Devuelve o establece el texto del control.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CalloutControl.Icon">
            <summary>
            Devuelve o establece el código del icono a mostrar junto al título.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CalloutControl.Type">
            <summary>
            Devuelve o establece el estilo de presentación del control.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.CarrouselControl">
            <summary>
            Implementa el carrousel (slider) de Bootstrap.
            </summary>
            <remarks>
            http://getbootstrap.com/javascript/#carousel
            </remarks>
        </member>
        <member name="M:Cosmo.UI.Controls.CarrouselControl.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.CarrouselControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador único del componente dentro de una vista.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.CarrouselControl.Initialize(System.Web.UI.Page)">
            <summary>
            Inicializa el control.
            </summary>
            <param name="container">Una instancia que describa la página que debe contener el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.CarrouselControl.Initialize">
            <summary>
            Inicialización de la clase.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.CarrouselControl.GenerateJs">
            <summary>
            Genera el código JavaScript que activa el control.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselControl.Slides">
            <summary>
            Contiene los slides del carrousel.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselControl.Width">
            <summary>
            Devuelve o establece el ancho del control.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselControl.Height">
            <summary>
            Devuelve o establece la altura del control.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselControl.Timeout">
            <summary>
            Devuelve o establece el tiempo entre slide y slide.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselControl.CaptionOpacity">
            <summary>
            Devuelve o establece el porcentaje de opacidad del fondo contenedor de texto del slide (0 a 100).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselControl.CaptionFontColor">
            <summary>
            Devuelve o establece el color del texto del slide.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselControl.CaptionBackgroundColor">
            <summary>
            Devuelve o establece el color de fondo del contenedor de texto del slide.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.SlideType">
            <summary>
            Enumera los tipos de slide de un carousel.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.SlideType.ImageSlide">
            <summary>Slide de tipo imagen.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.SlideType.HtmlSlide">
            <summary>Slide de tipo Xhtml.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.SlideType.FlashSlide">
            <summary>Slide de tipo Adobe Flash.</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.SlideCaptionPositions">
            <summary>
            Enumera las posiciones dónde se pueden mostrar los caption en un slide.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.SlideCaptionPositions.Left">
            <summary>Izquierda.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.SlideCaptionPositions.Right">
            <summary>Derecha.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.SlideCaptionPositions.Top">
            <summary>Arriba.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.SlideCaptionPositions.Bottom">
            <summary>Abajo.</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.CarrouselSlide">
            <summary>
            Implementa un slide del carousel.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.CarrouselSlide.#ctor">
            <summary>
            Devuelve una instancia de CSCarrouselSlide.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.CarrouselSlide.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselSlide.FileName">
            <summary>
            Devuelve o establece el nombre (con la ruta virtual) del archivo de imágen o SWF que se mostrará en el slide.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselSlide.FullName">
            <summary>
            Devuelve o establece el nombre (con la ruta física) del archivo de imágen o SWF que se mostrará en el slide.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselSlide.Type">
            <summary>
            Devuelve o establece el tipo de slide a mostrar.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselSlide.CaptionPosition">
            <summary>
            Devuelve o establece la posición dónde debe aparecer el caption del slide.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselSlide.Width">
            <summary>
            Devuelve o establece el ancho del slide. Debe coincidir con el ancho del 
            banner especificado en la propiedad <code>FileName</code>.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselSlide.Height">
            <summary>
            Devuelve o establece la altura del slide. Debe coincidir con el ancho del 
            banner especificado en la propiedad <code>FileName</code>.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselSlide.Link">
            <summary>
            Devuelve o establece la URL de destino. Si no se establece el slide no será un enlace.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselSlide.Caption">
            <summary>
            Devuelve o establece el título del slide.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.CarrouselSlide.Name">
            <summary>
            Devuelve o establece el nombre identificador del slide.
            Básicamente es usado para como texto alternativo de la imagen.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ChatControl">
            <summary>
            Implementa un componente Chat para representar un hilo de mensajes de texto.
            No es un componente nativo de Bootstrap. Está realizado usando componentes nativos.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ChatControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ChatControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ChatControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatControl.Caption">
            <summary>
            Devuelve o establece el título visible del componente.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatControl.Height">
            <summary>
            Devuelve o establece la altura (en píxels) de la zona de mensajes.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatControl.FormShow">
            <summary>
            Indica si se debe mostrar el formulario de redacción de mensajes.
            Este formulario sirve sólo para envios a través de Cosmo Communication Services.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatControl.FormToUserID">
            <summary>
            Devuelve o establece el ID del usuario destinatario del mensaje.
            Este dato sirve sólo para envios a través de Cosmo Communication Services.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatControl.FormDomID">
            <summary>
            Devuelve o establece el ID (DOM) del formulario de envio de mensajes.
            Este dato sirve sólo para envios a través de Cosmo Communication Services.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatControl.FormSubmitButtonID">
            <summary>
            Devuelve o establece el ID (DOM) del botón de envío de mensajes.
            Este dato sirve sólo para envios a través de Cosmo Communication Services.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatControl.Messages">
            <summary>
            Devuelve o establece la lista de mensajes que aparecen en el chat.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatControl.AutoSize">
            <summary>
            Indica si se debe calcular la altura de forma automática para evitar el scroll vertical.
            Si se establece a <c>true</c> no se tendrá en cuenta el valor de la propiedad <c>Height</c>.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ChatMessage">
            <summary>
            Representa un mnesaje de chat.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ChatMessage.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.PopoverControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ChatMessage.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatMessage.DomID">
            <summary>
            Devuelve o establece el identificador del mesnaje.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatMessage.Caption">
            <summary>
            Devuelve o establece el título del mensaje.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatMessage.Content">
            <summary>
            Devuelve o establece el contenido del mensaje.
            Esta propiedad sólo admite texto (no reconoce HTML).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatMessage.Author">
            <summary>
            Devuelve o establece el autor del mensaje.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatMessage.Time">
            <summary>
            Devuelve o establece la fecha/hora de publicación del mensaje.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatMessage.Direction">
            <summary>
            Establece la dirección que en que muestra el mensaje (permite definir, por ejemplo, derecha para el usuario e izquierda para el interlocutor).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatMessage.ToolbarButtons">
            <summary>
            Devuelve o establece la lista de botones que contiene la barra de herramientas del mensaje.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ChatMessage.ChatMessageDirections">
            <summary>
            Enumera las direcciones posibles del elemento.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ChatMessage.ChatMessageDirections.Right">
            <summary>Orientación derecha</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ChatMessage.ChatMessageDirections.Left">
            <summary>Orientación izquierda</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ChatMessageToolbarButtonControl">
            <summary>
            Implemnenta un botón insertable en la barra de herramientas del editor de mensajes del chat.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ChatMessageToolbarButtonControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ChatMessageToolbarButtonControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ChatMessageToolbarButtonControl.#ctor(Cosmo.UI.View,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ChatMessageToolbarButtonControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="caption"></param>
            <param name="href"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.ChatMessageToolbarButtonControl.#ctor(Cosmo.UI.View,System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ChatMessageToolbarButtonControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="caption"></param>
            <param name="href"></param>
            <param name="icon"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.ChatMessageToolbarButtonControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatMessageToolbarButtonControl.Caption">
            <summary>
            Devuelve o establece la etiqueta visible asociada al control.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatMessageToolbarButtonControl.Href">
            <summary>
            Devuelve o establece la URL (o llamada JavaScript) correspondiente al link del botón.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ChatMessageToolbarButtonControl.Icon">
            <summary>
            Devuelve o establece el código del icono a mostrar.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.FormFieldAutocomplete">
            <summary>
            Implementa un control Typeahead para campos de autocompletado.
            </summary>
            <remarks>
            https://github.com/twitter/typeahead.js
            </remarks>
        </member>
        <member name="F:Cosmo.UI.Controls.FormFieldAutocomplete.TOKEN_QUERY">
            <summary>
            Toquen para indicar dónde se sitúa el texto de consulta en la URL de consulta del componente.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldAutocomplete.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.FormFieldAutocomplete"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador único del componente dentro de la vista (DOM).</param>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldAutocomplete.LoadValueFromRequest">
            <summary>
            Obtiene el valor del campo a partir de los datos recibidos mediante GET o POST.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldAutocomplete.Validate">
            <summary>
            Valida el valor del campo.
            </summary>
            <returns><c>true</c> si el valor és aceptable o <c>false</c> si el valor no es válido.</returns>
        </member>
        <member name="M:Cosmo.UI.Controls.FormFieldAutocomplete.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldAutocomplete.Name">
            <summary>
            Devuelve o establece el nombre del control.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldAutocomplete.Label">
            <summary>
            Devuelve o establece el texto que aparecerá en la etiqueta.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldAutocomplete.Placeholder">
            <summary>
            Devuelve o establece el texto de ayuda que aparecerá dentro del cuadro de texto.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldAutocomplete.SearchUrl">
            <summary>
            Devuelve o establece la URL de consulta de datos.
            Para especificar dónde se sitúa el valor a consultar se debe usar la constante <c>TOKEN_QUERY</c>.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldAutocomplete.MinLength">
            <summary>
            Devuelve o establece el número mínimo de carácteres a partir de los cuales empieza a enviar peticiones.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldAutocomplete.Buttons">
            <summary>
            Devuelve o establece la lista de botones de comando asociados al componente.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldAutocomplete.Required">
            <summary>
            Indica si el campo es requerido.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldAutocomplete.Value">
            <summary>
            Devuelve o establece el valor del campo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.FormFieldAutocomplete.FieldType">
            <summary>
            Devuelve el tipo de campo implementado.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.IconControl">
            <summary>
            Implementa un icono basado en fuentes (soporta Font Awsome + Glyphicons).
            Más información: http://getbootstrap.com/components/#glyphicons
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_ARROW_UP">
            <summary>Código de icono: Flecha hacia arriba </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_ASTERISK">
            <summary>Código de icono: Flecha hacia arriba </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_BELL">
            <summary>Código de icono: Campana </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_BOOK">
            <summary>Código de icono: Libro </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_BOOKMARK">
            <summary>Código de icono: Favorito</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_CALENDAR">
            <summary>Código de icono: Calendario</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_CALENDAR_EMPTY">
            <summary>Código de icono: Calendario vacío</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_CAMERA">
            <summary>Código de icono: Flecha hacia arriba </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_CHART">
            <summary>Código de icono: Diagrama de barras</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_CHECK">
            <summary>Código de icono: Accón realizada correctamente</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_CHEVRON_DOWN">
            <summary>Código de icono: Flecha hacia abajo</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_CHEVRON_UP">
            <summary>Código de icono: Flecha hacia arriba</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_COMMENT">
            <summary>Código de icono: Comentario</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_COMMENTS">
            <summary>Código de icono: Comentarios</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_CLOUD">
            <summary>Código de icono: Nube</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_DELETE">
            <summary>Código de icono: Eliminar</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_DOWNLOAD">
            <summary>Código de icono: Descargar / download</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_EDIT">
            <summary>Código de icono: Editar / escribir</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_ENVELOPE">
            <summary>Código de icono: Sobre de correo</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_ENVELOPE_2">
            <summary>Código de icono: Sobre de correo 2</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_EYE">
            <summary>Icon code: Eye</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_EYE_SLASH">
            <summary>Icon code: Eye slashed</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_EYEDROPER">
            <summary>Código de icono: Cuentagotas</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_FOLDER_OPEN">
            <summary>Código de icono: Flecha hacia arriba </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_FOLDER_CLOSE">
            <summary>Código de icono: Flecha hacia arriba </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_GIFT">
            <summary>Código de icono: Regalo</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_GLOBE">
            <summary>Código de icono: Globo terráqueo</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_HOME">
            <summary>Código de icono: Casa / Inicio</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_INBOX">
            <summary>Código de icono: Flecha hacia arriba </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_LEGAL">
            <summary>Código de icono: Normas</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_LOCK">
            <summary>Código de icono: Candado cerrado</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_MAP_MARKER">
            <summary>Código de icono: Marcador de mapa</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_MINUS">
            <summary>Código de icono: Menos</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_MOBILE">
            <summary>Código de icono: Flecha hacia arriba </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_PHONE">
            <summary>Código de icono: Flecha hacia arriba </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_PLUS">
            <summary>Código de icono: Añadir / Crear nuevo elemento</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_PROHIBITED">
            <summary>Icon code: Prohibited</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_PROHIBITED_CIRCLE">
            <summary>Icon code: Prohibited with circle</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_QUESTION">
            <summary>Icon code: Question</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_REPLY">
            <summary>Código de icono: Responder </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_REFRESH">
            <summary>Código de icono: Refrescar / Recargar </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_REMOVE">
            <summary>Código de icono: Flecha hacia arriba </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_RESIZE_HORIZONTAL">
            <summary>Código de icono: Flecha hacia arriba </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_SEARCH">
            <summary>Código de icono: Buscar / Lupa</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_SEND">
            <summary>Código de icono: Flecha hacia arriba </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_SHOPPING_CART">
            <summary>Código de icono: Carrito de la compra</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_SITEMAP">
            <summary>Código de icono: Organigrama / Mapa de sitio</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_SPINNER">
            <summary>Código de icono: Circulo de espera</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_TAG">
            <summary>Código de icono: Etiqueta</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_TAGS">
            <summary>Código de icono: Etiquetas</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_TIME">
            <summary>Código de icono: Reloj</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_UPLOAD">
            <summary>Código de icono: Upload / Subir archivos </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_UNLOCK">
            <summary>Código de icono: Candado abierto</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_USER">
            <summary>Código de icono: usuario</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_WARNING">
            <summary>Código de icono: Señal de exclamación</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ICON_WRENCH">
            <summary>Código de icono: Llave inglesa / Herramientas</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.IconControl.ACTION_SPINNING">
            <summary>Acción del icono: Rodar</summary>
        </member>
        <member name="M:Cosmo.UI.Controls.IconControl.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.IconControl"/>.
            </summary>
            <param name="code">Código de icono a representar.</param>
            <param name="parentView">El contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.IconControl.#ctor(Cosmo.UI.View,System.String,System.Boolean)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.IconControl"/>.
            </summary>
            <param name="parentView">El contenedor dónde se representará el control.</param>
            <param name="code">Código de icono a representar.</param>
            <param name="banned">Indica si l icono debe mostrarse baneado (con una señal de prohibición justo encima).</param>
        </member>
        <member name="M:Cosmo.UI.Controls.IconControl.#ctor(Cosmo.UI.View,System.String,Cosmo.UI.Controls.ComponentBackgroundColor)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.IconControl"/>.
            </summary>
            <param name="code">Código de icono a representar.</param>
            <param name="bgColor">Color de fondo.</param>
            <param name="parentView">El contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.IconControl.GetIcon(Cosmo.UI.View,System.String)">
            <summary>
            Genera el código XHTML para un icono de forma directa.
            </summary>
            <param name="viewport"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.UI.Controls.IconControl.GetIcon(Cosmo.UI.View,System.String,System.Boolean)">
            <summary>
            Genera el código XHTML para un icono de forma directa.
            </summary>
            <param name="viewport"></param>
            <param name="code"></param>
            <param name="banned"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.UI.Controls.IconControl.GetIcon(Cosmo.UI.View,System.String,Cosmo.UI.Controls.ComponentBackgroundColor)">
            <summary>
            Genera el código XHTML para un icono de forma directa.
            </summary>
            <param name="viewport"></param>
            <param name="code"></param>
            <param name="bgColor"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.UI.Controls.IconControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.IconControl.Code">
            <summary>
            Devuelve o establece el código del icono.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.IconControl.Action">
            <summary>
            Devuelve o establece el código de movimiento del icono.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.IconControl.BackgroundColor">
            <summary>
            Devuelve o establece el color de fondo del icono.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.IconControl.Banned">
            <summary>
            Indica si l icono debe mostrarse baneado (con una señal de prohibición justo encima).
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ComponentColorScheme">
            <summary>
            Enumera los esquemas de color para representar determinados elementos.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentColorScheme.Normal">
            <summary>Esquema de colores normal.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentColorScheme.Information">
            <summary>Información.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentColorScheme.Warning">
            <summary>Aviso.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentColorScheme.Error">
            <summary>Error.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentColorScheme.Success">
            <summary>Acción completada correctamente.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentColorScheme.Primary">
            <summary>Destaca el elemento como principal.</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ComponentBackgroundColor">
            <summary>
            Enumera los colores de fondo de determinados componentes.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.None">
            <summary>Sin color definido: se usa el color por defecto.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Red">
            <summary>Color de fondo rojo (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Yellow">
            <summary>Color de fondo amarillo (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Aqua">
            <summary>Color de fondo azul agua (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Blue">
            <summary>Color de fondo azul (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.LightBlue">
            <summary>Color de fondo azul claro (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Green">
            <summary>Color de fondo verde (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Navy">
            <summary>Color de fondo azul marino (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Teal">
            <summary>Color de fondo marron claro (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Olive">
            <summary>Color de fondo verde claro (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Lime">
            <summary>Color de fondo lima (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Orange">
            <summary>Color de fondo naranja (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Fuchsia">
            <summary>Color de fondo fucsia (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Purple">
            <summary>Color de fondo morado (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Maroon">
            <summary>Color de fondo marrón (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Black">
            <summary>Color de fondo negro (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ComponentBackgroundColor.Gray">
            <summary>Color de fondo gris (depende de la plantilla y/o el renderizador).</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.JumbotronControl">
            <summary>
            Implementa el componente Jumbotron.
            </summary>
            <remarks>
            http://getbootstrap.com/components/#jumbotron
            </remarks>
        </member>
        <member name="M:Cosmo.UI.Controls.JumbotronControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.JumbotronControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.JumbotronControl.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.JumbotronControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador del componente en una vista (DOM).</param>
        </member>
        <member name="M:Cosmo.UI.Controls.JumbotronControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.JumbotronControl.Title">
            <summary>
            Devuelve o establece el título que tendrá el elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.JumbotronControl.Description">
            <summary>
            Devuelve o establece el texto usado a modo de descripción del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.JumbotronControl.BackgroundImage">
            <summary>
            Devuelve o establece el título que tendrá el elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.JumbotronControl.Color">
            <summary>
            Devuelve o establece el color del texto.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ListGroupControl">
            <summary>
            Implementa el componente ListGroup de Bootstrap.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ListGroupControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ListGroupControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ListGroupControl.Clear">
            <summary>
            Elimina todos los elementos de la lista.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ListGroupControl.Add(Cosmo.UI.Controls.ListItem)">
            <summary>
            Agrega un nuevo elemento a la lista.
            </summary>
            <param name="item">Una instancia de <see cref="T:Cosmo.UI.Controls.ListItem"/> que representa el nuevo elemento.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.ListGroupControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ListGroupControl.IsLinkList">
            <summary>
            Indica si todos los elementos disponen de enlace.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ListGroupControl.ListItems">
            <summary>
            Devuelve o establece la lista de elementos que mostrará el componente.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ListGroupControl.AlignDescription">
            <summary>
            Indica si se debe alinear la descripción con el título cuando se inserta un icono.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ListGroupControl.Style">
            <summary>
            Devuelve o establece el estilo de visualización del componente.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ListGroupControl.ListGroupStyle">
            <summary>
            Enumera los estilos de presentación del componente ListGroup.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ListGroupControl.ListGroupStyle.Simple">
            <summary>Lista simple dónde cada elemento sólo muestra su título.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.ListGroupControl.ListGroupStyle.CustomContent">
            <summary>Lista compleja dónde cada elemento es acompañado de cósido XHTML.</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.ListItem">
            <summary>
            Implementa un elemento insertable en un componente ListGroup de Bootstrap.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ListItem.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.ListItem"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.ListItem.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ListItem.Text">
            <summary>
            Devuelve o establece el título visible del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ListItem.Description">
            <summary>
            Devuelve o establece el texto descriptivo del elemento.
            No soporta XHTML, sólo texto.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ListItem.Href">
            <summary>
            Devuelve o establece la URL asociada al elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ListItem.Icon">
            <summary>
            Devuelve o establece el código del icono a mostrar junto al título del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ListItem.BadgeText">
            <summary>
            Devuelve o establece el texto que aparecerá como <em>badge</em> (usualmente para indicar, por ejemplo, el número de elementos en un categoria).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ListItem.IsActive">
            <summary>
            Indica si el elemento debe mostrarse como activo (resaltado).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ListItem.Type">
            <summary>
            Devuelve o establece el estilo de marcado del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.ListItem.AlignDescription">
            <summary>
            Indica si se debe alinear la descripción con el título cuando se inserta un icono.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.LoginFormControl">
            <summary>
            Implementa el formulario de inicio de sesión estandarizado de Cosmo.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.LoginFormControl.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.LoginFormControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Una cadena que contiene el identificador único del formulario dentro del DOM.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.LoginFormControl.#ctor(Cosmo.UI.View,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.LoginFormControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Una cadena que contiene el identificador único del formulario dentro del DOM.</param>
            <param name="openButtonText">Texto que aparece en el botón de abrir el formulario.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.LoginFormControl.GetOpenButton">
            <summary>
            Obtiene un enlace que abre el formulario de <em>login</em>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.LoginFormControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.LoginFormControl.Title">
            <summary>
            Devuelve o establece el título del formulario.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.LoginFormControl.OpenButtonCaption">
            <summary>
            Devuelve o establece el texto que debe contener el botón de apertura del Login.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.LoginFormControl.RedirectionUrl">
            <summary>
            Devuelve o establece la URL a la que se debe acceder cuando se complete con éxito la autenticación.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.LoginFormControl.UserJoinUrl">
            <summary>
            Devuelve o establece la URL a la que se debe acceder para crear una nueva cuenta de usuario.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.LoginFormControl.UserRememberPasswordUrl">
            <summary>
            Devuelve o establece la URL a la que se debe acceder para recuperar la contraseña.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.MediaItem">
            <summary>
            Implementa un elemento que muestra un thumbnail. Está pensado para imágenes pero se usa para
            cualquier elemento como documentos, etc.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.MediaItem.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.MediaItem"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.MediaItem.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.MediaItem.Title">
            <summary>
            Devuelve o establece el título que tendrá el elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.MediaItem.Description">
            <summary>
            Devuelve o establece el texto usado a modo de descripción del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.MediaItem.Icon">
            <summary>
            Devuelve o establece el icono que se debe mostrar junto al título.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.MediaItem.Image">
            <summary>
            Devuelve o establece la ruta y el nombre del archivo (relativo a la página actual) que se mostrará
            en formato miniatura.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.MediaItem.ImageWidth">
            <summary>
            Devuelve o establece el ancho de la imagen (en píxels)
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.MediaItem.ImageHeight">
            <summary>
            Devuelve o establece la altura de la imagen (en píxels).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.MediaItem.LinkHref">
            <summary>
            Devuelve o establece la URL a la que se invocará al hacer clic en el elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.MediaItem.LinkCaption">
            <summary>
            Devuelve o establece el texto visible en el enlace del elemento.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.MediaListControl">
            <summary>
            Implementa una lista de imágenes que puede usarse como lista de cualquier elemento que contenga un <em>thumbnail</em>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.MediaListControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.MediaListControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.MediaListControl.Clear">
            <summary>
            Limpia la lista de contenido y la deja completamente vacía.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.MediaListControl.Add(Cosmo.UI.Controls.MediaItem)">
            <summary>
            Agrega un elemento al final de la lista.
            </summary>
            <param name="thumbnail">Una instancia de <see cref="T:Cosmo.UI.Controls.MediaItem"/> que representa el elemento a insertar.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.MediaListControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.MediaListControl.UseItemSeparator">
            <summary>
            Indica si se debe usar un separador de elementos (dependerá de la plantilla y/o renderizador).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.MediaListControl.Style">
            <summary>
            Devuelve o establece el estilo de representación de la lista.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.MediaListControl.Items">
            <summary>
            Devuelve o establece la lista de elementos.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.MediaListControl.MediaListStyle">
            <summary>
            Enumera los estilos de presentación del componente <see cref="T:Cosmo.UI.Controls.MediaListControl"/>.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.MediaListControl.MediaListStyle.Thumbnail">
            <summary>Una lista de imágenes miniatura sin nada más. Adecuado para galerias de imágenes.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.MediaListControl.MediaListStyle.Media">
            <summary>Una lista de imágenes miniatura con texto asociado.</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.NavbarControl">
            <summary>
            Implementa el componente <strong>Navbar</strong> de <em>Bootstrap</em>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.NavbarControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarControl.#ctor(Cosmo.UI.View,System.Boolean)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.NavbarControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="fixedTop">Indica si la barra debe permanecer fija en la parte superior de la pantalla.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarControl.AddItem(Cosmo.UI.Controls.NavbarIButtonControl)">
            <summary>
            Agrega un nuevo elemento en la barra de navegación.
            </summary>
            <param name="item">Una instancia de <see cref="T:Cosmo.UI.Controls.NavbarIButtonControl"/> que representa la cabecera de la barra.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarControl.AddItem(Cosmo.UI.Controls.NavbarIButtonControl,Cosmo.UI.Controls.NavbarItemPosition)">
            <summary>
            Agrega un nuevo elemento en la barra de navegación.
            </summary>
            <param name="item">Una instancia de <see cref="T:Cosmo.UI.Controls.NavbarIButtonControl"/> que representa la cabecera de la barra.</param>
            <param name="align">Posición en que se deve alinear el elemento en la barra.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarControl.Header">
            <summary>
            Cabecera de la barra de navegación. Contiene básicamente el nombre (o logo) del site y un enlñace a la página de inicio.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarControl.IsFixedTop">
            <summary>
            Indica si la barra debe permanecer fija en la parte superior de la pantalla.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarControl.Items">
            <summary>
            Lista de elementos que contiene la barra de navegación.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.NavbarHeaderControl">
            <summary>
            Representa la cabecera de una barra de herramientas.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarHeaderControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.NavbarHeaderControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarHeaderControl.#ctor(Cosmo.UI.View,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.NavbarHeaderControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="caption">Texto visible del elemento.</param>
            <param name="href">URL para el enlace del elemento.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarHeaderControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarHeaderControl.Caption">
            <summary>
            Devuelve o establece el texto visible que se mostrará en el elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarHeaderControl.Href">
            <summary>
            Devuelve o establece la URL para el enlace del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarHeaderControl.ToggleNavigationText">
            <summary>
            Devuelve o establece el texto que aparecerá en el botón de desplegar el menú cuando la
            barra esté contraida (en dispositivos de pantalla pequeña).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarHeaderControl.LogoImageUrl">
            <summary>
            Devuelve o establece la URL correspondiente a la imagen usada como logotipo del workspace.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.NavbarItemType">
            <summary>
            Describe los sitintos tipos de elementos que puede contener una barra de navegación.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.NavbarItemType.Button">
            <summary>Botón normal (enlace) o menú desplegable.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.NavbarItemType.Divider">
            <summary>Línea divisoria entre distintos elementos.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.NavbarItemType.Login">
            <summary>Botón de inicio de sesión.</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.NavbarItemPosition">
            <summary>
            Describe los sitintos tipos de elementos que puede contener una barra de navegación.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.NavbarItemPosition.Left">
            <summary>Alineado a la izquierda.</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.NavbarItemPosition.Right">
            <summary>Alineado a la derecha.</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.NavbarIButtonControl">
            <summary>
            Representa un elemento insertable en un componente Navbar de Bootstrap.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarIButtonControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.NavbarIButtonControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarIButtonControl.#ctor(Cosmo.UI.View,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.NavbarIButtonControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="caption">Título visible del elemento.</param>
            <param name="href">Dirección URL que va asociado al elemento.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarIButtonControl.#ctor(Cosmo.UI.View,System.Boolean)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.NavbarIButtonControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="isDivider">Indica si el elemento es un divisor.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarIButtonControl.AddSubitem(Cosmo.UI.Controls.NavbarIButtonControl)">
            <summary>
            Agrega un subelemento (para menús desplegables).
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarIButtonControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarIButtonControl.Caption">
            <summary>
            Devuelve o establece el título visible del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarIButtonControl.Href">
            <summary>
            Devuelve o establece la URL que se invocará al hacer clic en el elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarIButtonControl.Icon">
            <summary>
            Devuelve o establece el icono a mostrar en el elemento de menú superior.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarIButtonControl.Active">
            <summary>
            Indica si el elemento es el activo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarIButtonControl.Type">
            <summary>
            Devuelve o establece el tipo de elemento al que representa.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarIButtonControl.Position">
            <summary>
            Devuelve o establece la posición del elemento en la barra de botones.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarIButtonControl.SubItems">
            <summary>
            Lista de elementos contenidos en el elemento actual (para generar desplegables).
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.NavbarPrivateMessagesItem">
            <summary>
            Representa un elemento de la barra de navegación específico para el inicio de sesión y el 
            acceso a la cuenta de los usuarios.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarPrivateMessagesItem.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.NavbarPrivateMessagesItem"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace"/> que representa el espacio de trabajo actual.</param>
        </member>
        <member name="T:Cosmo.UI.Controls.NavbarLoginItem">
            <summary>
            Representa un elemento de la barra de navegación específico para el inicio de sesión y el acceso a la cuenta de los usuarios.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarLoginItem.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.NavbarLoginItem"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarLoginItem.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.NavbarLoginItem"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="modalFormId">El ID (DOM) del formulario modal de login definido en el componente <see cref="T:Cosmo.UI.Controls.LoginFormControl"/>.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.NavbarLoginItem.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.NavbarLoginItem.ModalFormId">
            <summary>
            Devuelve o establece el ID (DOM) del formulario modal de login definido en el componente <see cref="T:Cosmo.UI.Controls.LoginFormControl"/>. 
            Si se deja en blanco (valor por defecto) el enlace de este elemento redireccionará al usuario
            a la página de <em>login</em>. Si se define, invocará al formulario modal con el ID especificado.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.PanelControl">
            <summary>
            Implementa el componente Panel.
            Detalles del componente: http://getbootstrap.com/components/#panels
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.PanelControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.PanelControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.PanelControl.#ctor(Cosmo.UI.View,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.PanelControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="domId">Identificador único del componente dentro de la vista.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.PanelControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PanelControl.Caption">
            <summary>
            Devuelve o establece el título del control.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PanelControl.CaptionIcon">
            <summary>
            Devuelve o establece el código del icono que se desea mostrar al inicio del título.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PanelControl.ContentXhtml">
            <summary>
            Devuelve o establece el contenido XHTML del panel.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PanelControl.ContentDomId">
            <summary>
            Devuelve o establece el ID (DOM) del contenido del panel.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PanelControl.Content">
            <summary>
            Devuelve o establece la lista de controles contenidos dentro del control.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PanelControl.Footer">
            <summary>
            Devuelve o establece la lista de componentes contenidos en el pie.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PanelControl.ButtonBar">
            <summary>
            Barra de herramientas de la cabecera.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.PopoverControl">
            <summary>
            Implementa el componente PopOver de Bootstrap.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.PopoverControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.PopoverControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.PopoverControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.PopoverControl.ConvertPopoverDirectionToString(Cosmo.UI.Controls.PopoverControl.PopoverDirections)">
            <summary>
            Convierte el tipo de dirección en una cadena de texto que corresponde a la clase CSS.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PopoverControl.Caption">
            <summary>
            Devuelve o establece el título visible del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PopoverControl.Text">
            <summary>
            Devuelve o establece el texto visible del elemento.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.PopoverControl.Direction">
            <summary>
            Devuelve o establece la dirección en la que debe aparecer el elemento.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.PopoverControl.PopoverDirections">
            <summary>
            Enumera las direcciones posibles del elemento.
            </summary>
        </member>
        <member name="F:Cosmo.UI.Controls.PopoverControl.PopoverDirections.Right">
            <summary>Orientación derecha</summary>
        </member>
        <member name="F:Cosmo.UI.Controls.PopoverControl.PopoverDirections.Left">
            <summary>Orientación izquierda</summary>
        </member>
        <member name="T:Cosmo.UI.Controls.TableControl">
            <summary>
            Implementa el componente Table.
            Detalles: http://getbootstrap.com/css/#tables
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.TableControl.#ctor(Cosmo.UI.View)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.TableControl"/>.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.TableControl.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TableControl.Bordered">
            <summary>
            Indica si la tabla representa todos los bordes.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TableControl.Hover">
            <summary>
            Indica si la tabla resalta la fila dónde se encuentra el puntero del mouse.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TableControl.Condensed">
            <summary>
            Indica si la tabla se presenta en un formato más comprimido.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TableControl.Responsive">
            <summary>
            Indica si la tabla es <em>responsive</em> (se adapta frente al cambio dinámico de tamaño).
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TableControl.Striped">
            <summary>
            Indica si la tabla alterna colores de fila.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TableControl.Header">
            <summary>
            Contiene la fila de títulos de la tabla.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TableControl.Rows">
            <summary>
            Contiene la lista de filas de la tabla.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.TableCell">
            <summary>
            Implementa una celda del componente Table de Bootstrap.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.TableCell.#ctor(System.Object)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.TableCell"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Cosmo.UI.Controls.TableCell.#ctor(System.Object,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.TableCell"/>.
            </summary>
            <param name="value">The value of the cell.</param>
            <param name="href">A string that contains a url to provide a link for the current cell.</param>
        </member>
        <member name="M:Cosmo.UI.Controls.TableCell.Initialize">
            <summary>
            Inicializa al instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TableCell.Value">
            <summary>
            Devuelve o establece el contenido de la celda.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TableCell.Href">
            <summary>
            Returns or sets the url to provide a link for the current cell.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Controls.TableRow">
            <summary>
            Implementa una fila de un componente Table de Bootstrap.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.TableRow.#ctor(System.Int32)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.TableRow"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.TableRow.#ctor(System.String,System.Object[])">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.TableRow"/>.
            </summary>
            <param name="id">Identificador único de la fila en la página.</param>
            <param name="cellValues">Un array que contiene los valores de la fila (una objeto por celda).</param>
        </member>
        <member name="M:Cosmo.UI.Controls.TableRow.#ctor(System.Object[])">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Controls.TableRow"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.TableRow.GetIdParameter">
            <summary>
            Devuelve el parámetro ID para incrustar en un TAG XHTML.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Controls.TableRow.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TableRow.IsHeader">
            <summary>
            Indica si la columna es una cabecera o no.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TableRow.DomID">
            <summary>
            Devuelve o establece el identificador del elemento en la estructura DOM de la página.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Controls.TableRow.Cells">
            <summary>
            Devuelve la lista de celdas de la fila.
            </summary>
        </member>
        <member name="T:Cosmo.Services.CountryDAO">
            <summary>
            Gestor de la lista de paises.
            </summary>
        </member>
        <member name="M:Cosmo.Services.CountryDAO.#ctor(Cosmo.Workspace)">
            <summary>
            Gets an instance of <see cref="T:Cosmo.Services.CountryDAO"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace"/> que representa el espacio de trabajo actual.</param>
        </member>
        <member name="M:Cosmo.Services.CountryDAO.GetCountryList">
            <summary>
            Devuelve una lista de paises
            </summary>
        </member>
        <member name="M:Cosmo.Services.CountryDAO.CreateCountryDropDownList(System.Web.UI.WebControls.DropDownList,System.Int32)">
            <summary>
            Rellena un control DropDown con una lista de paises
            </summary>
            <param name="list">Control a rellenar</param>
            <param name="selectedId">Identificador del pais seleccionado por defecto</param>
            <returns>Un valor booleano que indica el resultado de la operación</returns>
        </member>
        <member name="M:Cosmo.Services.CountryDAO.CreateCountryDropDownList(System.Web.UI.WebControls.DropDownList)">
            <summary>
            Rellena un control DropDown con una lista de paises.
            </summary>
            <param name="list">Control a rellenar.</param>
            <returns>Un valor booleano que indica el resultado de la operación.</returns>
        </member>
        <member name="M:Cosmo.Services.CountryDAO.GetCountryName(System.Int32)">
            <summary>
            Obtiene el nombre de un pais a partir de su identificador
            </summary>
            <param name="countryId">Identificador del pais</param>
            <returns>Una cadena que contiene el nombre del pais</returns>
        </member>
        <member name="M:Cosmo.Services.CountryDAO.Initialize">
            <summary>
            Initializes the instance.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Menu.MenuItem">
            <summary>
            Representa un elemento del menú de secciones del site.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Menu.MenuItem.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Menu.MenuItem"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Menu.MenuItem.#ctor(System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Menu.MenuItem"/>.
            </summary>
            <param name="name">Nombre de la sección.</param>
            <param name="href">URL de acceso a la sección.</param>
        </member>
        <member name="M:Cosmo.UI.Menu.MenuItem.SetRoles(System.String)">
            <summary>
            Set the roles list from a comma separated values list.
            </summary>
            <param name="rolesCsvList">Vomma separated values list of roles.</param>
        </member>
        <member name="M:Cosmo.UI.Menu.MenuItem.Initialize">
            <summary>
            Inicialización de la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Menu.MenuItem.ID">
            <summary>
            Gets or sets the unique identifier for the menu item.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Menu.MenuItem.Name">
            <summary>
            Gets or sets the visible name for the menu item.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Menu.MenuItem.Href">
            <summary>
            Gets or sets the URL (relative or absolute) for the menu item.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Menu.MenuItem.Active">
            <summary>
            Indicate if the current menu item is currently selected.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Menu.MenuItem.Icon">
            <summary>
            Gets or sets the URL or the code of icon that the menu item must show.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Menu.MenuItem.Subitems">
            <summary>
            Gets or sets the list of child menu items of the current item.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Menu.MenuItem.Type">
            <summary>
            Gets or sets the type of menu item.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Menu.MenuItem.Roles">
            <summary>
            Gets or sets a list of profiles allowed to view the current menu item.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Menu.MenuItem.MenuItemType">
            <summary>
            Enumera los tipos de elemento de menú disponibles
            </summary>
        </member>
        <member name="F:Cosmo.UI.Menu.MenuItem.MenuItemType.Standard">
            <summary>Elemento estándard (enlace)</summary>
        </member>
        <member name="F:Cosmo.UI.Menu.MenuItem.MenuItemType.Brand">
            <summary>Elemento que contiene el logo de la aplicación</summary>
        </member>
        <member name="F:Cosmo.UI.Menu.MenuItem.MenuItemType.UserProfile">
            <summary>Elemento de perfil de usuario (acceso/login)</summary>
        </member>
        <member name="F:Cosmo.UI.Menu.MenuItem.MenuItemType.PrivateMessages">
            <summary>Elemento de mensajes privados de usuario</summary>
        </member>
        <member name="T:Cosmo.UI.Menu.MenuDAO">
            <summary>
            Gestor de las secciones del site.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Menu.MenuDAO.#ctor(Cosmo.Workspace)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Menu.MenuDAO"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="P:Cosmo.UI.Menu.MenuDAO.Workspace"/> que representa el espacio de trabajo actual.</param>
        </member>
        <member name="M:Cosmo.UI.Menu.MenuDAO.GetSectionsMenu">
            <summary>
            Devuelve las secciones del site.
            </summary>
            <returns>Una lista de instancias de <see cref="T:Cosmo.UI.Menu.MenuItem"/>.</returns>
        </member>
        <member name="M:Cosmo.UI.Menu.MenuDAO.Initialize">
            <summary>
            Inicialización de la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Menu.MenuDAO.ReadSection(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Lee una sección de la base de datos.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Menu.MenuDAO.Workspace">
            <summary>
            Una instancia que hace referencia al workspace actual.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Render.NoRenderModuleAvailableException">
            <summary>
            Se produce cuando un módulo de renderizado no puede renderizar un determinado control.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.NoRenderModuleAvailableException.#ctor">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.NoRenderModuleAvailableException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.UI.Render.NoRenderModuleAvailableException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl">
            <summary>
            Implementa un módulo de renderizado para AdminLTE versión 1.2.1
            </summary>
            <remarks>
            https://github.com/almasaeed2010/AdminLTE/releases/tag/1.2.1
            </remarks>
        </member>
        <member name="T:Cosmo.UI.Render.RenderModule">
            <summary>
            Clase que deben implementar todos los módulos de renderizado de componentes de Cosmo.
            Los modulos de renderizado deben incluir como dependencias los siguientes frameworks/plugins:
            <ul>
            <li>JQuery 2.0.0+</li>
            <li>Bootbox 4.2.0+</li>
            <li>Bootstrap 3.0.0+</li>
            </ul>
            </summary>
        </member>
        <member name="F:Cosmo.UI.Render.RenderModule.FOLDER_TEMPLATES">
            <summary>Declara el nombre de la carpeta que contiene los recursos para plantillas.</summary>
        </member>
        <member name="F:Cosmo.UI.Render.RenderModule.XML_RESOURCE_TAG">
            <summary>TAG XML que alberga un recurso</summary>
        </member>
        <member name="F:Cosmo.UI.Render.RenderModule.XML_RESOURCE_ATTR_TYPE">
            <summary>Atributo XML para especificar el tipo de recurso</summary>
        </member>
        <member name="F:Cosmo.UI.Render.RenderModule.XML_RESOURCE_ATTR_VALUE">
            <summary>Atributo XML para especificar el recurso (archivo o url)</summary>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Render.RenderModule"/>.
            </summary>
            <param name="workspace">Una instancia del workspace actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que contiene  todas las propiedades para instanciar y configurar el módulo.</param>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.Render(Cosmo.Utils.ControlCollection)">
            <summary>
            Renderiza un conjunto de controles.
            </summary>
            <param name="controls">Colección de controles a renderizar.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.Render(Cosmo.Utils.ControlCollection,System.String)">
            <summary>
            Renderiza un conjunto de controles.
            </summary>
            <param name="controls">Colección de controles a renderizar.</param>
            <param name="postback">Indica si la carga obedece a una llamada de <em>postback</em> (respuesta a un formulario).</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.GetCssClassFromControlColor(Cosmo.UI.Controls.ComponentColorScheme)">
            <summary>
            Convierte un color de control en una clase CSS.
            </summary>
            <param name="bgColor">Color para el que se desea obtener la clase CSS.</param>
            <returns>Una cadena que representa la clase CSS a aplicar al elemento.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.GetCssClassFromBackgroundColor(Cosmo.UI.Controls.ComponentBackgroundColor)">
            <summary>
            Convierte un color de fondo para controles en una clase CSS.
            </summary>
            <param name="bgColor">Color para el que se desea obtener la clase CSS.</param>
            <returns>Una cadena que representa la clase CSS a aplicar al elemento.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.RenderPage(Cosmo.UI.PageView)">
            <summary>
            Renderiza una vista de página.
            </summary>
            <param name="parentView">Una instancia de <see cref="T:Cosmo.UI.PageView"/> que representa la instancia renderizar.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.RenderPage(Cosmo.UI.PageView,System.String)">
            <summary>
            Renderiza una vista de página.
            </summary>
            <param name="parentView">Una instancia de <see cref="T:Cosmo.UI.PageView"/> que representa la instancia renderizar.</param>
            <param name="receivedFormID">Contiene el identificador (DOM) del formulario recibido en la llamada.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.RenderPage(Cosmo.UI.PartialView)">
            <summary>
            Renderiza una vista parcial.
            </summary>
            <param name="parentView">Una instancia de <see cref="T:Cosmo.UI.PartialView"/> que representa la instancia renderizar.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.RenderPage(Cosmo.UI.PartialView,System.String)">
            <summary>
            Renderiza una vista parcial.
            </summary>
            <param name="parentView">Una instancia de <see cref="T:Cosmo.UI.PartialView"/> que representa la instancia renderizar.</param>
            <param name="receivedFormID">Contiene el identificador (DOM) del formulario recibido en la llamada.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.RenderPage(Cosmo.UI.ModalView)">
            <summary>
            Renderiza una vista modal.
            </summary>
            <param name="parentView">Una instancia de <see cref="T:Cosmo.UI.ModalView"/> que representa la instancia renderizar.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.RenderPage(Cosmo.UI.ModalView,System.String)">
            <summary>
            Renderiza una vista modal.
            </summary>
            <param name="parentView">Una instancia de <see cref="T:Cosmo.UI.ModalView"/> que representa la instancia renderizar.</param>
            <param name="receivedFormID">Contiene el identificador (DOM) del formulario recibido en la llamada.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.Render(Cosmo.UI.Controls.Control,System.String)">
            <summary>
            Renderiza un control.
            </summary>
            <param name="control">Instancia del control a renderizar.</param>
            <param name="receivedFormID">Contiene el identificador (DOM) del formulario recibido en la llamada.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.Render(Cosmo.UI.Controls.Control)">
            <summary>
            Renderiza un control.
            </summary>
            <param name="control">Instancia del control a renderizar.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.RenderModule.LoadResources(System.Xml.XmlNode)">
            <summary>
            Carga los recursos necesarios para representar los controles de página.
            </summary>
            <param name="settingsNode">Nodo XML que contiene la configuración del plugin.</param>
        </member>
        <member name="P:Cosmo.UI.Render.RenderModule.ID">
            <summary>
            Devuelve el nombre (ID) del módulo de renderizado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Render.RenderModule.Workspace">
            <summary>
            Devuelve el workspace actual.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Render.RenderModule.JavascriptResources">
            <summary>
            Devuelve una lista de recursos JavaScript necesarios para representar el contenido renderizado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Render.RenderModule.CssResources">
            <summary>
            Devuelve una lista de recursos CSS necesarios para representar el contenido renderizado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Render.RenderModule.XIcon">
            <summary>
            Devuelve la referencia al icono de tipo <c>X-Icon</c> que debe decorar la pestaña/página actual.
            </summary>
        </member>
        <member name="P:Cosmo.UI.Render.RenderModule.Skin">
            <summary>
            Devuelve el nombre (identificador) del skin a aplicar.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl"/>.
            </summary>
            <param name="workspace">Una instancia del workspace actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que contiene  todas las propiedades para instanciar y configurar el módulo.</param>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.GetCssClassFromControlColor(Cosmo.UI.Controls.ComponentColorScheme)">
            <summary>
            Convierte un color de control en una clase CSS.
            </summary>
            <param name="ctrlColor">Color para el que se desea obtener la clase CSS.</param>
            <returns>Una cadena que representa la clase CSS a aplicar al elemento.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.GetCssClassFromBackgroundColor(Cosmo.UI.Controls.ComponentBackgroundColor)">
            <summary>
            Convierte un color de fondo para controles en una clase CSS.
            </summary>
            <param name="bgColor">Color para el que se desea obtener la clase CSS.</param>
            <returns>Una cadena que representa la clase CSS a aplicar al elemento.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.Render(Cosmo.UI.Controls.Control,System.String)">
            <summary>
            Renderiza un control.
            </summary>
            <param name="control">Instancia del control a renderizar.</param>
            <param name="receivedFormID">Indica si la carga obedece a una llamada de <em>postback</em> (respuesta a un formulario).</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.Render(Cosmo.UI.Controls.Control)">
            <summary>
            Renderiza un control.
            </summary>
            <param name="control">Instancia del control a renderizar.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderPage(Cosmo.UI.PageView)">
            <summary>
            Renderiza una página.
            </summary>
            <param name="parentView">Una instancia de <see cref="T:Cosmo.UI.PageView"/> que representa la instancia renderizar.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderPage(Cosmo.UI.PageView,System.String)">
            <summary>
            Renderiza una página.
            </summary>
            <param name="parentView">Una instancia de <see cref="T:Cosmo.UI.PageView"/> que representa la instancia renderizar.</param>
            <param name="receivedFormID">Indica si la carga obedece a una llamada de <em>postback</em> (respuesta a un formulario).</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderPage(Cosmo.UI.PartialView)">
            <summary>
            Renderiza una vista parcial.
            </summary>
            <param name="parentView">Una instancia de <see cref="T:Cosmo.UI.PartialView"/> que representa la instancia renderizar.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderPage(Cosmo.UI.PartialView,System.String)">
            <summary>
            Renderiza una vista parcial.
            </summary>
            <param name="parentView">Una instancia de <see cref="T:Cosmo.UI.PartialView"/> que representa la instancia renderizar.</param>
            <param name="receivedFormID">Indica si la carga obedece a una llamada de <em>postback</em> (respuesta a un formulario).</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderPage(Cosmo.UI.ModalView)">
            <summary>
            Renderiza una vista modal.
            </summary>
            <param name="parentView">Una instancia de <see cref="T:Cosmo.UI.ModalView"/> que representa la instancia renderizar.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderPage(Cosmo.UI.ModalView,System.String)">
            <summary>
            Renderiza una vista modal.
            </summary>
            <param name="parentView">Una instancia de <see cref="T:Cosmo.UI.ModalView"/> que representa la instancia renderizar.</param>
            <param name="receivedFormID">Indica si la carga obedece a una llamada de <em>postback</em> (respuesta a un formulario).</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderTemplate(Cosmo.UI.CosmoTemplate)">
            <summary>
            Renderiza una plantilla de visualización.
            </summary>
            <param name="template">Una instancia de <see cref="T:Cosmo.UI.CosmoTemplate"/> que representa la instancia renderizar.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderScripts(Cosmo.UI.View)">
            <summary>
            Renderiza los scripts de la página.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderAlert(Cosmo.UI.Controls.AlertControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.AlertControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderBadge(Cosmo.UI.Controls.BadgeControl)">
            <summary>
            Renderiza controles de tipo <see cref="T:Cosmo.UI.Controls.BadgeControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderBreadcrumb(Cosmo.UI.Controls.BreadcrumbControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.BreadcrumbControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderButtonBar(Cosmo.UI.Controls.ButtonGroupControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.ButtonGroupControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderButton(Cosmo.UI.Controls.ButtonControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.ButtonControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderButtonSplit(Cosmo.UI.Controls.SplitButtonControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.SplitButtonControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderCallout(Cosmo.UI.Controls.CalloutControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.CalloutControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderCarrousel(Cosmo.UI.Controls.CarrouselControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.CarrouselControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderChat(Cosmo.UI.Controls.ChatControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.ChatControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderCookiesAdvisor(Cosmo.UI.Controls.CookiesAdvisorControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.CookiesAdvisorControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderDocumentHeader(Cosmo.UI.Controls.DocumentHeaderControl)">
            <summary>
            Renderize a control of type <see cref="T:Cosmo.UI.Controls.DocumentHeaderControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderError(Cosmo.UI.Controls.ErrorControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.ErrorControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderForm(Cosmo.UI.Controls.FormControl,System.String)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.FormControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderFormFieldHidden(Cosmo.UI.Controls.FormFieldHidden,System.String)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.FormFieldHidden"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderFormFieldCaptcha(Cosmo.UI.Controls.FormFieldCaptcha,System.String)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.FormFieldCaptcha"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderFormFieldPassword(Cosmo.UI.Controls.FormFieldPassword,System.String)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderFormFieldText(Cosmo.UI.Controls.FormFieldText,System.String)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.FormFieldText"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderFormFieldDate(Cosmo.UI.Controls.FormFieldDate,System.String)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.FormFieldDate"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderFormFieldEditor(Cosmo.UI.Controls.FormFieldEditor,System.String)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.FormFieldEditor"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderFormFieldImage(Cosmo.UI.Controls.FormFieldImage,System.String)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.FormFieldImage"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderFormFieldFile(Cosmo.UI.Controls.FormFieldFile,System.String)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.FormFieldFile"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderFormFieldList(Cosmo.UI.Controls.FormFieldList,System.String)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.FormFieldList"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderFormFieldBoolean(Cosmo.UI.Controls.FormFieldBoolean,System.String)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.FormFieldBoolean"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderHtmlContent(Cosmo.UI.Controls.HtmlContentControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.HtmlContentControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderIcon(Cosmo.UI.Controls.IconControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.IconControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderJumbotron(Cosmo.UI.Controls.JumbotronControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.JumbotronControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderLayout(Cosmo.UI.Controls.LayoutContainerControl,System.String)">
            <summary>
            Renderiza un control <see cref="T:Cosmo.UI.Controls.LayoutContainerControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderSingleControlLayout(Cosmo.UI.Controls.LayoutContainerControl,System.String)">
            <summary>
            Renderiza un layout que contiene sólo un control
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderListGroup(Cosmo.UI.Controls.ListGroupControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.ListGroupControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderListItem(Cosmo.UI.Controls.ListItem,Cosmo.UI.Controls.ListGroupControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.ListItem"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderLoginForm(Cosmo.UI.Controls.LoginFormControl)">
            <summary>
            Renderiza un formulario de login.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderMediaList(Cosmo.UI.Controls.MediaListControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.MediaListControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderNavbar(Cosmo.UI.Controls.NavbarControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.NavbarControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderNavbarLoginItem(Cosmo.UI.Controls.NavbarLoginItem)">
            <summary>
            Representa un elemento de menú que muestra el perfil de usuario y las opciones.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderNavbarPrivateMessagesItem(Cosmo.UI.Controls.NavbarPrivateMessagesItem)">
            <summary>
            Representa un elemento de menú que muestra el número de mensajes privados nuevos.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderPagination(Cosmo.UI.Controls.PaginationControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.PaginationControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderPanel(Cosmo.UI.Controls.PanelControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.PanelControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderPictureGallery(Cosmo.UI.Controls.PictureGalleryControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.PictureGalleryControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderPicture(Cosmo.UI.Controls.PictureControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.PictureControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderPopover(Cosmo.UI.Controls.PopoverControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.PopoverControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderProgressBar(Cosmo.UI.Controls.ProgressBarControl)">
            <summary>
            Renderiza controles de tipo <see cref="T:Cosmo.UI.Controls.ProgressBarControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderSidebar(Cosmo.UI.Controls.SidebarControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.SidebarControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderSidebarButton(Cosmo.UI.Controls.SidebarButton)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.SidebarButton"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderTabbedContainer(Cosmo.UI.Controls.TabbedContainerControl,System.String)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.TabbedContainerControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderTable(Cosmo.UI.Controls.TableControl)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.TableControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderTableRow(Cosmo.UI.Controls.TableRow)">
            <summary>
            Renderiza un control de tipo <see cref="T:Cosmo.UI.Controls.TableRow"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderTimeline(Cosmo.UI.Controls.TimelineControl)">
            <summary>
            Renderiza controles de tipo <see cref="T:Cosmo.UI.Controls.TimelineControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderTreeView(Cosmo.UI.Controls.TreeViewControl)">
            <summary>
            Renderiza controles de tipo <see cref="T:Cosmo.UI.Controls.TreeViewControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderTreeViewChils(Cosmo.UI.Controls.TreeViewChildItemControl,System.Boolean)">
            <summary>
            Renderiza un nodo de un control <see cref="T:Cosmo.UI.Controls.TreeViewControl"/>.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderUserLink(Cosmo.UI.Controls.UserLinkControl)">
            <summary>
            Render a <see cref="T:Cosmo.UI.Controls.UserLinkControl"/> instance.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.Impl.AdminLteRenderModuleImpl.RenderModalViews(Cosmo.UI.View,System.Collections.Generic.List{Cosmo.UI.ModalView})">
            <summary>
            Render modal forms.
            </summary>
        </member>
        <member name="T:Cosmo.UI.Render.ControlNotSuportedException">
            <summary>
            Se produce cuando un módulo de renderizado no puede renderizar un determinado control.
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.ControlNotSuportedException.#ctor">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
        </member>
        <member name="M:Cosmo.UI.Render.ControlNotSuportedException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.UI.Render.ControlNotSuportedException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.UI.UIService">
            <summary>
            Implementa el servicio de renderizadio (UI).
            </summary>
        </member>
        <member name="M:Cosmo.UI.UIService.#ctor(Cosmo.Workspace,System.Web.HttpContext)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.UI.UIService"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace"/> que representa el espacio de trabajo actual.</param>
            <param name="context">Una instancia del contexto actual que permite acceder al tipo de navegador y elegir el módulo de renderizado.</param>
        </member>
        <member name="M:Cosmo.UI.UIService.Render(Cosmo.UI.Controls.Control)">
            <summary>
            Renderiza un control.
            </summary>
            <param name="control">Control a renderizar.</param>
            <returns>Una cadena de texto que contiene el código XHTML para representar el control en el navegador del usuario.</returns>
        </member>
        <member name="M:Cosmo.UI.UIService.Render(Cosmo.UI.Controls.Control,System.String)">
            <summary>
            Renderiza un control.
            </summary>
            <param name="control">Control a renderizar.</param>
            <param name="postback">Indica si la carga obedece a una llamada de <em>postback</em> (respuesta a un formulario).</param>
            <returns>Una cadena de texto que contiene el código XHTML para representar el control en el navegador del usuario.</returns>
        </member>
        <member name="M:Cosmo.UI.UIService.Render(Cosmo.Utils.ControlCollection)">
            <summary>
            Renderiza un conjunto de controles.
            </summary>
            <param name="controls">Colección de controles a renderizar.</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.UIService.Render(Cosmo.Utils.ControlCollection,System.String)">
            <summary>
            Renderiza un conjunto de controles.
            </summary>
            <param name="controls">Colección de controles a renderizar.</param>
            <param name="receivedFormID">Indica si la carga obedece a una llamada de <em>postback</em> (respuesta a un formulario).</param>
            <returns>Una cadena que contiene XHTML.</returns>
        </member>
        <member name="M:Cosmo.UI.UIService.RenderPage(Cosmo.UI.PageView)">
            <summary>
            Render a view.
            </summary>
            <param name="parentView">A page view container.</param>
            <returns>A string containing the XHTML markup to represent the view in a browser.</returns>
        </member>
        <member name="M:Cosmo.UI.UIService.RenderPage(Cosmo.UI.PageView,System.String)">
            <summary>
            Render a view.
            </summary>
            <param name="parentView">A page view container.</param>
            <param name="receivedFormID">Indica si la carga obedece a una llamada de <em>postback</em> (respuesta a un formulario).</param>
            <returns>A string containing the XHTML markup to represent the view in a browser.</returns>
        </member>
        <member name="M:Cosmo.UI.UIService.RenderPage(Cosmo.UI.ModalView)">
            <summary>
            Render a view.
            </summary>
            <param name="parentView">A modal view container.</param>
            <returns>A string containing the XHTML markup to represent the view in a browser.</returns>
        </member>
        <member name="M:Cosmo.UI.UIService.RenderPage(Cosmo.UI.ModalView,System.String)">
            <summary>
            Render a view.
            </summary>
            <param name="parentView">A modal view container.</param>
            <param name="receivedFormID">Indica si la carga obedece a una llamada de <em>postback</em> (respuesta a un formulario).</param>
            <returns>A string containing the XHTML markup to represent the view in a browser.</returns>
        </member>
        <member name="M:Cosmo.UI.UIService.SelectRenderer(System.Web.HttpContext)">
            <summary>
            Selecciona un módulo de renderizado según la configuración del servicio.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Cosmo.UI.UIService.GetSidebarMenu(Cosmo.UI.View,System.String,System.String)">
            <summary>
            Obtiene el menú lateral a partir de un proveedor determinado.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador del menú a obtener.</param>
            <param name="activeId">Identificador del elemento de menú que debe marcarse como activo.</param>
            <returns>Una instancia de <see cref="T:Cosmo.UI.Controls.SidebarControl"/> configurada convenientemente con los elementos especificados en la configuración.</returns>
        </member>
        <member name="M:Cosmo.UI.UIService.GetNavbarMenu(Cosmo.UI.View,System.String,System.String)">
            <summary>
            Obtiene la barra de navegación a partir de un proveedor determinado.
            </summary>
            <param name="parentView">Página o contenedor dónde se representará el control.</param>
            <param name="id">Identificador del menú a obtener.</param>
            <param name="activeId">Identificador del elemento de menú que debe marcarse como activo.</param>
            <returns>Una instancia de <see cref="T:Cosmo.UI.Controls.NavbarControl"/> configurada convenientemente con los elementos especificados en la configuración.</returns>
        </member>
        <member name="M:Cosmo.UI.UIService.LoadRenderModules">
            <summary>
            Carga el módulo que se usará para renderizar los controles del workspace.
            </summary>
        </member>
        <member name="M:Cosmo.UI.UIService.LoadMenuModules">
            <summary>
            Carga el módulo que se usará para renderizar los controles del workspace.
            </summary>
        </member>
        <member name="M:Cosmo.UI.UIService.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.UI.UIService.ActiveRenderModuleId">
            <summary>
            Devuelve el nombre (ID) del módulo de renderizado activo.
            </summary>
        </member>
        <member name="P:Cosmo.UI.UIService.JavascriptResources">
            <summary>
            Devuelve una lista de recursos JavaScript necesarios para representar el contenido renderizado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.UIService.CssResources">
            <summary>
            Devuelve una lista de recursos CSS necesarios para representar el contenido renderizado.
            </summary>
        </member>
        <member name="P:Cosmo.UI.UIService.XIcon">
            <summary>
            Devuelve la referencia al icono de tipo <c>X-Icon</c> que debe decorar la pestaña/página actual.
            </summary>
        </member>
        <member name="T:Cosmo.Data.Validation.CosmoValidationException">
            <summary>
            Implementa la excepción que se lanza cuando una validación no cumple con los requisitos establecidos.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Validation.CosmoValidationException.#ctor">
            <summary>
            Devuelve una instancia de CosmoValidationException.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Validation.CosmoValidationException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de CosmoValidationException.
            </summary>
            <param name="message">Descripción del error.</param>
        </member>
        <member name="P:Cosmo.Data.Validation.CosmoValidationException.Message">
            <summary>
            Devuelve el mensaje descriptivo del error.
            </summary>
        </member>
        <member name="T:Cosmo.Data.Validation.ValidationRuleBase">
            <summary>
            Implementa una regla de validación básica. Sirve para implementar reglas de validación específicas.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Validation.ValidationRuleBase.CheckRule(System.String)">
            <summary>
            Chequea la regla a partir del valor proporcionado.
            </summary>
            <param name="value">Valor a validar obtenido del formulario.</param>
            <returns><c>true</c> si el valor es válido o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.ValidationRuleBase.GetValiadtionRulesScript(System.String)">
            <summary>
            Devuelve una cadena de configuración de la regla para un script que use jQuery Validation..
            </summary>
        </member>
        <member name="M:Cosmo.Data.Validation.ValidationRuleBase.GetValiadtionMessagesScript(System.String)">
            <summary>
            Devuelve una cadena de configuración los mensajes a mostrar para un script que use jQuery Validation..
            </summary>
        </member>
        <member name="P:Cosmo.Data.Validation.ValidationRuleBase.Required">
            <summary>
            Indica si el campo es obligatorio.
            </summary>
        </member>
        <member name="T:Cosmo.Data.Validation.Validator">
            <summary>
            Implementa una clase para la validación de datos proporcionados en un formulario web.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.#ctor">
            <summary>
            Devuelve una instancia de Validator.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.#ctor(System.Boolean)">
            <summary>
            Devuelve una instancia de Validator.
            </summary>
            <param name="exceptionOnValidationError">Indica si se debe lanzar una excepción cuando falle una validación.</param>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.AddError(System.String)">
            <summary>
            Permite agregar un error de forma manual para validaciones manuales.
            </summary>
            <param name="message">Mensaje de error.</param>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.StringValidator(System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Validación de cadenas de texto.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <param name="lengthMin">Longitud mínima.</param>
            <param name="lengthMax">Longitud máxima.</param>
            <returns>Una cadena de texto que contiene el valor validado o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.StringValidator(System.String,System.String,System.Boolean)">
            <summary>
            Validación de cadenas de texto.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <returns>Una cadena de texto que contiene el valor validado o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.IntegerValidator(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Validación de cadenas de texto.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <param name="min">Valor mínimo.</param>
            <param name="max">Valor máximo.</param>
            <param name="defaultValue">Valor por defecto a devolver en caso de fallar la validación.</param>
            <returns>Una cadena de texto que contiene el valor validado o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.IntegerValidator(System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Validación de cadenas de texto.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <param name="min">Valor mínimo.</param>
            <param name="max">Valor máximo.</param>
            <returns>Una cadena de texto que contiene el valor validado o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.IntegerValidator(System.String,System.String,System.Boolean)">
            <summary>
            Validación de cadenas de texto.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <returns>Una cadena de texto que contiene el valor validado o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.CurrencyValidator(System.String,System.String,System.Boolean,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Validación de valors monetarios.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <param name="min">Valor mínimo.</param>
            <param name="max">Valor máximo.</param>
            <param name="defaultValue">Valor por defecto a devolver en caso de fallar la validación.</param>
            <returns>Un valor <see cref="T:System.Decimal"/> que contiene el valor validado o el valor por defecto en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.CurrencyValidator(System.String,System.String,System.Boolean)">
            <summary>
            Validación de valors monetarios.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <returns>Un valor <see cref="T:System.Decimal"/> que contiene el valor validado o el valor por defecto en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.PasswordValidator(System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Validación de contraseñas.
            </summary>
            <param name="value">Contraseña.</param>
            <param name="value2">Verificación de la contraseña.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <param name="lengthMin">Longitud mínima.</param>
            <param name="lengthMax">Longitud máxima.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.MailValidator(System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Validación de cuentas de correo electrónico.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <param name="lengthMin">Longitud mínima.</param>
            <param name="lengthMax">Longitud máxima.</param>
            <returns>Una cadena de texto que contiene la cuenta de correo o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.MailValidator(System.String,System.String,System.Boolean)">
            <summary>
            Validación de cuentas de correo electrónico.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <returns>Una cadena de texto que contiene la cuenta de correo o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.UrlValidator(System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Validación de direcciones URL.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <param name="lengthMin">Longitud mínima.</param>
            <param name="lengthMax">Longitud máxima.</param>
            <returns>Una cadena de texto que contiene la URL o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.UrlValidator(System.String,System.String,System.Boolean)">
            <summary>
            Validación de direcciones URL.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <returns>Una cadena de texto que contiene la URL o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="P:Cosmo.Data.Validation.Validator.LaunchExceptionOnValidationError">
            <summary>
            Indica si se debe lanzar una excepción cuando falle una validación.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Validation.Validator.IsValid">
            <summary>
            Indica si los campos validados son correctos o no.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Validation.Validator.ErrorMessage">
            <summary>
            Devuelve el mensaje de error.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Validation.Validator.ErrorXhtmlMessage">
            <summary>
            Devuelve el mensaje de error en formato XHTML.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Validation.Validator.ErrorJSMessage">
            <summary>
            Devuelve el mensaje de error en formato strijng para usar en JavaScript.
            </summary>
        </member>
        <member name="T:Cosmo.Diagnostics.EventLog">
            <summary>
            Implemnta una clase para generar archivos de LOG en modo texto en la estación local.
            </summary>
        </member>
        <member name="M:Cosmo.Diagnostics.EventLog.GenerateDefaultLogFileName(System.String,System.String,System.Boolean)">
            <summary>
            Devuelve un nombre válido de archivo LOG
            </summary>
            <param name="basepath">Ruta al directorio dónde se debe generar el archivo</param>
            <param name="BaseFileName">Nombre base del archivo</param>
            <param name="WithDate">Indica si se debe agregar la fecha al nombre de archivo</param>
            <returns>Una cadena que representa el nombre del archuivo</returns>
        </member>
        <member name="M:Cosmo.Diagnostics.EventLog.WriteToLog(System.String,System.String)">
            <summary>
            Pass in the fully qualified name of the log file you want to write to
            and the message to write
            </summary>
            <param name="LogPath"></param>
            <param name="Message"></param>
        </member>
        <member name="M:Cosmo.Diagnostics.EventLog.WriteToEventLog(System.String,System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            Writes a message to the application event log
            </summary>
            <param name="Source">Source is the source of the message ususally you will want this to be the application name</param>
            <param name="Message">message to be written</param>
            <param name="EntryType">the entry type to use to categorize the message like for exmaple error or information</param>
        </member>
        <member name="T:Cosmo.Diagnostics.ExceptionHelper">
            <summary>
            Exception helper class.
            </summary>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsError(System.Exception,System.String)">
            <summary>
            Traces an error message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="message">Message of the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsError(System.Exception,System.String,System.Object[])">
            <summary>
            Traces an error message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="format">A format string that contains zero or more format items, which correspond to objects in the args array.</param>
            <param name="args">An object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsWarning(System.Exception,System.String)">
            <summary>
            Traces a warning message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="message">Message of the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsWarning(System.Exception,System.String,System.Object[])">
            <summary>
            Traces a warning message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="format">A format string that contains zero or more format items, which correspond to objects in the args array.</param>
            <param name="args">An object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsInformation(System.Exception,System.String)">
            <summary>
            Traces an information message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="message">Message of the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsInformation(System.Exception,System.String,System.Object[])">
            <summary>
            Traces an information message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="format">A format string that contains zero or more format items, which correspond to objects in the args array.</param>
            <param name="args">An object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsVerbose(System.Exception,System.String)">
            <summary>
            Traces a verbose message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="message">Message of the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsVerbose(System.Exception,System.String,System.Object[])">
            <summary>
            Traces a verbose message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="format">A format string that contains zero or more format items, which correspond to objects in the args array.</param>
            <param name="args">An object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceException(System.Diagnostics.TraceLevel,System.Exception,System.String)">
            <summary>
            Traces a message with exception details.
            </summary>
            <param name="level"><see cref="T:System.Diagnostics.TraceLevel"/> to write.</param>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="message">Message of the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceException(System.Diagnostics.TraceLevel,System.Exception,System.String,System.Object[])">
            <summary>
            Traces a message with exception details.
            </summary>
            <param name="level"><see cref="T:System.Diagnostics.TraceLevel"/> to write.</param>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="format">A format string that contains zero or more format items, which correspond to objects in the args array.</param>
            <param name="args">An object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.GetInnerException(System.Exception)">
            <summary>
            Gets the inner exception.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Cosmo.Diagnostics.TraceHelper">
            <summary>
            Trace helper class.
            </summary>
        </member>
        <member name="M:Cosmo.Diagnostics.TraceHelper.ConvertTraceEventTypeToTraceLevel(System.Diagnostics.TraceEventType)">
            <summary>
            Converts a <see cref="T:System.Diagnostics.TraceEventType"/> to a <see cref="T:System.Diagnostics.TraceLevel"/>.
            </summary>
            <param name="eventType"><see cref="T:System.Diagnostics.TraceEventType"/> to convert.</param>
            <returns><see cref="T:System.Diagnostics.TraceLevel"/> that represents a <see cref="T:System.Diagnostics.TraceEventType"/>.</returns>
        </member>
        <member name="M:Cosmo.Diagnostics.TraceHelper.TraceErrorWithDetails(System.String,System.String)">
            <summary>
            Traces an error message with details.
            </summary>
            <param name="message">Message of the trace.</param>
            <param name="details">Additional details which will be listed later in the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.TraceHelper.TraceWarningWithDetails(System.String,System.String)">
            <summary>
            Traces a warning message with details.
            </summary>
            <param name="message">Message of the trace.</param>
            <param name="details">Additional details which will be listed later in the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.TraceHelper.TraceInformationWithDetails(System.String,System.String)">
            <summary>
            Traces an information message with details.
            </summary>
            <param name="message">Message of the trace.</param>
            <param name="details">Additional details which will be listed later in the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.TraceHelper.TraceVerboseWithDetails(System.String,System.String)">
            <summary>
            Traces a verbose message with details.
            </summary>
            <param name="message">Message of the trace.</param>
            <param name="details">Additional details which will be listed later in the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.TraceHelper.TraceWithDetails(System.Diagnostics.TraceLevel,System.String,System.String)">
            <summary>
            Traces a message with details.
            </summary>
            <param name="level"><see cref="T:System.Diagnostics.TraceLevel"/> to write.</param>
            <param name="message">Message of the trace.</param>
            <param name="details">Additional details which will be listed later in the trace.</param>
        </member>
        <member name="T:Cosmo.Utils.Drawing.JpegBaseEncoder">
            <summary>
            Clase base que engloba el codificador JPEG.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.JpegBaseEncoder.EncodeImageBufferToJpg(System.Byte[0:,0:,0:],System.Drawing.Point,System.Drawing.Point,System.IO.BinaryWriter,System.Single,Cosmo.Utils.Drawing.DrawingUtils.IProgress,Cosmo.Utils.Drawing.DrawingUtils.ICurrentOperation)">
            <summary>
            Encodes a provided ImageBuffer[,,] to a JPG Image.
            </summary>
            <param name="ImageBuffer">The ImageBuffer containing the pixel data.</param>
            <param name="originalDimension">Dimension of the original image. This value is written to the image header.</param>
            <param name="actualDimension">Dimension on which the Encoder works. As the Encoder works in 8*8 blocks, if the image size is not divisible by 8 the remaining blocks are set to '0' (in this implementation)</param>
            <param name="OutputStream">Stream to which the JPEG data is to be written.</param>
            <param name="Quantizer_Quality">Required quantizer jpegQuality; Default: 50 , Lower value higher jpegQuality.</param>
            <param name="progress">Interface for updating Progress.</param>
            <param name="currentOperation">Interface for updating CurrentOperation.</param>
        </member>
        <member name="M:Cosmo.Utils.Drawing.JpegBaseEncoder.EncodeImageToJpg(System.Drawing.Image,System.IO.BinaryWriter,System.Single,Cosmo.Utils.Drawing.DrawingUtils.IProgress,Cosmo.Utils.Drawing.DrawingUtils.ICurrentOperation)">
            <summary>
            Encodes a provided Image to a JPG Image.
            </summary>
            <param name="ImageToBeEncoded">The Image to be encoded.</param>
            <param name="OutputStream">Stream to which the JPEG data is to be written.</param>
            <param name="Quantizer_Quality">Required quantizer jpegQuality; Default: 50 , Lower value higher jpegQuality.</param>
            <param name="progress">Interface for updating Progress.</param>
            <param name="currentOperation">Interface for updating CurrentOperation.</param>
        </member>
        <member name="P:Cosmo.Utils.Drawing.JpegBaseEncoder.LuminanceTable">
            <summary>
            A 64 byte array which corresponds to a JPEG Luminance Quantization table.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Drawing.JpegBaseEncoder.ChromianceTable">
            <summary>
            A 64 byte array which corresponds to a JPEG Chromiance Quantization table.
            </summary>
        </member>
        <member name="T:Cosmo.Utils.Drawing.Imaging">
            <summary>
            Generates Y, Cb, Cr, R, G and B values from given RGB_Buffer
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Imaging.GetChannelData(System.Byte[0:,0:,0:],System.Boolean,System.Int32,System.Int32,Cosmo.Utils.Drawing.Imaging.ChannelType,Cosmo.Utils.Drawing.DrawingUtils.IProgress,Cosmo.Utils.Drawing.DrawingUtils.ICurrentOperation)">
            <summary>
            Generates Y, Cb, Cr, R, G and B values from given RGB_Buffer
            </summary>
            <param name="RGB_Buffer">The input RGB_Buffer.</param>
            <param name="drawInGrayscale">Draw in grayscale.</param>
            <param name="width">Width of the image.</param>
            <param name="height">Height of the image.</param>
            <param name="channel">Enum specifying the channel type required.</param>
            <param name="progress">Interface for updating progress.</param>
            <param name="operation">Interface for updating current operation.</param>
            <returns>3D array of the specified channel type.</returns>
        </member>
        <member name="T:Cosmo.Utils.Drawing.Imaging.ChannelType">
            <summary>
            Defines the different possible channel types.
            </summary>
        </member>
        <member name="T:Cosmo.Utils.Drawing.DrawingInteropGdi">
            <summary>
            Clase que encapsula las funcionalidades de la API GDI de Windows.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingInteropGdi.CreateCompatibleDC(System.IntPtr)">
            <summary>
            The CreateCompatibleDC function creates a memory device context (DC) compatible with the specified device. 
            </summary>
            <param name="hdc">[in] Handle to an existing DC. If this handle is NULL, the function creates a memory DC compatible with the application's current screen. </param>
            <returns>
            If the function succeeds, the return value is the handle to a memory DC.
            If the function fails, the return value is NULL. 
            </returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingInteropGdi.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            The SelectObject function selects an object into the specified device context (DC). 
            The new object replaces the previous object of the same type. 
            </summary>
            <param name="hdc">[in] Handle to the DC.</param>
            <param name="hgdiobj">[in] Handle to the object to be selected. The specified object must have been created by using one of the following functions. </param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingInteropGdi.SetStretchBltMode(System.IntPtr,System.Int32)">
            <summary>
            The SetStretchBltMode function sets the bitmap stretching mode in the specified device context. 
            </summary>
            <param name="hdc">[in] Handle to the device context. </param>
            <param name="iStretchMode">[in] Specifies the stretching mode. This parameter can be one of the values from StretchBltModes enum.</param>
            <returns>
            If the function succeeds, the return value is the previous stretching mode.
            If the function fails, the return value is zero. 
            </returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingInteropGdi.GetObject(System.IntPtr,System.Int32,Cosmo.Utils.Drawing.DrawingInteropGdi.BITMAP@)">
            <summary>
            The GetObject function retrieves information for the specified graphics object. 
            </summary>
            <param name="hgdiobj">[in] Handle to the graphics object of interest. This can be a handle to one of the following: a logical bitmap, a brush, a font, a palette, a pen, or a device independent bitmap created by calling the CreateDIBSection function. </param>
            <param name="cbBuffer">[in] Specifies the number of bytes of information to be written to the buffer. </param>
            <param name="lpvObject">[out] Pointer to a buffer that receives the information about the specified graphics object. </param>
            <returns>
            If the function succeeds, and lpvObject is a valid pointer, the return value is the number of bytes stored into the buffer.
            If the function succeeds, and lpvObject is NULL, the return value is the number of bytes required to hold the information the function would store into the buffer.
            If the function fails, the return value is zero. 
            </returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingInteropGdi.StretchBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations)">
            <summary>
            The StretchBlt function copies a bitmap from a source rectangle into a destination 
            rectangle, stretching or compressing the bitmap to fit the dimensions of the destination 
            rectangle, if necessary. The system stretches or compresses the bitmap according to 
            the stretching mode currently set in the destination device context. 
            </summary>
            <param name="hdcDest">[in] Handle to the destination device context. </param>
            <param name="nXOriginDest">[in] Specifies the x-coordinate, in logical units, of the upper-left corner of the destination rectangle. </param>
            <param name="nYOriginDest">[in] Specifies the y-coordinate, in logical units, of the upper-left corner of the destination rectangle. </param>
            <param name="nWidthDest">[in] Specifies the maxWidth, in logical units, of the destination rectangle. </param>
            <param name="nHeightDest">[in] Specifies the maxHeight, in logical units, of the destination rectangle. </param>
            <param name="hdcSrc">[in] Handle to the source device context. </param>
            <param name="nXOriginSrc">[in] Specifies the x-coordinate, in logical units, of the upper-left corner of the source rectangle. </param>
            <param name="nYOriginSrc">[in] Specifies the y-coordinate, in logical units, of the upper-left corner of the source rectangle. </param>
            <param name="nWidthSrc">[in] Specifies the maxWidth, in logical units, of the source rectangle. </param>
            <param name="nHeightSrc">[in] Specifies the maxHeight, in logical units, of the source rectangle. </param>
            <param name="dwRop">[in] Specifies the raster operation to be performed. Raster operation codes define how the system combines colors in output operations that involve a brush, a source bitmap, and a destination bitmap. </param>
            <returns>
            If the function succeeds, the return value is nonzero. 
            If the function fails, the return value is zero. 
            </returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingInteropGdi.CreateCompatibleBitmap(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            The CreateCompatibleBitmap function creates a bitmap compatible with the device that is associated with the specified device context. 
            </summary>
            <param name="hdc">[in] Handle to a device context. </param>
            <param name="nWidth">[in] Specifies the bitmap maxWidth, in pixels. </param>
            <param name="nHeight">[in] Specifies the bitmap maxHeight, in pixels. </param>
            <returns>
            If the function succeeds, the return value is a handle to the compatible bitmap (DDB).
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingInteropGdi.GetDIBits(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32,System.Byte[],Cosmo.Utils.Drawing.DrawingInteropGdi.BITMAPINFOHEADER@,System.UInt32)">
            <summary>
            The GetDIBits function retrieves the bits of the specified compatible bitmap 
            and copies them into a buffer as a DIB using the specified format. 
            </summary>
            <param name="hdc">[in] Handle to the device context. </param>
            <param name="hbmp">[in] Handle to the bitmap. This must be a compatible bitmap (DDB). </param>
            <param name="uStartScan">[in] Specifies the first scan line to retrieve.</param>
            <param name="cScanLines">[in] Specifies the number of scan lines to retrieve.</param>
            <param name="lpvBits">[out] Pointer to a buffer to receive the bitmap data. If this parameter is NULL, the function passes the dimensions and format of the bitmap to the BITMAPINFOHEADER structure pointed to by the lpbi parameter.</param>
            <param name="lpbmi">[in/out] Pointer to a BITMAPINFOHEADER structure that specifies the desired format for the DIB data. </param>
            <param name="uUsage">[in] Specifies the format of the bmiColors member of the BITMAPINFOHEADER structure.</param>
            <returns>If the lpvBits parameter is non-NULL and the function succeeds, the return value is the number of scan lines copied from the bitmap.</returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingInteropGdi.SetDIBits(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32,System.Byte[],Cosmo.Utils.Drawing.DrawingInteropGdi.BITMAPINFOHEADER@,System.UInt32)">
            <summary>
            The SetDIBits function sets the pixels in a compatible bitmap (DDB) 
            using the color data found in the specified DIB . 
            </summary>
            <param name="hdc">[in] Handle to a device context. </param>
            <param name="hbmp">[in] Handle to the compatible bitmap (DDB) that is to be altered using the color data from the specified DIB.</param>
            <param name="uStartScan">[in] Specifies the starting scan line for the device-independent color data in the array pointed to by the lpvBits parameter. </param>
            <param name="cScanLines">[in] Specifies the number of scan lines found in the array containing device-independent color data. </param>
            <param name="lpvBits">[in] Pointer to the DIB color data, stored as an array of bytes. The format of the bitmap values depends on the biBitCount member of the BITMAPINFO structure pointed to by the lpbmi parameter. </param>
            <param name="lpbmi">[in] Pointer to a BITMAPINFOHEADER structure that contains information about the DIB. </param>
            <param name="fuColorUse">[in] Specifies whether the bmiColors member of the BITMAPINFO structure was provided and, if so, whether bmiColors contains explicit red, green, blue (RGB) values or palette indexes.</param>
            <returns>If the function succeeds, the return value is the number of scan lines copied.</returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingInteropGdi.GetDC(System.IntPtr)">
            <summary>
            The GetDC function retrieves a handle to a display device context (DC) 
            for the client area of a specified window or for the entire screen.        
            </summary>
            <param name="hWnd">[in] Handle to the window whose DC is to be retrieved. If this value is NULL, GetDC retrieves the DC for the entire screen. </param>
            <returns>If the function succeeds, the return value is a handle to the DC for the specified window's client area. I
            If the function fails, the return value is NULL. 
            </returns>  
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingInteropGdi.GetClientRect(System.IntPtr,Cosmo.Utils.Drawing.DrawingInteropGdi.RECT@)">
            <summary>
            The GetClientRect function retrieves the coordinates of a window's client area.
            The client coordinates specify the upper-left and lower-right corners of the client area. 
            </summary>
            <param name="hWnd">[in] Handle to the window whose client coordinates are to be retrieved.</param>
            <param name="lpRect">[out] Pointer to a RECT structure that receives the client coordinates.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingInteropGdi.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations)">
            <summary>
               Performs a bit-block transfer of the color data corresponding to a
               rectangle of pixels from the specified source device context into
               a destination device context.
            </summary>
            <param name="hdc">Handle to the destination device context.</param>
            <param name="nXDest">The leftmost x-coordinate of the destination rectangle (in pixels).</param>
            <param name="nYDest">The topmost y-coordinate of the destination rectangle (in pixels).</param>
            <param name="nWidth">The maxWidth of the source and destination rectangles (in pixels).</param>
            <param name="nHeight">The maxHeight of the source and the destination rectangles (in pixels).</param>
            <param name="hdcSrc">Handle to the source device context.</param>
            <param name="nXSrc">The leftmost x-coordinate of the source rectangle (in pixels).</param>
            <param name="nYSrc">The topmost y-coordinate of the source rectangle (in pixels).</param>
            <param name="dwRop">A raster-operation code.</param>
            <returns>
               <c>true</c> if the operation succeeded, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingInteropGdi.DeleteObject(System.IntPtr)">
            <summary>
            The DeleteObject function deletes a logical pen, brush, font, bitmap, region, or palette, 
            freeing all system resources associated with the object. After the object is deleted, 
            the specified handle is no longer valid. 
            </summary>
            <param name="hObject">[in] Handle to a logical pen, brush, font, bitmap, region, or palette.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingInteropGdi.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            The ReleaseDC function releases a device context (DC), freeing it for use by other applications. 
            The effect of the ReleaseDC function depends on the type of DC.
            </summary>
            <param name="hWnd">[in] Handle to the window whose DC is to be released. </param>
            <param name="hDC">[in] Handle to the DC to be released. </param>
            <returns>
            The return value indicates whether the DC was released. 
            If the DC was released, the return value is 1.
            If the DC was not released, the return value is zero.
            </returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingInteropGdi.SetPixel(System.IntPtr,System.Int32,System.Int32,System.UInt32)">
            <summary>
            The SetPixel function sets the pixel at the specified coordinates to the specified color. 
            </summary>
            <param name="hdc">[in] Handle to the device context. </param>
            <param name="X">[in] Specifies the x-coordinate, in logical units, of the point to be set. </param>
            <param name="Y">[in] Specifies the y-coordinate, in logical units, of the point to be set. </param>
            <param name="crColor">[in] Specifies the color to be used to paint the point.</param>
            <returns>If the function succeeds, the return value is the RGB value that the function sets the pixel to. 
            This value may differ from the color specified by crColor; that occurs when an exact match for the 
            specified color cannot be found.</returns>
        </member>
        <member name="T:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations">
            <summary>
                Specifies a raster-operation code. These codes define how the color data for the
                source rectangle is to be combined with the color data for the destination
                rectangle to achieve the final color.
            </summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.SRCCOPY">
            <summary>dest = source</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.SRCPAINT">
            <summary>dest = source OR dest</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.SRCAND">
            <summary>dest = source AND dest</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.SRCINVERT">
            <summary>dest = source XOR dest</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.SRCERASE">
            <summary>dest = source AND (NOT dest)</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.NOTSRCCOPY">
            <summary>dest = (NOT source)</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.NOTSRCERASE">
            <summary>dest = (NOT src) AND (NOT dest)</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.MERGECOPY">
            <summary>dest = (source AND pattern)</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.MERGEPAINT">
            <summary>dest = (NOT source) OR dest</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.PATCOPY">
            <summary>dest = pattern</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.PATPAINT">
            <summary>dest = DPSnoo</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.PATINVERT">
            <summary>dest = pattern XOR dest</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.DSTINVERT">
            <summary>dest = (NOT dest)</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.BLACKNESS">
            <summary>dest = BLACK</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.DrawingInteropGdi.TernaryRasterOperations.WHITENESS">
            <summary>dest = WHITE</summary>
        </member>
        <member name="T:Cosmo.Utils.Drawing.Picture">
            <summary>
            Representa una imagen y implementa las operaciones más habituales.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Picture.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Utils.Drawing.Picture"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Picture.#ctor(System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Utils.Drawing.Picture"/>.
            </summary>
            <param name="filename">Nombre (y ruta) del archivo de imagen.</param>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Picture.CreateThumbnail(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Genera una imagen miniatura de la imagen.
            </summary>
            <param name="maxWidth">Anchura máxima de la imagen miniatura.</param>
            <param name="maxHeight">Alura máxima de la imagen miniatura.</param>
            <param name="save">Indica si se debe guardar la imagen resultante a un archivo.</param>
            <returns>Una instancia de <see cref="T:System.Drawing.Bitmap"/> que contiene la imagen miniatura.</returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Picture.Transform(Cosmo.Utils.Drawing.Picture.PictureFormats,System.String,System.Single)">
            <summary>
            Transforma la imagen a un formato distinto. 
            </summary>
            <param name="format">Formato de destino.</param>
            <param name="filename">Archivo de destino.</param>
            <param name="jpegQuality">Calidad de la imagen para el formato de destino JPEG.</param>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Picture.Transform(Cosmo.Utils.Drawing.Picture.PictureFormats,System.String)">
            <summary>
            Transforma la imagen a un formato distinto. 
            </summary>
            <param name="format">Formato de destino.</param>
            <param name="filename">Archivo de destino.</param>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Picture.ToBitmap">
            <summary>
            Convierte la imagen en una instancia de <see cref="T:System.Drawing.Bitmap"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Picture.ToImage">
            <summary>
            Convierte la imagen en una instancia de <see cref="T:System.Drawing.Image"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Picture.CreateThumbnail(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Genera una imagen miniatura a partir de una imagen original
            </summary>
            <param name="filename">Nombre del archivo que contiene la imagen</param>
            <param name="maxWidth">Ancho máximo de la imagen resultante</param>
            <param name="maxHeight">Altura máxima de la imagen resultante</param>
            <param name="save">Indica si se debe guardar la imagen resultante</param>
            <returns>Una instancia Bitmap que contiene la imagen miniatura</returns>
            <remarks>
            Al guardar la imagen miniatura se renombra añadiendo el prefijo "th_" delante del nombre 
            y se mantiene la misma ruta.
            </remarks>
        </member>
        <member name="T:Cosmo.Utils.Drawing.Picture.PictureFormats">
            <summary>
            Enumera los tipos de imagen soportados por la clase <see cref="T:Cosmo.Utils.Drawing.Picture"/>.
            </summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.Picture.PictureFormats.JPEG">
            <summary>Formato JPEG.</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.Picture.PictureFormats.GIF">
            <summary>Formato GIF.</summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.Picture.PictureFormats.PNG">
            <summary>Formato PNG.</summary>
        </member>
        <member name="T:Cosmo.Utils.Drawing.PrintDocuments">
            <summary>
            Implementa un documento de impresión formado por uno o más documerntos de impresión.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.PrintDocuments.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Utils.Drawing.PrintDocuments"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.PrintDocuments.#ctor(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintDocument)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Utils.Drawing.PrintDocuments"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.PrintDocuments.#ctor(System.Drawing.Printing.PrintDocument[])">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Utils.Drawing.PrintDocuments"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.PrintDocuments.Add(System.Drawing.Printing.PrintDocument)">
            <summary>
            Anexa un documento de impresión al documento maestro.
            </summary>
            <param name="document">Una instancia de <see cref="T:System.Drawing.Printing.PrintDocument"/>.</param>
        </member>
        <member name="M:Cosmo.Utils.Drawing.PrintDocuments.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
            <summary>
            Evento que se llama al inicio de la impresión.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.PrintDocuments.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
            <summary>
            Evento que se llama durante la consulta de la configuración de impresora.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.PrintDocuments.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Evento que se llama al imprimir la página.
            </summary>
        </member>
        <member name="T:Cosmo.Utils.Drawing.JpegTables">
            <summary>
            Clase que permite la gestión de las tablas de conversión para imágenes JPEG.
            </summary>
        </member>
        <member name="T:Cosmo.Utils.Drawing.DrawingUtils">
            <summary>
            Utilidades para las classes del namespace Cosmo.Drawing.
            http://www.codeproject.com/KB/graphics/SimpleJpeg.aspx
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.DrawingUtils.IsImageFile(System.String)">
            <summary>
            Determina si un archivo corresponde a una imagen.
            </summary>
            <param name="filename">Nombre del archivo (con path).</param>
            <returns><c>true</c> si el archivo corresponde a una imagen o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="T:Cosmo.Utils.Drawing.Captcha">
            <summary>
            Implementa un sistema de imágenes CAPTCHA para formularios.
            </summary>
        </member>
        <member name="F:Cosmo.Utils.Drawing.Captcha.SESSION_CAPTCHA">
            <summary>Clave por defecto dónde se guarda el código captcha en el objeto Session.</summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Captcha.#ctor">
            <summary>
            Devuelve una instancia de Captcha.
            </summary>
            <remarks>
            Usa los siguientes valores por defecto:
            - ImageWidth    = 200
            - ImageHeight   = 50 
            - CaptchaLength = 6
            </remarks>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Captcha.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Devuelve una instancia de Captcha.
            </summary>
            <param name="ImageWidth">Width of the GIF image produced.</param>
            <param name="Imageheight">Height of the GIF image produced.</param>
            <param name="Length">Número de carácteres que se muestran.</param>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Captcha.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Devuelve una instancia de Captcha.
            </summary>
            <param name="ImageWidth">Width of the GIF image produced.</param>
            <param name="Imageheight">Height of the GIF image produced.</param>
            <param name="Length">Número de carácteres que se muestran.</param>
            <param name="FilePath">Nombre y ruta del archivo que se generará al finalizar la generación.</param>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Captcha.ResetColor">
            <summary>
            Genera una coloración aleatória (por defecto).
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Captcha.GenerateCaptcha(System.String)">
            <summary>
            Genera una imagen Captcha en un archivo GIF.
            </summary>
            <param name="FilePath">Nombre de archivo (más la ruta) dónde se almacenará el archivo GIF.</param>
            <returns>El código que contiene la imagen Captcha.</returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Captcha.GenerateCaptcha">
            <summary>
            Genera una imagen Captcha para su uso en un script ASPX.
            </summary>
            <returns>Un objeto Bitmap que contiene la imagen a mostrar.</returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Captcha.GenerateCaptcha(System.Web.SessionState.HttpSessionState)">
            <summary>
            Genera una imagen Captcha para su uso en un script ASPX.
            </summary>
            <param name="Session">La instancia de Page.Session</param>
            <returns>Un objeto Bitmap que contiene la imagen a mostrar.</returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Captcha.GenerateCaptcha(System.Web.SessionState.HttpSessionState,System.String)">
            <summary>
            Genera una imagen Captcha para su uso en un script ASPX.
            </summary>
            <param name="Session">La instancia de Page.Session</param>
            <param name="SessionKey">Clave del objeto Session en la que desea guardar el código representado en la imagen captcha.</param>
            <returns>Un objeto Bitmap que contiene la imagen a mostrar.</returns>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Captcha.ValidateCaptcha(System.Web.SessionState.HttpSessionState,System.String)">
            <summary>
            Valida un código captcha leido por un usuario.
            </summary>
            <param name="Session">La instancia de Page.Session</param>
            <param name="value">Valor proporcionado por el usuario.</param>
            <returns>Un valor booleano que indica si la validación es correcta o no.</returns>
            <remarks>
            Este método se debe usar únicamente en conjunto con el método GenerateCaptcha(System.Web.SessionState.HttpSessionState).
            </remarks>
        </member>
        <member name="P:Cosmo.Utils.Drawing.Captcha.Text">
            <summary>
            Devuelve el código del captcha generado.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Drawing.Captcha.Color">
            <summary>
            Color único con el que se generará la imagen Captcha.
            </summary>
        </member>
        <member name="T:Cosmo.Utils.Html.Formatter">
            <summary>
            Helper para formateo de información.
            </summary>
        </member>
        <member name="F:Cosmo.Utils.Html.Formatter.FORMAT_SHORTTIME">
            <summary>Formato para hora.</summary>
        </member>
        <member name="F:Cosmo.Utils.Html.Formatter.FORMAT_DATE_MONTHYEAR">
            <summary>Formato para mostrar mes/año.</summary>
        </member>
        <member name="F:Cosmo.Utils.Html.Formatter.FORMAT_SHORTDATE">
            <summary>Formato para mostrar mes/año.</summary>
        </member>
        <member name="F:Cosmo.Utils.Html.Formatter.FORMAT_DATETIME">
            <summary>Formatter para fecha/hora (24h).</summary>
        </member>
        <member name="F:Cosmo.Utils.Html.Formatter.FORMAT_DATE">
            <summary>Formatter para fecha corta.</summary>
        </member>
        <member name="F:Cosmo.Utils.Html.Formatter.FORMAT_LONGDATE">
            <summary>Formatter para fecha larga.</summary>
        </member>
        <member name="M:Cosmo.Utils.Html.Formatter.bbCodeParser(System.String)">
            <summary>
            Convierte un texto con tags bbCodes a HTML.
            </summary>
            <param name="bbCodeText">Texto original que contiene códigos bbCodes.</param>
            <returns>Una cadena HTML.</returns>
        </member>
        <member name="T:Cosmo.Utils.Html.HtmlAttribute">
            <summary>
            Representa un atributo de un TAG Html.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlAttribute.#ctor(System.String)">
            <summary>
            Devuelve una instancia de HtmlAttribute.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlAttribute.#ctor(System.String,System.String)">
            <summary>
            Devuelve una instancia de HtmlAttribute.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Html.HtmlAttribute.Name">
            <summary>
            Devuelve o establece el nombre del parámetro.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Html.HtmlAttribute.Value">
            <summary>
            Devuelve o establece el valor del parámetro.
            </summary>
        </member>
        <member name="F:Cosmo.Utils.Html.HtmlTokens.Text">
            <summary>Lee texto (sin Tag analizado)</summary>
        </member>
        <member name="F:Cosmo.Utils.Html.HtmlTokens.Tag">
            <summary>Lee el Tag</summary>
        </member>
        <member name="F:Cosmo.Utils.Html.HtmlTokens.Attribute">
            <summary>Lee un parámetro</summary>
        </member>
        <member name="F:Cosmo.Utils.Html.HtmlTokens.Value">
            <summary>Lee el valor de parámetro</summary>
        </member>
        <member name="T:Cosmo.Utils.Html.HtmlDocument">
            <summary>
            Implementa una clase que representa un documento HTML separado por TAGs y texto. 
            Esta clase permite sanitizar fragmentos HTML capturados externamente.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlDocument.#ctor">
            <summary>
            Devuelve una instancia de Html.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlDocument.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Html.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlDocument.Parse(System.String)">
            <summary>
            Parsea el contenido Html original.
            </summary>
            <param name="inputHtml">Una cadena de texto que contiene el Html original.</param>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlDocument.IsAllowedTag(System.String)">
            <summary>
            Indica si un determinado TAG está permitido.
            </summary>
            <param name="tag">Nombre del TAG.</param>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlDocument.IsAllowedAttribute(System.String)">
            <summary>
            Indica si un determinado parámetro está permitido.
            </summary>
            <param name="attribute">Nombre del parámetro.</param>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlDocument.ToHtml">
            <summary>
            Convierte el Html interpretado en una cadena lista para enviar al cliente.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Html.HtmlDocument.InputHtml">
            <summary>
            Devuelve o establece la cadena HTML original (sin parsear).
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Html.HtmlDocument.DisallowedTags">
            <summary>
            Contiene la lista de TAGs prohibidos.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Html.HtmlDocument.DisallowedAttributes">
            <summary>
            Contiene la lista de atributos prohibidos.
            </summary>
        </member>
        <member name="T:Cosmo.Utils.Html.HtmlTag">
            <summary>
            Representa un TAG Html, es decir, cualquier elemento encapsulado entre &lt; y &gt;.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlTag.#ctor(Cosmo.Utils.Html.HtmlDocument,System.String)">
            <summary>
            Devuelve una instancia de HtmlTag.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlTag.GetParameter(System.String)">
            <summary>
            Permite obtener el valor de un parámetro capturado.
            </summary>
            <param name="key">Clave del parámetro que se desea obtener.</param>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlTag.ToXhtml">
            <summary>
            Convierte el TAG en una cadena de texto lista para enviar a un cliente.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlTag.Parse(System.String)">
            <summary>
            Parsea el contenido del TAG.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlTag.GetValue(System.String,System.Int32@)">
            <summary>
            Obtiene el siguiente valor. Este debe estar entre comillar simples o dobles.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Html.HtmlTag.IsClosigTag">
            <summary>
            Indica si se trata de un TAG de cierre.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Html.HtmlTag.Name">
            <summary>
            Nombre del TAG.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Html.HtmlTag.Attributes">
            <summary>
            Contiene la lista de atributos del TAG.
            </summary>
        </member>
        <member name="T:Cosmo.Utils.Html.HtmlText">
            <summary>
            Representa un fragmento de texto HTML.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlText.#ctor">
            <summary>
            Devuelve una instancia de HtmlText.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlText.#ctor(System.String)">
            <summary>
            Devuelve una instancia de HtmlText.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Html.HtmlText.ToXhtml">
            <summary>
            Convierte el objeto a una cadena de texto agregable al documento HTML.
            </summary>
            <returns>Una cadena de texto presentable en un documento HTML.</returns>
        </member>
        <member name="P:Cosmo.Utils.Html.HtmlText.Text">
            <summary>
            Devuelve o establece el fragmento de texto.
            </summary>
        </member>
        <member name="T:Cosmo.Utils.Html.Parsers.BBCodeParserOld">
            <summary>
            Parser para mensajes formateados con BBCodes.
            </summary>
            <remarks>
            Basado en el <a href="http://eksith.wordpress.com/2009/01/14/aspnet-bbcode-c/">artículo siguiente</a>.
            </remarks>
        </member>
        <member name="F:Cosmo.Utils.Html.Parsers.BBCodeParserOld.IMG_CLASS">
            <summary>Nombre de la clase que se aplica por defecto a las imágenes incluidas en los mensajes del foro.</summary>
        </member>
        <member name="F:Cosmo.Utils.Html.Parsers.BBCodeParserOld.MAX_QUOTE_LEVELS">
            <summary>Establece el número máximo de niveles de citación (quote).</summary>
        </member>
        <member name="M:Cosmo.Utils.Html.Parsers.BBCodeParserOld.Parse(System.String)">
            <summary>
            Converts the input plain-text BBCode to HTML output and replacing carriage returns
            and spaces with <br /> and   etc...
            Recommended: Use this function only during storage and updates.
            Keep a seperate field in your database for HTML formatted content and raw text.
            An optional third, plain text field, with no formatting info will make full text searching
            more accurate.
            E.G. BodyText(with BBCode for textarea/WYSIWYG), BodyPlain(plain text for searching),
            BodyHtml(formatted HTML for output pages)
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Html.Parsers.BBCodeParserOld.StripTags(System.String)">
            <summary>
            Elimina cualquier posible TAG HTML.
            </summary>
            <param name="content">Cadena de texto a tratar.</param>
            <returns>Una cadena sin ningún TAG.</returns>
        </member>
        <member name="M:Cosmo.Utils.Html.Parsers.BBCodeParserOld.MatchReplace(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Match and replace a specific pattern with formatted text
            </summary>
            <param name="pattern">Regular expression pattern</param>
            <param name="match">Match replacement</param>
            <param name="content">Text to format</param>
            <param name="multi">Multiline text (optional)</param>
            <param name="white">Ignore white space (optional)</param>
            <param name="cult">Indica si el reemplazo no es dependiente d ela cultura.</param>
            <returns>HTML Formatted from the original BBCode</returns>
        </member>
        <member name="T:Cosmo.Utils.Html.Parsers.PlainTextParser">
            <summary>
            Parser para mensajes de texto ASCII.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Html.Parsers.PlainTextParser.Parse(System.String)">
            <summary>
            Transforma los códigos BBCode de un mensaje a XHTML
            </summary>
            <param name="content">Texto original del mensaje</param>
            <returns>Una cadena XHTML que contiene el mensaje a visualizar</returns>
        </member>
        <member name="T:Cosmo.Utils.Plugin">
            <summary>
            Implementa un plugin para extender distintas funcionalidades de Cosmo.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Plugin.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Utils.Plugin"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Plugin.GetString(System.String,System.String)">
            <summary>
            Obtiene el valor en formato texto de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <param name="defaultvalue">Valor que devolverá en caso de no existir o no podre interpretarlo</param>
            <returns>El contenido String del parámetro</returns>
        </member>
        <member name="M:Cosmo.Utils.Plugin.GetString(System.String)">
            <summary>
            Obtiene el valor en formato texto de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <returns>El contenido String del parámetro</returns>
            <remarks>En caso de no existir el parámetro, devuelve una cadena vacía</remarks>
        </member>
        <member name="M:Cosmo.Utils.Plugin.GetInteger(System.String,System.Int32)">
            <summary>
            Obtiene el valor entero (int) de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <param name="defaultvalue">Valor que devolverá en caso de no existir o no podre interpretarlo</param>
            <returns>El valor numérico entero del parámetro</returns>
        </member>
        <member name="M:Cosmo.Utils.Plugin.GetInteger(System.String)">
            <summary>
            Obtiene el valor entero (int) de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <returns>El valor numérico entero del parámetro</returns>
            <remarks>En caso de no existir el parámetro, devuelve una valor 0</remarks>
        </member>
        <member name="M:Cosmo.Utils.Plugin.GetBoolean(System.String,System.Boolean)">
            <summary>
            Obtiene el valor booleano de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <param name="defaultvalue">Valor que devolverá en caso de no existir o no podre interpretarlo</param>
            <returns>El valor booleano del parámetro</returns>
        </member>
        <member name="M:Cosmo.Utils.Plugin.GetBoolean(System.String)">
            <summary>
            Obtiene el valor booleano de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <returns>El valor booleano del parámetro</returns>
            <remarks>En caso de no existir el parámetro, devuelve una valor false</remarks>
        </member>
        <member name="M:Cosmo.Utils.Plugin.ContainsPlugin(System.String,System.Collections.Generic.List{Cosmo.Utils.Plugin})">
            <summary>
            Comprueba si una lista de <em>plugins</em> contiene un determinado <em>plugin</em>.
            </summary>
            <param name="id">Identificador del <em>plugin</em> a buscar.</param>
            <param name="pluginList">Lista de <em>plugins</em> disponibles.</param>
            <returns><c>true</c> si la lista contiene el ID buscado o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Utils.Plugin.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Plugin.Instance">
            <summary>
            Permite almacenar la instancia del plugin.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Plugin.ID">
            <summary>
            Devuelve o establece el identificador del plugin.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Plugin.Class">
            <summary>
            Devuelve o establece el identificador del plugin.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Plugin.Default">
            <summary>
            Devuelve o establece el identificador del plugin.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Plugin.XmlPluginNode">
            <summary>
            Devuelve o establece el nodo XML que contiene la definición del plugin.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.Plugin.Settings">
            <summary>
            Devuelve o establece la lista de parámetros de configuración del plugin.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Rss.RssChannel">
            <summary>
            Implementa un canal RSS
            </summary>
        </member>
        <member name="F:Cosmo.Net.Rss.RssChannel.UrlParamChannel">
            <summary>Nombre del parámetro QueryString que indica el canal RSS (si hubiera más de un canal).</summary>
        </member>
        <member name="F:Cosmo.Net.Rss.RssChannel.UrlParamForceUpdate">
            <summary>Parámetro que permite forzar al refresco del contenido del canal sin usar el conteni9do en caché.</summary>
        </member>
        <member name="M:Cosmo.Net.Rss.RssChannel.#ctor">
            <summary>
            Devuelve una instancia de RssChannel
            </summary>
        </member>
        <member name="M:Cosmo.Net.Rss.RssChannel.#ctor(System.Uri)">
            <summary>
            Devuelve una instancia de RssChannel
            </summary>
        </member>
        <member name="M:Cosmo.Net.Rss.RssChannel.ToStream(System.IO.Stream)">
            <summary>
            Convierte un canal en código XML en formato RSS 2.0
            </summary>
            <returns>Una cadena en formato RSS 2.0</returns>
        </member>
        <member name="M:Cosmo.Net.Rss.RssChannel.ToStream(System.IO.Stream,System.Web.Caching.Cache,System.String,System.Int32)">
            <summary>
            Convierte un canal en código XML en formato RSS 2.0
            </summary>
            <returns>Una cadena en formato RSS 2.0</returns>
        </member>
        <member name="M:Cosmo.Net.Rss.RssChannel.ToXml">
            <summary>
            Convierte un canal en código XML en formato RSS 2.0
            </summary>
            <returns>Una cadena en formato RSS 2.0</returns>
        </member>
        <member name="M:Cosmo.Net.Rss.RssChannel.ToXml(System.Web.Caching.Cache,System.String,System.Int32)">
            <summary>
            Convierte un canal en código XML en formato RSS 2.0 usando caché de servidor
            </summary>
            <param name="cache">La instancia de Cache del servidor web</param>
            <param name="key">Clave para identificar el objeto (staring) en la caché</param>
            <param name="seconds">Número de segundos de validez de la caché</param>
            <returns>Una cadena en formato RSS 2.0</returns>
        </member>
        <member name="M:Cosmo.Net.Rss.RssChannel.Read(System.Uri)">
            <summary>
            Lee un canal RSS y lo carga en la estructura de la clase
            </summary>
            <param name="url">Dirección de descarga del canal RSS</param>
        </member>
        <member name="M:Cosmo.Net.Rss.RssChannel.ResetObject">
            <summary>
            Limpia el contenido del objeto
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannel.Title">
            <summary>
            Título del canal
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannel.Link">
            <summary>
            Enlace del site que generó el canal
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannel.Description">
            <summary>
            Descripción del canal
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannel.Language">
            <summary>
            Idioma usado en el canal
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannel.Copyright">
            <summary>
            Copyright legal del contenido
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannel.ManagingEditor">
            <summary>
            Editor del contenido
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannel.Webmaster">
            <summary>
            Responsable del sitio que generó el canal
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannel.PubDate">
            <summary>
            Fecha de publicación
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannel.LastBuildDate">
            <summary>
            Fecha de la última actualización del canal
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannel.Category">
            <summary>
            Categoria del canal
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannel.Generator">
            <summary>
            Software que generó el canal
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannel.Image">
            <summary>
            Imagen (logotipo) asociada al canal
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannel.Items">
            <summary>
            Lista de elementos que se muestran en el canal
            </summary>
        </member>
        <member name="T:Cosmo.Net.Rss.RssChannelImage">
            <summary>
            Implementa la imagen associada a un canal RSS
            </summary>
        </member>
        <member name="M:Cosmo.Net.Rss.RssChannelImage.#ctor">
            <summary>
            Devuelve una instancia de RssChannelImage
            </summary>
        </member>
        <member name="M:Cosmo.Net.Rss.RssChannelImage.#ctor(System.Uri,System.String,System.String)">
            <summary>
            Devuelve una instancia de RssChannelImage
            </summary>
            <param name="url">Url de la imagen</param>
            <param name="title">Título del canal</param>
            <param name="link">Enlace asociado a la imagen</param>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannelImage.Url">
            <summary>
            Dirección URL de la imagen
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannelImage.Title">
            <summary>
            Título de la imagen (equivalente al parámetro ALT del tag IMG)
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssChannelImage.Link">
            <summary>
            Enlace asociado a la imagen
            </summary>
        </member>
        <member name="T:Cosmo.Net.Rss.RssItem">
            <summary>
            Implementa una entrada de un canal RSS
            </summary>
        </member>
        <member name="M:Cosmo.Net.Rss.RssItem.#ctor">
            <summary>
            Devuelve una instancia de RssItem
            </summary>
        </member>
        <member name="M:Cosmo.Net.Rss.RssItem.#ctor(Cosmo.Net.Rss.RssChannel)">
            <summary>
            Devuelve una instancia de RssItem
            </summary>
        </member>
        <member name="M:Cosmo.Net.Rss.RssItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de RssItem
            </summary>
        </member>
        <member name="M:Cosmo.Net.Rss.RssItem.#ctor(System.String,System.String,System.String,Cosmo.Net.Rss.RssChannel)">
            <summary>
            Devuelve una instancia de RssItem
            </summary>
        </member>
        <member name="M:Cosmo.Net.Rss.RssItem.#ctor(System.String,System.String,System.String,System.DateTime)">
            <summary>
            Devuelve una instancia de RssItem
            </summary>
        </member>
        <member name="M:Cosmo.Net.Rss.RssItem.#ctor(System.String,System.String,System.String,System.DateTime,Cosmo.Net.Rss.RssChannel)">
            <summary>
            Devuelve una instancia de RssItem
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssItem.ParentFeed">
            <summary>
            Permite acceder al feed al que pertenece el elemento.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssItem.Link">
            <summary>
            Enlace al contenido
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssItem.Title">
            <summary>
            Título de la entrada
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssItem.Description">
            <summary>
            Descripción de la entrada
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssItem.PubDate">
            <summary>
            Fecha de publicación
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssItem.Category">
            <summary>
            Categoria (Tag) de la entrada
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssItem.Author">
            <summary>
            Email del autor del contenido
            </summary>
        </member>
        <member name="P:Cosmo.Net.Rss.RssItem.Guid">
            <summary>
            Cadena que identifica de forma única el elemento
            </summary>
        </member>
        <member name="T:Cosmo.Utils.KeyValue">
            <summary>
            Implementa un contenedor de valores para usar en controles UI tipo lista (u cualquier otro ámbito).
            </summary>
            <remarks>
            This class should be substituted by <see cref="!:KeyValuePair"/> in a short future.
            </remarks>
        </member>
        <member name="M:Cosmo.Utils.KeyValue.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Utils.KeyValue"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.KeyValue.#ctor(System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Utils.KeyValue"/>.
            </summary>
            <param name="label"></param>
            <param name="value"></param>
        </member>
        <member name="M:Cosmo.Utils.KeyValue.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.KeyValue.Label">
            <summary>
            Devuelve o establece la etiqueta visible que verá el usuario.
            </summary>
        </member>
        <member name="P:Cosmo.Utils.KeyValue.Value">
            <summary>
            Devuelve o establece el valor asociado a la etiqueta y que recogerá el control.
            </summary>
        </member>
        <member name="T:Cosmo.Utils.TextEncoding">
            <summary>
            Implementa una clase con utilidades para Http.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.TextEncoding.Base64Encode(System.String)">
            <summary>
            Codifica una cadena de texto en base64.
            </summary>
            <param name="originalString">Cadena de texto a codificar.</param>
            <returns>Cadena codificada.</returns>
        </member>
        <member name="M:Cosmo.Utils.TextEncoding.Base64Decode(System.String)">
            <summary>
            Descodifica una cadena base64.
            </summary>
            <param name="encodedString">Cadena codificada.</param>
            <returns>Texto original.</returns>
        </member>
        <member name="M:Cosmo.Utils.TextEncoding.HtmlEncode(System.String,System.String)">
            <summary>
            Reemplaza los carácteres especiales por entidades HTML.
            </summary>
            <param name="originalString">Texto original.</param>
            <param name="carryReturn">Carácter o cadena a reemplazar por los saltos de línea del texto.</param>
            <returns>La cadena compatible HTML.</returns>
        </member>
        <member name="M:Cosmo.Utils.TextEncoding.HtmlEncode(System.String)">
            <summary>
            Reemplaza los carácteres especiales por entidades HTML.
            </summary>
            <param name="originalString">Texto original.</param>
            <returns>La cadena compatible HTML.</returns>
        </member>
        <member name="M:Cosmo.Utils.TextEncoding.HtmlDecode(System.String,System.Boolean)">
            <summary>
            Reemplaza las entidades HTML a carácteres UTF-8.
            </summary>
            <param name="originalString">Texto HTML original.</param>
            <param name="replaceCR">Indica si se deben reemplazar los saltos de línea BR a su equivalente UTF-8.</param>
            <returns>El texto UTF-8.</returns>
        </member>
        <member name="M:Cosmo.Utils.TextEncoding.MimeDecode(System.String,System.Boolean)">
            <summary>
            Reemplaza las carácteres especiales MIME a UTF-8.
            </summary>
            <param name="originalString">Texto original con carácteres MIME.</param>
            <param name="replaceHTMLEntities">Indica si se deben reemplazar los indicadores de entidad HTML.</param>
            <returns>De3vuelve el texto en UTF-8.</returns>
        </member>
        <member name="T:Cosmo.Utils.BBCodeParser">
            <summary>
            Implementa un parser para código BBCode.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.BBCodeParser.Parse(System.String)">
            <summary>
            Parsea un texto que contenga códigos BBCode y lo convierte en XHTML válido W3C.
            </summary>
            <param name="text">Texto original a parsear.</param>
            <returns>El código XHTML resultante.</returns>
        </member>
        <member name="T:Cosmo.Utils.IO.FileReader">
            <summary>
            Implementa una classe con utilidades relacionadas con el sistema de archivos
            </summary>
        </member>
        <member name="M:Cosmo.Utils.IO.FileReader.LoadTextFileToByteArray(System.String)">
            <summary>
            Obtiene el contenido (texto) de un archivo.
            </summary>
            <param name="filename">Nombre y ruta del archivo.</param>
            <returns>El contenido (texto) del archivo.</returns>
        </member>
        <member name="M:Cosmo.Utils.IO.FileReader.LoadTextFileToString(System.String)">
            <summary>
            Obtiene el contenido (texto) de un archivo.
            </summary>
            <param name="filename">Nombre y ruta del archivo.</param>
            <returns>El contenido (texto) del archivo.</returns>
        </member>
        <member name="T:Cosmo.Utils.IO.PathInfo">
            <summary>
            Implementa una clase para el manejo de rutas físicas de archivos.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.IO.PathInfo.Combine(System.String,System.String)">
            <summary>
            Compina dos fragmentos de archivo/ruta
            </summary>
            <returns>Los fragmentos combinados.</returns>
        </member>
        <member name="M:Cosmo.Utils.IO.PathInfo.Combine(System.String[])">
            <summary>
            Compina dos o más fragmentos de archivo/ruta
            </summary>
            <returns>Los fragmentos combinados.</returns>
        </member>
        <member name="T:Cosmo.Net.Url">
            <summary>
            Implementa una clase para la gestión de URLs.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Url.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Net.Url"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Url.#ctor(System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Net.Url"/>.
            </summary>
            <param name="url">La dirección URL.</param>
        </member>
        <member name="M:Cosmo.Net.Url.#ctor(System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Net.Url"/>.
            </summary>
            <param name="url">La dirección URL.</param>
            <param name="anchorName">Nombre del enlace interno.</param>
        </member>
        <member name="M:Cosmo.Net.Url.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Net.Url"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Url.#ctor(System.Web.HttpRequest)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Net.Url"/>.
            </summary>
            <param name="request">Una instancia de <see cref="T:System.Web.HttpRequest"/></param>
        </member>
        <member name="M:Cosmo.Net.Url.ContainsKey(System.String)">
            <summary>
            Indica si una clave existe entre los parámetros recibidos.
            </summary>
            <param name="key">Una cadena de texto que representa la clave a comprobar.</param>
            <returns><c>true</c> si la colección contiene la clave o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetString(System.String,System.String)">
            <summary>
            Obtiene el valor en formato texto de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <param name="defaultvalue">Valor que devolverá en caso de no existir o no podre interpretarlo</param>
            <returns>El contenido String del parámetro</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetString(System.String)">
            <summary>
            Obtiene el valor en formato texto de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <returns>El contenido String del parámetro</returns>
            <remarks>En caso de no existir el parámetro, devuelve una cadena vacía</remarks>
        </member>
        <member name="M:Cosmo.Net.Url.GetInteger(System.String,System.Int32)">
            <summary>
            Obtiene el valor entero (int) de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <param name="defaultvalue">Valor que devolverá en caso de no existir o no podre interpretarlo</param>
            <returns>El valor numérico entero del parámetro</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetInteger(System.String)">
            <summary>
            Obtiene el valor entero (int) de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <returns>El valor numérico entero del parámetro</returns>
            <remarks>En caso de no existir el parámetro, devuelve una valor 0</remarks>
        </member>
        <member name="M:Cosmo.Net.Url.GetBoolean(System.String,System.Boolean)">
            <summary>
            Obtiene el valor booleano de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <param name="defaultvalue">Valor que devolverá en caso de no existir o no podre interpretarlo</param>
            <returns>El valor booleano del parámetro</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetBoolean(System.String)">
            <summary>
            Obtiene el valor booleano de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <returns>El valor booleano del parámetro</returns>
            <remarks>En caso de no existir el parámetro, devuelve una valor false</remarks>
        </member>
        <member name="M:Cosmo.Net.Url.ClearParameters">
            <summary>
            Elimina los parámetros de la Url.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Url.ClearParameters(System.String)">
            <summary>
            Elimina los parámetros de la Url.
            </summary>
            <param name="except">Nombre del parámetro a mantener.</param>
        </member>
        <member name="M:Cosmo.Net.Url.ClearParameters(System.String[])">
            <summary>
            Elimina los parámetros de la Url.
            </summary>
            <param name="except">Un array con los nombres de los parámetros a mantener.</param>
        </member>
        <member name="M:Cosmo.Net.Url.AddParameter(System.String,System.String)">
            <summary>
            Agrega un nuevo parámetro a la Url.
            </summary>
            <param name="name">Nombre del parámetro.</param>
            <param name="value">Valor del parámetro.</param>
        </member>
        <member name="M:Cosmo.Net.Url.AddParameter(System.String,System.Int32)">
            <summary>
            Agrega un nuevo parámetro numérico (entero) a la Url.
            </summary>
            <param name="name">Nombre del parámetro.</param>
            <param name="value">Valor del parámetro.</param>
        </member>
        <member name="M:Cosmo.Net.Url.AddParameter(System.String,System.Boolean)">
            <summary>
            Agrega un nuevo parámetro booleano a la Url.
            </summary>
            <param name="name">Nombre del parámetro.</param>
            <param name="value">Valor del parámetro.</param>
        </member>
        <member name="M:Cosmo.Net.Url.ToLink(System.String)">
            <summary>
            Convierte una URL o un eMail en un enlace Html.
            </summary>
            <param name="text">Texto que aparecerá en el enlace.</param>
            <returns>Un enlace XHTML.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.ToLink">
            <summary>
            Convierte una URL o un eMail en un enlace Html.
            </summary>
            <returns>Un enlace XHTML.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.IsValid">
            <summary>
            Indica si la Url es válida.
            </summary>
            <returns><c>true</c> si la Url es válida o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetEncodedURL(System.String)">
            <summary>
            Obtiene la URL resultante con los parámetros codificados.
            </summary>
            <param name="script">Nombre del script.</param>
            <returns>Una cadena de texto que representa la URL.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetEncodedURL(System.String,System.Boolean)">
            <summary>
            Obtiene la URL resultante con los parámetros codificados.
            </summary>
            <param name="script">Nombre del script.</param>
            <param name="clearAfetr">Indica si debe eliminar los parámetros después de devolver la URL.</param>
            <returns>Una cadena de texto que representa la URL.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.ToString">
            <summary>
            Transforma la Url a una cadena de texto.
            </summary>
            <returns>La cadena de texto.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.ToString(System.Boolean)">
            <summary>
            Transforma la Url a una cadena de texto.
            </summary>
            <param name="includeUrl">Indica si debe incluir el nombre del archivo o sólo devolver los parámetros.</param>
            <returns>La cadena de texto.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.ToString(System.Boolean,System.Boolean)">
            <summary>
            Transforma la Url a una cadena de texto.
            </summary>
            <param name="includeUrl">Indica si debe incluir el nombre del archivo o sólo devolver los parámetros.</param>
            <param name="htmlEncoded">Indica si debe codificar la URL para su uso en XHTML.</param>
            <returns>La cadena de texto.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetString(System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            Permite recuperar un parámetro String del QueryString
            </summary>
            <param name="parameters">Parámetros (Request.Params).</param>
            <param name="name">Nombre del parámetro a recuperar.</param>
            <param name="defaultvalue">Valor por defecto en caso de no poder obtener dicho valor.</param>
            <returns>El valor resultante.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetString(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Permite recuperar un parámetro String del QueryString
            </summary>
            <param name="parameters">Parámetros (Request.Params).</param>
            <param name="name">Nombre del parámetro a recuperar.</param>
            <returns>El valor resultante.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetInteger(System.Collections.Specialized.NameValueCollection,System.String,System.Int32)">
            <summary>
            Permite recuperar un parámetro Integer del QueryString
            </summary>
            <param name="parameters">Parámetros (Request.Params).</param>
            <param name="name">Nombre del parámetro a recuperar.</param>
            <param name="defaultvalue">Valor por defecto en caso de no poder obtener dicho valor.</param>
            <returns>El valor resultante.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetInteger(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Permite recuperar un parámetro Integer del QueryString
            </summary>
            <param name="parameters">Parámetros (Request.Params).</param>
            <param name="name">Nombre del parámetro a recuperar.</param>
            <returns>El valor resultante.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetBoolean(System.Collections.Specialized.NameValueCollection,System.String,System.Boolean)">
            <summary>
            Obtiene el valor booleano de un parámetro
            </summary>
            <param name="parameters">La colección de parámetros recibidos.</param>
            <param name="name">Nombre del parámetro</param>
            <param name="defaultvalue">Valor que devolverá en caso de no existir o no podre interpretarlo</param>
            <returns>El valor booleano del parámetro</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetBoolean(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Obtiene el valor booleano de un parámetro.
            </summary>
            <param name="parameters">La colección de parámetros recibidos.</param>
            <param name="name">Nombre del parámetro.</param>
            <returns>El valor booleano del parámetro.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetDateTime(System.Collections.Specialized.NameValueCollection,System.String,System.DateTime)">
            <summary>
            Obtiene la fecha/hora de un parámetro.
            </summary>
            <param name="parameters">La colección de parámetros recibidos.</param>
            <param name="name">Nombre del parámetro</param>
            <param name="defaultvalue">Valor que devolverá en caso de no existir o no podre interpretarlo</param>
            <returns>El valor <see cref="T:System.DateTime"/> del parámetro.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetDateTime(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Obtiene la fecha/hora de un parámetro.
            </summary>
            <param name="parameters">La colección de parámetros recibidos.</param>
            <param name="name">Nombre del parámetro.</param>
            <returns>El valor <see cref="T:System.DateTime"/> del parámetro.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.FromUrl(System.String)">
            <summary>
            Obtiene los parámetros desde una URL (con o sin el nombre de archivo).
            </summary>
            <param name="url">URL a tratar.</param>
            <returns>Una instancia de <see cref="T:Cosmo.Net.Url"/>.</returns>
            <remarks>Para recojer la URL actual: Request.Url.AbsoluteUri</remarks>
        </member>
        <member name="M:Cosmo.Net.Url.Combine(System.String,System.String)">
            <summary>
            Compina dos fragmentos de URL
            </summary>
            <returns>Los fragmentos combinados.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.Combine(System.String[])">
            <summary>
            Compina dos o más fragmentos de URL
            </summary>
            <returns>Los fragmentos combinados.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.IsValid(System.String)">
            <summary>
            Permite verificar si una URL es válida.
            </summary>
            <param name="url">URL a verificar.</param>
            <returns>Un valor booleano indicando la validez.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.ConvertToLink(System.String,System.String)">
            <summary>
            Convierte una URL o un ex-Mail en un enlace Html
            </summary>
            <param name="address">Dirección de mail o URL</param>
            <param name="text">Texto que se mostrará en el enlace.</param>
            <returns>Un enlace XHTML</returns>
        </member>
        <member name="M:Cosmo.Net.Url.ConvertToLink(System.String)">
            <summary>
            Convierte una URL o un ex-Mail en un enlace Html
            </summary>
            <param name="address">Dirección de mail o URL</param>
            <returns>Un enlace XHTML</returns>
        </member>
        <member name="M:Cosmo.Net.Url.Browse(System.String)">
            <summary>
            Navega hacia una determinada URL usando el navegador por defecto.
            </summary>
            <param name="url">URL de destino.</param>
        </member>
        <member name="P:Cosmo.Net.Url.AnchorName">
            <summary>
            Devuelve o establece el nombre del ancla.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Url.Filename">
            <summary>
            Devuelve o establece el nombre del archivo.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Url.Parameters">
            <summary>
            Contiene la lista de parámetros de la Url.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Url.Encryption">
            <summary>
            Clase privada para encriptación/desencriptación del QueryString
            </summary>
        </member>
        <member name="T:Cosmo.Utils.Calendar">
            <summary>
            Summary description for CSUtils
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Calendar.DateDiff(Cosmo.Utils.Calendar.DateInterval,System.DateTime,System.DateTime)">
            <summary>
            Permite quantificar la diferencia entre dos fechas/horas
            </summary>
            <param name="Interval">Medida de la diferencia entre las dos fechas</param>
            <param name="StartDate">Fecha/hora inicial</param>
            <param name="EndDate">Fecha/hora final</param>
            <returns>El número de unidades (determinado por el parámetro Interval) que marcan la diferencia</returns>
        </member>
        <member name="M:Cosmo.Utils.Calendar.IsDateType(System.Type)">
            <summary>
            Determina si una instancia es una hora/fecha.
            </summary>
            <param name="objectType">Tipo de la instancia a evaluar.</param>
            <returns><c>true</c> si la instancia pertenece a un valor de hora o fecha o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="T:Cosmo.Utils.Calendar.DateInterval">
            <summary>
            Enumera los tipos de intervalo soportados por la clase Calendar.
            </summary>
        </member>
        <member name="F:Cosmo.Utils.Calendar.DateInterval.Second">
            <summary>Segundos</summary>
        </member>
        <member name="F:Cosmo.Utils.Calendar.DateInterval.Minute">
            <summary>Minutos</summary>
        </member>
        <member name="F:Cosmo.Utils.Calendar.DateInterval.Hour">
            <summary>Horas</summary>
        </member>
        <member name="F:Cosmo.Utils.Calendar.DateInterval.Day">
            <summary>Dias</summary>
        </member>
        <member name="F:Cosmo.Utils.Calendar.DateInterval.Week">
            <summary>Semanas</summary>
        </member>
        <member name="F:Cosmo.Utils.Calendar.DateInterval.Month">
            <summary>Meses</summary>
        </member>
        <member name="F:Cosmo.Utils.Calendar.DateInterval.Quarter">
            <summary>Trimestres</summary>
        </member>
        <member name="F:Cosmo.Utils.Calendar.DateInterval.Year">
            <summary>Años</summary>
        </member>
        <member name="T:Cosmo.Utils.Drawing.Thumbnail">
            <summary>
            Implementa una clase que permite el manejo básico de imágenes.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Drawing.Thumbnail.Create(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Genera una imagen miniatura a partir de una imagen original
            </summary>
            <param name="filename">Nombre del archivo que contiene la imagen</param>
            <param name="maxWidth">Ancho máximo de la imagen resultante</param>
            <param name="maxHeight">Altura máxima de la imagen resultante</param>
            <param name="save">Indica si se debe guardar la imagen resultante</param>
            <returns>Una instancia Bitmap que contiene la imagen miniatura</returns>
            <remarks>
            Al guardar la imagen miniatura se renombra añadiendo el prefijo "th_" delante del nombre 
            y se mantiene la misma ruta.
            </remarks>
        </member>
        <member name="T:Cosmo.Utils.IO.EncodedStringWriter">
            <summary>
            Implementa una clase StringBuilder que permite especificar la codificación de sus carácteres
            </summary>
        </member>
        <member name="M:Cosmo.Utils.IO.EncodedStringWriter.#ctor(System.Text.StringBuilder,System.Text.Encoding)">
            <summary>
            Devuelve una instancia de EncodedStringWriter.
            </summary>
            <param name="builder"></param>
            <param name="encoding"></param>
        </member>
        <member name="P:Cosmo.Utils.IO.EncodedStringWriter.Encoding">
            <summary>
            Devuelve la codificación.
            </summary>
        </member>
        <member name="T:Cosmo.Utils.AssemblyInfo">
            <summary>
            Assembly info helper class.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Title">
            <summary>
            Gets the title of the current assembly.
            </summary>
            <returns>Title.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Title(System.String)">
            <summary>
            Gets the title of a specific assembly.
            </summary>
            <param name="path">Path of the assembly.</param>
            <returns>Title.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Version">
            <summary>
            Gets the version of the current assembly.
            </summary>
            <returns>Version.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Version(System.Int32)">
            <summary>
            Gets the version of the current assembly with a separator count.
            </summary>
            <param name="separatorCount">Number that determines how many version numbers should be returned.</param>
            <returns>Version.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Version(System.String)">
            <summary>
            Gets the version of a specific assembly.
            </summary>
            <param name="path">Path of the assembly.</param>
            <returns>Version.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Version(System.String,System.Int32)">
            <summary>
            Gets the version of a specific assembly with a separator count.
            </summary>
            <param name="path">Path of the assembly.</param>
            <param name="separatorCount">Number that determines how many version numbers should be returned.</param>
            <returns>Version.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Description">
            <summary>
            Gets the description of the current assembly.
            </summary>
            <returns>Description.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Description(System.String)">
            <summary>
            Gets the description of a specific assembly.
            </summary>
            <param name="path">Path of the assembly.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Product">
            <summary>
            Gets the product of the current assembly.
            </summary>
            <returns>Product.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Product(System.String)">
            <summary>
            Gets the product of a specific assembly.
            </summary>
            <param name="path">Path of the assembly.</param>
            <returns>Product.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Copyright">
            <summary>
            Gets the copyright of the current assembly.
            </summary>
            <returns>Copyright.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Copyright(System.String)">
            <summary>
            Gets the copyright of a specific assembly.
            </summary>
            <param name="path">Path of the assembly.</param>
            <returns>Copyright.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Company">
            <summary>
            Gets the company of a specific assembly.
            </summary>
            <returns>Company.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Company(System.String)">
            <summary>
            Gets the company of a specific assembly
            </summary>
            <param name="path">Path of the assembly</param>
            <returns>Company</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Path">
            <summary>
            Gets a path of the current assembly.
            </summary>
            <returns>Path.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.Path(System.String)">
            <summary>
            Gets the path of a specific assembly.
            </summary>
            <param name="path">Path of the assembly.</param>
            <returns>Path.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.GetAssembly(System.String)">
            <summary>
            Loads a specific assembly. If the failing of a specific assembly fails, the entry assembly is returned.
            </summary>
            <param name="path">Path of the assembly to load or null if the entry assembly should be loaded.</param>
            <returns>Assembly.</returns>
        </member>
        <member name="M:Cosmo.Utils.AssemblyInfo.GetAssemblyAttributeValue(System.Reflection.Assembly,System.Type,System.String)">
            <summary>
            Gets the specific <see cref="T:System.Attribute"/> value of the attribute type in the specified assembly.
            </summary>
            <param name="assembly">Assembly to read the information from.</param>
            <param name="attribute">Attribute to read.</param>
            <param name="property">Property to read from the attribute.</param>
            <returns>Value of the attribute or empty if the attribute is not found.</returns>
        </member>
        <member name="T:Cosmo.Security.Cryptography.UriCryptography">
            <summary>
            Implementa una clase para encriptar/desencriptar cadenas de texto correspondientes a URLs.
            </summary>
        </member>
        <member name="M:Cosmo.Security.Cryptography.UriCryptography.Encrypt(System.String,System.String)">
            <summary>
            Encrypts any string using the Rijndael algorithm.
            </summary>
            <param name="originalText">The string to encrypt.</param>
            <param name="key">Clave de encriptación que se usará para encriptar el texto.</param>
            <returns>A Base64 encrypted string.</returns>
        </member>
        <member name="M:Cosmo.Security.Cryptography.UriCryptography.Decrypt(System.String,System.String)">
            <summary>
            Decrypts a previously encrypted string.
            </summary>
            <param name="encryptedText">The encrypted string to decrypt.</param>
            <param name="key">Clave de encriptación usada para encriptar el texto.</param>
            <returns>A decrypted string.</returns>
        </member>
        <member name="T:Cosmo.Utils.IO.Compression.ZipStorer">
            <summary>
            Implementa una clase para la gestión de archivos comprimidos en formato ZIP.
            </summary>
            <remarks>
            ZipStorer, by Jaime Olivares
            Website: zipstorer.codeplex.com
            Version: 2.20 (Sep.29, 2009)
            </remarks>
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.EncodeUTF8">
            <summary>True if UTF8 encoding for filename and comments, false if default (CP 437)</summary>
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.ForceDeflating">
            <summary>Force deflate algotithm even if it inflates the stored file. Off by default.</summary>
        </member>
        <member name="M:Cosmo.Utils.IO.Compression.ZipStorer.Create(System.String,System.String)">
            <summary>
            Method to create a new storage file
            </summary>
            <param name="_filename">Full path of Zip file to create</param>
            <param name="_comment">General comment for Zip file</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:Cosmo.Utils.IO.Compression.ZipStorer.Create(System.IO.Stream,System.String)">
            <summary>
            Method to create a new zip storage in a stream
            </summary>
            <param name="_stream"></param>
            <param name="_comment"></param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:Cosmo.Utils.IO.Compression.ZipStorer.Open(System.String,System.IO.FileAccess)">
            <summary>
            Method to open an existing storage file
            </summary>
            <param name="_filename">Full path of Zip file to open</param>
            <param name="_access">File access mode as used in FileStream constructor</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:Cosmo.Utils.IO.Compression.ZipStorer.Open(System.IO.Stream,System.IO.FileAccess)">
            <summary>
            Method to open an existing storage from stream
            </summary>
            <param name="_stream">Already opened stream with zip contents</param>
            <param name="_access">File access mode for stream operations</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:Cosmo.Utils.IO.Compression.ZipStorer.AddFile(Cosmo.Utils.IO.Compression.ZipStorer.Compression,System.String,System.String,System.String)">
            <summary>
            Add full contents of a file into the Zip storage
            </summary>
            <param name="_method">Compression method</param>
            <param name="_pathname">Full path of file to add to Zip storage</param>
            <param name="_filenameInZip">Filename and path as desired in Zip directory</param>
            <param name="_comment">Comment for stored file</param>        
        </member>
        <member name="M:Cosmo.Utils.IO.Compression.ZipStorer.AddStream(Cosmo.Utils.IO.Compression.ZipStorer.Compression,System.String,System.IO.Stream,System.DateTime,System.String)">
            <summary>
            Add full contents of a stream into the Zip storage
            </summary>
            <param name="_method">Compression method</param>
            <param name="_filenameInZip">Filename and path as desired in Zip directory</param>
            <param name="_source">Stream object containing the data to store in Zip</param>
            <param name="_modTime">Modification time of the data to store</param>
            <param name="_comment">Comment for stored file</param>
        </member>
        <member name="M:Cosmo.Utils.IO.Compression.ZipStorer.Close">
            <summary>
            Updates central directory (if pertinent) and close the Zip storage
            </summary>
            <remarks>This is a required step, unless automatic dispose is used</remarks>
        </member>
        <member name="M:Cosmo.Utils.IO.Compression.ZipStorer.ReadCentralDir">
            <summary>
            Read all the file records in the central directory 
            </summary>
            <returns>List of all entries in directory</returns>
        </member>
        <member name="M:Cosmo.Utils.IO.Compression.ZipStorer.ExtractFile(Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry,System.String)">
            <summary>
            Copy the contents of a stored file into a physical file
            </summary>
            <param name="_zfe">Entry information of file to extract</param>
            <param name="_filename">PropertyName of file to store uncompressed data</param>
            <returns>True if success, false if not.</returns>
            <remarks>Unique compression methods are Store and Deflate</remarks>
        </member>
        <member name="M:Cosmo.Utils.IO.Compression.ZipStorer.ExtractFile(Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry,System.IO.Stream)">
            <summary>
            Copy the contents of a stored file into an opened stream
            </summary>
            <param name="_zfe">Entry information of file to extract</param>
            <param name="_stream">Stream to store the uncompressed data</param>
            <returns>True if success, false if not.</returns>
            <remarks>Unique compression methods are Store and Deflate</remarks>
        </member>
        <member name="M:Cosmo.Utils.IO.Compression.ZipStorer.RemoveEntries(Cosmo.Utils.IO.Compression.ZipStorer@,System.Collections.Generic.List{Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry})">
            <summary>
            Removes one of many files in storage. It creates a new Zip file.
            </summary>
            <param name="_zip">Reference to the current Zip object</param>
            <param name="_zfes">List of Entries to remove from storage</param>
            <returns>True if success, false if not</returns>
            <remarks>This method only works for storage of type FileStream</remarks>
        </member>
        <member name="M:Cosmo.Utils.IO.Compression.ZipStorer.Dispose">
            <summary>
            Closes the Zip file stream
            </summary>
        </member>
        <member name="T:Cosmo.Utils.IO.Compression.ZipStorer.Compression">
            <summary>
            Compression method enumeration
            </summary>
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.Compression.Store">
            <summary>Uncompressed storage</summary> 
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.Compression.Deflate">
            <summary>Deflate compression method</summary>
        </member>
        <member name="T:Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry">
            <summary>
            Represents an entry in Zip file directory
            </summary>
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry.Method">
            <summary>Compression method</summary>
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry.FilenameInZip">
            <summary>Full path and filename as stored in Zip</summary>
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry.FileSize">
            <summary>Original file size</summary>
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry.CompressedSize">
            <summary>Compressed file size</summary>
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry.HeaderOffset">
            <summary>Offset of header information inside Zip storage</summary>
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry.FileOffset">
            <summary>Offset of file inside Zip storage</summary>
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry.HeaderSize">
            <summary>Size of header information</summary>
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry.Crc32">
            <summary>32-bit checksum of entire file</summary>
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry.ModifyTime">
            <summary>Last modification time of file</summary>
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry.Comment">
            <summary>User comment for file</summary>
        </member>
        <member name="F:Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry.EncodeUTF8">
            <summary>True if UTF8 encoding for filename and comments, false if default (CP 437)</summary>
        </member>
        <member name="M:Cosmo.Utils.IO.Compression.ZipStorer.ZipFileEntry.ToString">
            <summary>Overriden method</summary>
            <returns>Filename in Zip</returns>
        </member>
        <member name="T:Cosmo.Utils.Mime">
            <summary>
            Implementa una clase con utilidades MIME.
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Mime.GetType(System.String)">
            <summary>
            Obtiene el tipo MIME associado a un archivo.
            </summary>
            <param name="filename">Nombre y path del archivo.</param>
            <returns>Una cadena que describe el tipo MIME asociado.</returns>
        </member>
        <member name="T:Cosmo.WorkspaceSettings">
            <summary>
            Clase que gestiona la lectura y el acceso a los parámetros de configuración del workspace.
            </summary>
        </member>
        <member name="F:Cosmo.WorkspaceSettings.PROPERTIES_FILENAME">
            <summary>Nombre del archivo de configuración de Cosmo (sin path).</summary>
        </member>
        <member name="M:Cosmo.WorkspaceSettings.#ctor(System.Web.HttpContext)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.WorkspaceSettings"/>.
            </summary>
            <param name="context">Contexto de la llamada HTTP.</param>
        </member>
        <member name="M:Cosmo.WorkspaceSettings.GetString(System.String,System.String)">
            <summary>
            Devuelve el valor de una clave de configuración de tipo <see cref="T:System.String"/>.
            </summary>
            <param name="key">Clave</param>
            <param name="defaultValue">Valor a devolver si la clave no consta en la configuración</param>
            <returns>El valor guardado en la configuración o si no puede hallarlo, el valor por defecto</returns>
        </member>
        <member name="M:Cosmo.WorkspaceSettings.GetString(System.String)">
            <summary>
            Devuelve el valor de una clave de configuración de tipo string
            </summary>
            <param name="key">Clave</param>
            <returns>El valor guardado en la configuración o si no puede hallarlo, el valor por defecto</returns>
        </member>
        <member name="M:Cosmo.WorkspaceSettings.GetBoolean(System.String,System.Boolean)">
            <summary>
            Devuelve el valor de una clave de configuración booleana
            </summary>
            <param name="key">Clave</param>
            <param name="defaultValue">Valor a devolver si la clave no consta en la configuración</param>
            <returns>El valor guardado en la configuración o si no puede hallarlo, el valor por defecto</returns>
        </member>
        <member name="M:Cosmo.WorkspaceSettings.GetBoolean(System.String)">
            <summary>
            Devuelve el valor de una clave de configuración booleana
            </summary>
            <param name="key">Clave</param>
            <returns>El valor guardado en la configuración o si no puede hallarlo, el valor por defecto</returns>
        </member>
        <member name="M:Cosmo.WorkspaceSettings.GetInt(System.String,System.Int32)">
            <summary>
            Devuelve el valor de una clave de configuración numérico entero
            </summary>
            <param name="key">Clave</param>
            <param name="defaultValue">Valor a devolver si la clave no consta en la configuración</param>
            <returns>El valor guardado en la configuración o si no puede hallarlo, el valor por defecto</returns>
        </member>
        <member name="M:Cosmo.WorkspaceSettings.GetInt(System.String)">
            <summary>
            Devuelve el valor de una clave de configuración numérico entero
            </summary>
            <param name="key">Clave</param>
            <returns>El valor guardado en la configuración o si no puede hallarlo, el valor por defecto</returns>
        </member>
        <member name="M:Cosmo.WorkspaceSettings.SetSetting(System.String,System.String)">
            <summary>
            Establece el valor de una clave de configuración
            </summary>
            <param name="key">Clave</param>
            <param name="value">Valor</param>
        </member>
        <member name="M:Cosmo.WorkspaceSettings.SetSetting(System.String,System.Object)">
            <summary>
            Establece el valor de una clave de configuración
            </summary>
            <param name="key">Clave</param>
            <param name="value">Valor</param>
        </member>
        <member name="M:Cosmo.WorkspaceSettings.Initialize(System.Web.HttpContext)">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.WorkspaceSettings.LoadFile">
            <summary>
            Carga el archivo de confioguración del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.ConfigFilename">
            <summary>
            Devuelve la ruta y nombre de archivo usado para cargar la configuración del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.ApplicationName">
            <summary>
            Devuelve el nombre de la aplicación.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.ApplicationUrl">
            <summary>
            Devuelve la URL de la aplicación.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.Status">
            <summary>
            Devuelve es estado en que se encuentra la aplicación.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.ApplicationMail">
            <summary>
            Devuelve el mail de contacto con el responsable de la aplicación.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.ApplicationCharset">
            <summary>
            Devuelve el conjunto de caracteres usado para representar las páginas.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.ApplicationDescription">
            <summary>
            Devuelve la descripción por defecto que describe el contenido de las páginas.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.ApplicationKeywords">
            <summary>
            Devuelve la lista de palabras clave que describen el contenido por defecto de las páginas.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.ApplicationLanguage">
            <summary>
            Devuelve el código de idioma.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.ApplicationUrlClosed">
            <summary>
            Devuelve la URL a la que se debe redirigir al cliente si el workspace se encuentra <em>offline</em>.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.Settings">
            <summary>
            Devuelve las propiedades de configuración de la aplicación.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.AuthenticationModules">
            <summary>
            Devuelve la lista de módulos de autenticación del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.DataModules">
            <summary>
            Devuelve la lista de módulos de datos del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.DataLists">
            <summary>
            Devuelve la lista de módulos de datos del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.CommunicationModules">
            <summary>
            Devuelve la lista de módulos de comunicación del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.RenderModules">
            <summary>
            Devuelve la lista de módulos de renderizado del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.MenuModules">
            <summary>
            Devuelve la lista de módulos proveedores de menú.
            </summary>
        </member>
        <member name="P:Cosmo.WorkspaceSettings.FileSystemControllers">
            <summary>
            Devuelve la lista de controladores del sistema de archivos.
            </summary>
        </member>
        <member name="T:Cosmo.Utils.IO.Shell">
            <summary>
            Implementa una classe con utilidades relacionadas con el sistema de archivos
            </summary>
        </member>
        <member name="M:Cosmo.Utils.IO.Shell.FolderExists(System.String)">
            <summary>
            Averigua si una carpeta existe.
            </summary>
            <param name="path">Ruta a la carpeta.</param>
            <returns>Un valor que indica si la carpeta existe o no.</returns>
        </member>
        <member name="M:Cosmo.Utils.IO.Shell.FileExists(System.String)">
            <summary>
            Averigua si un archivo existe.
            </summary>
            <param name="path">Ruta del archivo.</param>
            <returns>Un valor que indica si el archivo existe o no.</returns>
        </member>
        <member name="T:Cosmo.Utils.Number">
            <summary>
            Implementa una clase con utilidades para tratar números
            </summary>
        </member>
        <member name="M:Cosmo.Utils.Number.IsNumeric(System.String)">
            <summary>
            Indica si una cadena de texto es numérica.
            </summary>
            <param name="number">Cadena a comprobar.</param>
            <returns>True/False dependiendo del tipo de cadena.</returns>
        </member>
        <member name="M:Cosmo.Utils.Number.StrToInt(System.String)">
            <summary>
            Convierte una cadéna de texto numérica en un valor entero.
            </summary>
            <param name="number">Cadena a convertir.</param>
            <returns>Un valor entero o -1 si falla la conversion.</returns>
        </member>
        <member name="M:Cosmo.Utils.Number.Val(System.String)">
            <summary>
            Retorna la parte numérica de una cadena de texto.
            </summary>
            <param name="text">Cadena a transformar.</param>
            <returns>Un valor entero.</returns>
        </member>
        <member name="M:Cosmo.Utils.Number.IsIntegerType(System.Type)">
            <summary>
            Determina si una instancia es un entero.
            </summary>
            <param name="objectType">Tipo de la instancia a evaluar.</param>
            <returns><c>true</c> si la instancia pertenece a un valor entero o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Utils.Number.IsDecimalType(System.Type)">
            <summary>
            Determina si una instancia es un valor decimal.
            </summary>
            <param name="objectType">Tipo de la instancia a evaluar.</param>
            <returns><c>true</c> si la instancia pertenece a un valor decimal o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="T:Cosmo.Security.Cryptography.Cryptography">
            <summary>
            Implementa una clase para la encriptación/desecriptación de datos seguros
            </summary>
        </member>
        <member name="M:Cosmo.Security.Cryptography.Cryptography.Encrypt(System.String,System.String,System.Boolean)">
            <summary>
            Cifra (encripta) una cadena de texto.
            </summary>
            <param name="toEncrypt">Cadena de texto a cifrar.</param>
            <param name="key">Clave usada para encriptar los datos</param>
            <param name="useHashing">Activa un cifrado más fuerte (seguro).</param>
            <returns>El texto original cifrado.</returns>
        </member>
        <member name="M:Cosmo.Security.Cryptography.Cryptography.Decrypt(System.String,System.String,System.Boolean)">
            <summary>
            Descifra (desencripta) una cadena cifrada anteriormente con el método Encrypt().
            </summary>
            <param name="cipherString">Cadena cifrada.</param>
            <param name="key">Clave usada para desencriptar los datos</param>
            <param name="useHashing">Activar si para el cifrado se usó Hashing.</param>
            <returns>La cadena original descrifrada.</returns>
        </member>
        <member name="T:Cosmo.FileSystem.FileSystemService">
            <summary>
            Implementa una clase para la gestión del sistema de archivos del workspace.
            </summary>
        </member>
        <member name="M:Cosmo.FileSystem.FileSystemService.#ctor(Cosmo.Workspace)">
            <summary>
            Devuelve una instancia de <see cref="P:Cosmo.Workspace.FileSystemService"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace"/>.</param>
        </member>
        <member name="M:Cosmo.FileSystem.FileSystemService.GetServicePath(System.String)">
            <summary>
            Obtiene la ruta física a la carpeta de un determinado servicio.
            </summary>
            <param name="serviceFolderName">Identificador del objeto.</param>
            <returns>La ruta física en el servidor web a la carpeta solicitada.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.FileSystemService.GetFilePath(System.String,System.String)">
            <summary>
            Obtiene la ruta física a un archivo asociado a un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <param name="filename">Nombre del archivo (sin ruta).</param>
            <returns>La ruta al archivo solicitado.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.FileSystemService.GetFileURL(System.String,System.String)">
            <summary>
            Obtiene la URL a un archivo asociado a un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <param name="filename">Nombre del archivo (sin ruta).</param>
            <returns>La URL al archivo solicitado.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.FileSystemService.GetFileURL(System.String,System.String,System.Boolean)">
            <summary>
            Obtiene la URL a un archivo asociado a un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <param name="filename">Nombre del archivo (sin ruta).</param>
            <param name="relativeUrl">Indica si se desea obtener una URL relativa.</param>
            <returns>La URL al archivo solicitado.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.FileSystemService.GetObjectFolder(System.String)">
            <summary>
            Obtiene la ruta física a la carpeta contenedora de un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <returns>La ruta al directorio privado de un objeto.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.FileSystemService.GetObjectFiles(System.String)">
            <summary>
            Obtiene una lista con los archivos asociados a un objeto.
            </summary>
            <param name="objectId">Identificador del objeto.</param>
            <returns>Una lista de instancias de <see cref="T:System.IO.FileInfo"/> que representan los archivos asociados al objeto.</returns>
        </member>
        <member name="M:Cosmo.FileSystem.FileSystemService.DeleteFile(System.String,System.String,System.Boolean)">
            <summary>
            Delete a file associated to an object.
            </summary>
            <param name="objectId">Object unique identifier.</param>
            <param name="filename">File name without path.</param>
            <param name="throwError">Indicates if the method must thrown an error if the file don't exist or if it can be deleted.</param>
        </member>
        <member name="M:Cosmo.FileSystem.FileSystemService.LoadController">
            <summary>
            Carga el módulo controlador del sistema de archivos configurado.
            </summary>
        </member>
        <member name="P:Cosmo.FileSystem.FileSystemService.ActiveControllerId">
            <summary>
            Devuelve el nombre (ID) del módulo activo de gestion de archivos.
            </summary>
        </member>
        <member name="P:Cosmo.FileSystem.FileSystemService.ApplicationPath">
            <summary>
            Devuelve la ruta raíz de la aplicación.
            </summary>
        </member>
        <member name="T:Cosmo.Security.Role">
            <summary>
            Implementa una clase que representa un rol de usuario.
            </summary>
        </member>
        <member name="M:Cosmo.Security.Role.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.Role"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Security.Role.#ctor(System.Int32,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.Role"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Security.Role.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.Security.Role.ID">
            <summary>
            Devuelve el identificador único del rol.
            </summary>
        </member>
        <member name="P:Cosmo.Security.Role.Name">
            <summary>
            Devuelve o establece el nombre del rol.
            </summary>
        </member>
        <member name="P:Cosmo.Security.Role.Description">
            <summary>
            Devuelve o establece la descripción del rol.
            </summary>
        </member>
        <member name="T:Cosmo.Security.Auth.AuthenticationException">
            <summary>
            Excepción que se lanza cuando la cuenta de usuario está inhabilitada.
            </summary>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationException.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.Auth.AuthenticationException"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.Auth.AuthenticationException"/>.
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.Auth.AuthenticationException"/>.
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Diagnostics.LoggerService">
            <summary>
            Genera una clase de servicio para la gestión del registro de eventos.
            </summary>
        </member>
        <member name="M:Cosmo.Diagnostics.LoggerService.#ctor(Cosmo.Workspace)">
            <summary>
            Devuelve una instancia de Logger
            </summary>
            <param name="workspace">Workspace actual</param>
        </member>
        <member name="M:Cosmo.Diagnostics.LoggerService.Add(Cosmo.Workspace,Cosmo.Diagnostics.LogEntry)">
            <summary>
            Agrega una entrada en el registro de eventos.
            </summary>
            <param name="workspace">Workspace actual.</param>
            <param name="logentry">Registro a agregar.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.LoggerService.Add(Cosmo.Diagnostics.LogEntry)">
            <summary>
            Registra una entrada en el archivo de LOG del Workspace.
            </summary>
            <param name="entry">Una entrada descrita por una instancia de LogEntry.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.LoggerService.Add(System.String,System.String,Cosmo.Diagnostics.LogEntry.LogEntryType,System.String,System.Int32)">
            <summary>
            Registra una entrada en el archivo de LOG del Workspace.
            </summary>
            <param name="message">Descripción del evento.</param>
            <param name="appName">Nombre de la aplicación.</param>
            <param name="type">Tipo de evento.</param>
            <param name="module">Módulo dónde se produce el evento.</param>
            <param name="code">Código del evento.</param>
            <returns>Un valor booleano indicando el resultado de la operación.</returns>
        </member>
        <member name="M:Cosmo.Diagnostics.LoggerService.Add(System.String,System.String,Cosmo.Diagnostics.LogEntry.LogEntryType,System.String)">
            <summary>
            Registra una entrada en el archivo de LOG del Workspace.
            </summary>
            <param name="message">Descripción del evento.</param>
            <param name="appName">Nombre de la aplicación.</param>
            <param name="type">Tipo de evento.</param>
            <param name="module">Módulo dónde se produce el evento.</param>
            <returns>Un valor booleano indicando el resultado de la operación.</returns>
        </member>
        <member name="M:Cosmo.Diagnostics.LoggerService.Add(System.String,Cosmo.Diagnostics.LogEntry.LogEntryType,System.String)">
            <summary>
            Registra una entrada en el archivo de LOG del Workspace.
            </summary>
            <param name="message">Descripción del evento.</param>
            <param name="type">Tipo de evento.</param>
            <param name="module">Módulo dónde se produce el evento.</param>
            <returns>Un valor booleano indicando el resultado de la operación.</returns>
        </member>
        <member name="M:Cosmo.Diagnostics.LoggerService.List(System.Int32)">
            <summary>
            Genera una lista de los objetos contenidos en una carpeta.
            </summary>
            <param name="status">Identificador de la carpeta que contiene los objetos.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.LoggerService.Item(System.Int32)">
            <summary>
            Permite recuperar los datos de un evento.
            </summary>
            <param name="id">Identificador de la entrada del registro.</param>
            <returns>Una instáncia de <see cref="T:Cosmo.Diagnostics.LogEntry"/>.</returns>
        </member>
        <member name="M:Cosmo.Diagnostics.LoggerService.Delete(System.Int32)">
            <summary>
            Elimina un evento del workspace.
            </summary>
            <param name="id">Identificador de la entrada al registro</param>
        </member>
        <member name="T:Cosmo.Security.SecurityException">
            <summary>
            Excepción de error de sesión.
            </summary>
        </member>
        <member name="M:Cosmo.Security.SecurityException.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.SecurityException"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Security.SecurityException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.SecurityException"/>.
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.Security.SecurityException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.SecurityException"/>.
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Security.Auth.AuthenticationService">
            <summary>
            Implementa una clase para la autenticación y gestión de las cuentas de usuario.
            </summary>
            <remarks>
            Esta clase hace uso de los proveedores de autenticación.
            </remarks>
        </member>
        <member name="F:Cosmo.Security.Auth.AuthenticationService.PROVIDER_DEFAULT">
            <summary>Proveedor de autenticación por defecto (Cosmo Workspace Authentication provider).</summary>
        </member>
        <member name="F:Cosmo.Security.Auth.AuthenticationService.ACCOUNT_SUPER">
            <summary>Login del usuario super</summary>
        </member>
        <member name="F:Cosmo.Security.Auth.AuthenticationService.TAG_USER_LOGIN">
            <summary>TAG para insertar el login del usuario en el texto del mensaje.</summary>
        </member>
        <member name="F:Cosmo.Security.Auth.AuthenticationService.TAG_USER_MAIL">
            <summary>TAG para insertar el correo electrónico del usuario en el texto del mensaje.</summary>
        </member>
        <member name="F:Cosmo.Security.Auth.AuthenticationService.TAG_USER_NAME">
            <summary>TAG para insertar el nombre real del usuario en el texto del mensaje.</summary>
        </member>
        <member name="F:Cosmo.Security.Auth.AuthenticationService.TAG_USER_PASSWORD">
            <summary>TAG para insertar la contraseña del usuario en el texto del mensaje.</summary>
        </member>
        <member name="F:Cosmo.Security.Auth.AuthenticationService.TAG_USER_VERIFYLINK">
            <summary>TAG para insertar el link que da acceso a la verificación de la cuenta de correo.</summary>
        </member>
        <member name="F:Cosmo.Security.Auth.AuthenticationService.TAG_WORKSPACE_MAIL">
            <summary>TAG para insertar el mail de contacto del responsable del workspace en el texto del mensaje.</summary>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.#ctor(Cosmo.Workspace)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.Auth.AuthenticationService"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace"/> que representa el espacio de trabajo actual.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.IsValidIPAddress(System.String)">
            <summary>
            Check if a IP address can access to workspace.
            </summary>
            <param name="ipAddress">IP address to check.</param>
            <returns><c>true</c> if IP can access to workspace or <c>false</c> in all other cases.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.Autenticate(System.String,System.String)">
            <summary>
            Autentica al usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <param name="password">Contraseña.</param>
            <returns>Si ha tenido exito, devuelve </returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.GetUsersList">
            <summary>
            Obtiene una lista de usuarios.
            </summary>
            <returns>Una lista de usuarios.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.GetUsersList(Cosmo.Security.User.UserStatus)">
            <summary>
            Obtiene una lista de usuarios.
            </summary>
            <returns>Una lista de usuarios.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.GetUser(System.String)">
            <summary>
            Obtiene las propiedades de un usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <returns>Una instancia de User con los datos del usuario.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.GetUser(System.Int32)">
            <summary>
            Obtiene las propiedades de un usuario.
            </summary>
            <param name="uid">Identificador único del usuario.</param>
            <returns>Una instancia de User con los datos del usuario.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.GetUserLocation(System.Int32)">
            <summary>
            Gets the user location (city and country name) with a standard format.
            </summary>
            <param name="uid">User unique identifier.</param>
            <returns>A string with formatted city and country information.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.Create(Cosmo.Security.User)">
            <summary>
            Crea una nueva cuenta de usuario.
            </summary>
            <param name="user">Una instancia de User con los datos de la cuenta a crear.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.Create(Cosmo.Security.User,System.Boolean)">
            <summary>
            Crea una nueva cuenta de usuario.
            </summary>
            <param name="user">Una instancia de User con los datos de la cuenta a crear.</param>
            <param name="confirm">Indica si se desea confirmar la cuenta de correo electrónico vía correo electrónico.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.Update(Cosmo.Security.User)">
            <summary>
            Actualiza los datos de una cuenta de usuario.
            </summary>
            <param name="user">Una instancia de User con los datos actualizados de la cuenta.</param>
            <remarks>
            Para actualizar la contraseña debe usar el método SetPassword() ya que éste método no actualiza la contraseña.
            </remarks>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.Delete(System.Int32)">
            <summary>
            Elimina una cuenta de usuario.
            </summary>
            <param name="id">Identificador de la cuenta a eliminar.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.Cancel(System.Int32)">
            <summary>
            Cancela una cuenta de usuario.
            </summary>
            <param name="uid">Identificador de la cuenta a cancelar.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.Verify(System.Int32,System.String)">
            <summary>
            Verifica una cuenta de usuario (pendiente de verificación por correo electrónico).
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="mail">Correo electrónico asociado a la cuenta.</param>
            <returns>Una instancia de User con los datos del usuario verificado.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.Verify(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Verifica una cuenta de usuario (pendiente de verificación por correo electrónico).
            </summary>
            <param name="QueryString">Una instancia de NameValueCollection que puede ser Server.Params.</param>
            <returns>Una instancia de User con los datos del usuario verificado.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.SendData(System.String)">
            <summary>
            Envia los datos de un usuario a su cuenta de correo para el acceso al Workspace
            </summary>
            <param name="address">Dirección de correo a la que se mandarán los datos. Debe coincidir con la dirección de una cuenta de usuario.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.SetPassword(System.Int32,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.SetPassword(System.Int32,System.String,System.String,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="oldPassword">Contraseña actual.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
            <param name="newPasswordVerification">Verificación de la nueva contraseña.</param>
            <remarks>
            Los parámetros newPassword y newPasswordVerification deben coincidir o de lo contrario se lanzará la excepción <see cref="T:Cosmo.Security.SecurityException"/>.
            </remarks>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.FindByCriteria(Cosmo.Security.UserSearchCriteria)">
            <summary>
            Obtiene una lista de usuarios que cumplen los criterios de selección.
            </summary>
            <param name="selector">Criterio de selección de usuarios.</param>
            <returns>Una lista de usuarios que cumnplen con los criterios establecidos.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.Find(System.String,System.String,System.Int32)">
            <summary>
            Busca usuarios del workspace.
            </summary>
            <param name="login">Login o fracción a buscar</param>
            <param name="city">Ciudad o fracción a buscar</param>
            <param name="countryId">Identificador del pais a buscar</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.Find(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Busca usuarios del workspace.
            </summary>
            <param name="login">Login o fracción a buscar</param>
            <param name="city">Ciudad o fracción a buscar</param>
            <param name="countryId">Identificador del pais a buscar</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.ListCountry">
            <summary>
            Devuelve una lista de paises.
            </summary>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.GetLoginUrl">
            <summary>
            Generates the login view Url.
            </summary>
            <returns>A string containing the requested url.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.GetLoginUrl(System.String)">
            <summary>
            Generates the login view Url.
            </summary>
            <param name="redirectToUrl">If the authentication process is successful, the Url to navigate.</param>
            <returns>A string containing the requested url.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.GetVerificationMail(Cosmo.Security.User)">
            <summary>
            Genera el correo de verificación de cuenta de correo.
            </summary>
            <param name="user">Una instancia de <see cref="T:Cosmo.Security.User"/>.</param>
            <returns>Una instancia de <see cref="T:System.Net.Mail.MailMessage"/> que contiene el correo de verificación de cuentas de eMail.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.GetVerificationMail(System.Int32)">
            <summary>
            Genera el correo de verificación de cuenta de correo.
            </summary>
            <param name="uid">Identificador del usuario.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.GetUserDataMail(Cosmo.Security.User)">
            <summary>
            Genera el correo de envío de datos de connexión.
            </summary>
            <param name="user">Una instancia de <see cref="T:Cosmo.Security.User"/>.</param>
            <returns>Una instancia de <see cref="T:System.Net.Mail.MailMessage"/> que contiene los datos de conexión de un usuario.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.GetUserDataMail(System.Int32)">
            <summary>
            Genera el correo de envío de datos de connexión.
            </summary>
            <param name="uid">Identificador del usuario.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.IsAuthenticated(System.Web.SessionState.HttpSessionState)">
            <summary>
            Determina si existe una sesión de usuario iniciada.
            </summary>
            <param name="session">La instancia Session accesible desde cualquier página ASPX</param>
            <returns>Un valor booleano indicando si existe o no sesión de usuario.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.IsAuthenticated(System.Web.SessionState.HttpSessionState,System.String)">
            <summary>
             Determina si existe una sesión de usuario iniciada y esta pertenece a un login concreto.
            </summary>
            <param name="session">La instancia Session accesible desde cualquier página ASPX</param>
            <param name="login">Login para el cual se desea testear si la sesión actual le pertenece</param>
            <returns>Un valor booleano indicando si existe o no sesión de usuario</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.IsAuthenticated(System.Web.HttpContext,System.String,System.String)">
            <summary>
             Determina si existe una sesión de usuario iniciada.
            </summary>
            <param name="context">Contexto de la aplicación (propiedad Contect de la página ASPX)</param>
            <param name="loginScript">Script usado para autenticar a los usuarios.</param>
            <param name="destinationUrl">La URL actual dónde se redirigirá al usuario una vez identificado</param>
            <returns>Un valor booleano indicando si existe o no sesión de usuario</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.IsAuthenticated(System.Web.HttpContext,System.String)">
            <summary>
             Determina si existe una sesión de usuario iniciada.
            </summary>
            <param name="context">Contexto de la aplicación (propiedad Contect de la página ASPX)</param>
            <param name="loginScript">Script usado para autenticar a los usuarios.</param>
            <returns>Un valor booleano indicando si existe o no sesión de usuario</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.IsValidLogin(System.String)">
            <summary>
            Permite verificar si un Login es válido o no. EL login debe tener como mínimo 5 carácteres y 35 como máximo.
            </summary>
            <param name="login">Login a testear.</param>
            <returns>Un valor booleano que indica si es válido o no.</returns>
            <remarks>
            Regular Expression obtenida de:
            http://immike.net/blog/2007/04/06/5-regular-expressions-every-web-programmer-should-know/
            (Usar "[a-zA-Z0-9]" para verificar sólo si admite letras y números)
            </remarks>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.Security.Auth.AuthenticationService.LoadAuthenticationModules">
            <summary>
            Carga el módulo que se usará para renderizar los controles del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Security.Auth.AuthenticationService.SecurityRequired">
            <summary>
            Gets a boolean indicating id the security is enabled for the current workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Security.Auth.AuthenticationService.IsVerificationMailRequired">
            <summary>
            Indica si al crear una cuenta se verifica la cuenta de correo mediante el envio de un correo 
            de verificación.
            </summary>
        </member>
        <member name="P:Cosmo.Security.Auth.AuthenticationService.EncriptionKey">
            <summary>
             Devuelve la clave de encriptación usada para encriptar todo lo referente a seguridad.
            </summary>
        </member>
        <member name="T:Cosmo.Security.Auth.IAuthenticationModule">
            <summary>
            Interface para los proveedores de seguridad de los usuarios del workspace.
            </summary>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.Auth.IAuthenticationModule"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="P:Cosmo.Security.Auth.IAuthenticationModule.Workspace"/> que representa el espacio de trabajo actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que contiene  todas las propiedades para instanciar y configurar el módulo.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.IsValidIPAddress(System.String)">
            <summary>
            Check if a IP address can access to workspace.
            </summary>
            <param name="ipAddress">IP address to check.</param>
            <returns><c>true</c> if IP can access to workspace or <c>false</c> in all other cases.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.GetLoginUrl(System.String)">
            <summary>
            Generates the login view Url.
            </summary>
            <param name="redirectToUrl">If the authentication process is successful, the Url to navigate.</param>
            <returns>A string containing the requested url.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.Autenticate(System.String,System.String)">
            <summary>
            Autentica al usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <param name="password">Contraseña.</param>
            <returns>Si ha tenido exito, devuelve </returns>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.GetUsersList">
            <summary>
            Obtiene una lista de usuarios.
            </summary>
            <returns>Una lista de usuarios.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.GetUsersList(Cosmo.Security.User.UserStatus)">
            <summary>
            Obtiene una lista de usuarios de un determinado estado.
            </summary>
            <param name="status">Estado para el que se desea filtrar.</param>
            <returns>Una lista de usuarios.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.GetUser(System.String)">
            <summary>
            Obtiene las propiedades de un usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <returns>Una instancia de User con los datos del usuario.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.GetUser(System.Int32)">
            <summary>
            Obtiene las propiedades de un usuario.
            </summary>
            <param name="uid">Identificador único del usuario.</param>
            <returns>Una instancia de User con los datos del usuario.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.GetUserLocation(System.Int32)">
            <summary>
            Gets the user location (city and country name) with a standard format.
            </summary>
            <param name="uid">User unique identifier.</param>
            <returns>A string with formatted city and country information.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.Create(Cosmo.Security.User)">
            <summary>
            Crea una nueva cuenta de usuario.
            </summary>
            <param name="user">Una instancia de User con los datos de la cuenta a crear.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.Create(Cosmo.Security.User,System.Boolean)">
            <summary>
            Crea una nueva cuenta de usuario.
            </summary>
            <param name="user">Una instancia de User con los datos de la cuenta a crear.</param>
            <param name="confirm">Indica si se desea confirmar la cuenta de correo electrónico vía correo electrónico.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.Update(Cosmo.Security.User)">
            <summary>
            Actualiza los datos de una cuenta de usuario.
            </summary>
            <param name="user">Una instancia de User con los datos actualizados de la cuenta.</param>
            <remarks>
            Para actualizar la contraseña debe usar el método SetPassword() ya que éste método no actualiza la contraseña.
            </remarks>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.Delete(System.Int32)">
            <summary>
            Elimina una cuenta de usuario.
            </summary>
            <param name="uid">Identificador de la cuenta a eliminar.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.Cancel(System.Int32)">
            <summary>
            Cancela una cuenta de usuario.
            </summary>
            <param name="uid">Identificador de la cuenta a cancelar.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.Verify(System.Int32,System.String)">
            <summary>
            Verifica una cuenta de usuario (pendiente de verificación por correo electrónico).
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="mail">Correo electrónico asociado a la cuenta.</param>
            <returns>Una instancia de User con los datos del usuario verificado.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.Verify(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Verifica una cuenta de usuario (pendiente de verificación por correo electrónico).
            </summary>
            <param name="QueryString">Una instancia de NameValueCollection que puede ser Server.Params.</param>
            <returns>Una instancia de User con los datos del usuario verificado.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.SendData(System.String)">
            <summary>
            Envia los datos de un usuario a su cuenta de correo para el acceso al Workspace
            </summary>
            <param name="address">Dirección de correo a la que se mandarán los datos. Debe coincidir con la dirección de una cuenta de usuario.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.SetPassword(System.Int32,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.SetPassword(System.Int32,System.String,System.String,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="oldPassword">Contraseña actual.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
            <param name="newPasswordVerification">Verificación de la nueva contraseña.</param>
            <remarks>
            Los parámetros newPassword y newPasswordVerification deben coincidir o de lo contrario se lanzará la excepción <see cref="T:Cosmo.Security.SecurityException"/>.
            </remarks>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.CheckPassword(System.Int32,System.String)">
            <summary>
            Verifica una contraseña de usuario.
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <param name="password">Contraseña a verificar.</param>
            <returns>Devuelve <c>true</c> si la contraseña coincide o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.FindByCriteria(Cosmo.Security.UserSearchCriteria)">
            <summary>
            Selecciona un grupo de usuarios
            </summary>
            <param name="selector">Selector que contiene los critérios de búsqueda</param>
            <returns>La lista de usuarios seleccioandos</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.Find(System.String,System.String,System.Int32)">
            <summary>
            Busca usuarios del workspace.
            </summary>
            <param name="login">Login o fracción a buscar</param>
            <param name="city">Ciudad o fracción a buscar</param>
            <param name="countryId">Identificador del pais a buscar</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.Find(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Busca usuarios del workspace.
            </summary>
            <param name="login">Login o fracción a buscar</param>
            <param name="city">Ciudad o fracción a buscar</param>
            <param name="countryId">Identificador del pais a buscar</param>
            <param name="onlyEnabledUsers">Indicates if the methos must show only the enabled users.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Security.Auth.IAuthenticationModule.ListCountry">
            <summary>
            Devuelve una lista de paises
            </summary>
        </member>
        <member name="P:Cosmo.Security.Auth.IAuthenticationModule.Workspace">
            <summary>
            Devuelve el workspace para el que se está autenticando.
            </summary>
        </member>
        <member name="P:Cosmo.Security.Auth.IAuthenticationModule.ID">
            <summary>
            Devuelve el nombre (ID) del módulo de autenticación configurado.
            </summary>
        </member>
        <member name="P:Cosmo.Security.Auth.IAuthenticationModule.SecurityRequired">
            <summary>
            Gets a boolean indicating id the security is enabled for the current workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Security.Auth.IAuthenticationModule.IsVerificationMailRequired">
            <summary>
            Indica si al crear una cuenta se verifica la cuenta de correo mediante el envio de un correo 
            de verificación.
            </summary>
        </member>
        <member name="P:Cosmo.Security.Auth.IAuthenticationModule.EncriptionKey">
            <summary>
             Devuelve la clave de encriptación usada para encriptar todo lo referente a seguridad.
            </summary>
        </member>
        <member name="T:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl">
            <summary>
            Proveedor de autenticación nativo de Cosmo.
            </summary>
            <remarks>
            Este proveedor usa para la autenticación de usuario la base de datos del workspace (tabla USERS).
            </remarks>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace"/> que representa el espacio de trabajo actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que permite obtener los parámetros de configuración.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.GetUsersList(Cosmo.Security.User.UserStatus)">
            <summary>
            Devuelve una lista de todos los usuarios
            </summary>
            <param name="status">Filtra por el estado de la cuenta</param>
            <returns>Una lista de objetos WSUser</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.GetUsersList">
            <summary>
            Devuelve una lista de todos los usuarios
            </summary>
            <returns>Una lista de objetos WSUser</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.GetUser(System.String)">
            <summary>
            Obtiene los datos de una cuenta del workspace.
            </summary>
            <param name="login">Login de la cuenta de usuario.</param>
            <returns>Una instáncia MWUser.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.GetUser(System.Int32)">
            <summary>
            Obtiene los datos de una cuenta del workspace.
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <returns>Una instáncia MWUser.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.GetUserLocation(System.Int32)">
            <summary>
            Gets the user location (city and country name) with a standard format.
            </summary>
            <param name="uid">User unique identifier.</param>
            <returns>A string with formatted city and country information.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.Create(Cosmo.Security.User,System.Boolean)">
            <summary>
            Crea una nueva cuenta de usuario del workspace
            </summary>
            <param name="user">Instáncia de WSUser que contiene los datos de la nueva cuenta</param>
            <param name="confirm">Indica que al agregar el usuario se le mandará un correo electrónico para la confirmación de su cuenta de correo y mientras no se confirme, la cuenta estará en estado pendiente de verificación.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.Create(Cosmo.Security.User)">
            <summary>
            Crea una nueva cuenta de usuario del workspace
            </summary>
            <param name="user">Instáncia de WSUser que contiene los datos de la nueva cuenta</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.Update(Cosmo.Security.User)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="user">Instáncia de MWUser que contiene los datos actualizados de la cuenta.</param>
            <remarks>
            Para actualizar la contraseña debe usar el método SetPassword() ya que éste método no
            actualiza la contraseña.
            </remarks>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.Delete(System.Int32)">
            <summary>
            Elimina una cuenta de usuario del workspace.
            </summary>
            <param name="id">Identificador de la cuenta a eliminar</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.Cancel(System.Int32)">
            <summary>
            Cancela una cuenta de usuario.
            </summary>
            <param name="uid">Identificador de la cuenta a cancelar.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.Verify(System.Int32,System.String)">
            <summary>
            Verifica una cuenta de usuario (pasa del estado 'No verificada' a 'Activa'). Este método permite implementar
            un sistema de generación de cuentas por parte de los usuarios (registro de usuarios).
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <param name="mail">Cuenta de correo del usuario</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.Verify(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Verifica una cuenta de usuario (pasa del estado 'No verificada' a 'Activa'). Este método permite implementar
            un sistema de generación de cuentas por parte de los usuarios (registro de usuarios).
            </summary>
            <param name="QueryString">Colección de parámetros del enlace de verificación mandado por correo electrónico al usuario (Request.QueryString).</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.SendData(System.String)">
            <summary>
            Envia los datos de un usuario a su cuenta de correo para el acceso al Workspace
            </summary>
            <param name="address">Dirección de correo a la que se mandarán los datos. Debe coincidir con la dirección de una cuenta de usuario.</param>
            <returns>La instáncia de MWUser con los datos del usuario que realiza l apetición.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.Autenticate(System.String,System.String)">
            <summary>
            Permite verificar las credenciales de acceso a una cuenta de usuario (login).
            </summary>
            <param name="login">Login del usuario.</param>
            <param name="password">Contraseña del usuario.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.SetPassword(System.Int32,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.SetPassword(System.Int32,System.String,System.String,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="oldPassword">Contraseña actual.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
            <param name="newPasswordVerification">Verificación de la nueva contraseña.</param>
            <remarks>
            Los parámetros newPassword y newPasswordVerification deben coincidir o de lo contrario se lanzará la excepción <see cref="T:Cosmo.Security.SecurityException"/>.
            </remarks>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.CheckPassword(System.Int32,System.String)">
            <summary>
            Verifica una contraseña de usuario.
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <param name="password">Contraseña a verificar.</param>
            <returns>Devuelve <c>true</c> si la contraseña coincide o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.FindByCriteria(Cosmo.Security.UserSearchCriteria)">
            <summary>
            Selecciona un grupo de usuarios
            </summary>
            <param name="selector">Selector que contiene los critérios de búsqueda</param>
            <returns>La lista de usuarios seleccioandos</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.Find(System.String,System.String,System.Int32)">
            <summary>
            Busca usuarios del workspace.
            </summary>
            <param name="login">Login o fracción a buscar</param>
            <param name="city">Ciudad o fracción a buscar</param>
            <param name="countryId">Identificador del pais a buscar</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.Find(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Busca usuarios del workspace.
            </summary>
            <param name="login">Login o fracción a buscar</param>
            <param name="city">Ciudad o fracción a buscar</param>
            <param name="countryId">Identificador del pais a buscar</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.LdapAuthenticationImpl.ListCountry">
            <summary>
            Devuelve una lista de paises
            </summary>
        </member>
        <member name="T:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl">
            <summary>
            Proveedor de autenticación nativo de Cosmo.
            </summary>
            <remarks>
            Este proveedor usa para la autenticación de usuario la base de datos del workspace (tabla USERS).
            </remarks>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.#ctor(Cosmo.Workspace,Cosmo.Utils.Plugin)">
            <summary>
            Devuelve una instancia de Users.
            </summary>
            <param name="workspace">Una instancia del workspace actual.</param>
            <param name="plugin">Una instancia de <see cref="T:Cosmo.Utils.Plugin"/> que contiene  todas las propiedades para instanciar y configurar el módulo.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.GetUsersList(Cosmo.Security.User.UserStatus)">
            <summary>
            Devuelve una lista de todos los usuarios.
            </summary>
            <param name="status">Filtra por el estado de la cuenta.</param>
            <returns>Una lista de objetos <see cref="T:Cosmo.Security.User"/>.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.GetUsersList">
            <summary>
            Devuelve una lista de todos los usuarios.
            </summary>
            <returns>Una lista de objetos <see cref="T:Cosmo.Security.User"/>.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.GetUser(System.String)">
            <summary>
            Obtiene los datos de una cuenta del workspace.
            </summary>
            <param name="login">Login de la cuenta de usuario.</param>
            <returns>Una instáncia <see cref="T:Cosmo.Security.User"/>.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.GetUser(System.Int32)">
            <summary>
            Obtiene los datos de una cuenta del workspace.
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <returns>Una instáncia <see cref="T:Cosmo.Security.User"/>.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.Create(Cosmo.Security.User,System.Boolean)">
            <summary>
            Crea una nueva cuenta de usuario del workspace
            </summary>
            <param name="user">Instáncia de <see cref="T:Cosmo.Security.User"/> que contiene los datos de la nueva cuenta</param>
            <param name="confirm">Indica que al agregar el usuario se le mandará un correo electrónico para la confirmación de su cuenta de correo y mientras no se confirme, la cuenta estará en estado pendiente de verificación.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.Create(Cosmo.Security.User)">
            <summary>
            Crea una nueva cuenta de usuario del workspace.
            </summary>
            <param name="user">Instáncia de <see cref="T:Cosmo.Security.User"/> que contiene los datos de la nueva cuenta.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.Update(Cosmo.Security.User)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="user">Instáncia de <see cref="T:Cosmo.Security.User"/> que contiene los datos actualizados de la cuenta.</param>
            <remarks>
            Para actualizar la contraseña debe usar el método <c>SetPassword()</c> ya que éste método no 
            actualiza la contraseña.
            </remarks>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.Delete(System.Int32)">
            <summary>
            Elimina una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta a eliminar</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.Cancel(System.Int32)">
            <summary>
            Cancela una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta a cancelar</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.Verify(System.Int32,System.String)">
            <summary>
            Verifica una cuenta de usuario (pasa del estado 'No verificada' a 'Activa'). Este método permite implementar
            un sistema de generación de cuentas por parte de los usuarios (registro de usuarios).
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <param name="mail">Cuenta de correo del usuario</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.Verify(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Verifica una cuenta de usuario (pasa del estado 'No verificada' a 'Activa'). Este método permite implementar
            un sistema de generación de cuentas por parte de los usuarios (registro de usuarios).
            </summary>
            <param name="QueryString">Colección de parámetros del enlace de verificación mandado por correo electrónico al usuario (Request.QueryString).</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.SendData(System.String)">
            <summary>
            Envia los datos de un usuario a su cuenta de correo para el acceso al Workspace
            </summary>
            <param name="address">Dirección de correo a la que se mandarán los datos. Debe coincidir con la dirección de una cuenta de usuario.</param>
            <returns>La instáncia de <see cref="T:Cosmo.Security.User"/> con los datos del usuario que realiza la petición.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.Autenticate(System.String,System.String)">
            <summary>
            Permite verificar las credenciales de acceso a una cuenta de usuario (login).
            </summary>
            <param name="login">Login del usuario.</param>
            <param name="password">Contraseña del usuario.</param>
            <returns>
            Una instancia de <see cref="T:Cosmo.Security.User"/> que representa el usuario autenticado.
            </returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.SetPassword(System.Int32,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.SetPassword(System.Int32,System.String,System.String,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="oldPassword">Contraseña actual.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
            <param name="newPasswordVerification">Verificación de la nueva contraseña.</param>
            <remarks>
            Los parámetros newPassword y newPasswordVerification deben coincidir o de lo contrario se lanzará la excepción <see cref="T:Cosmo.Security.SecurityException"/>.
            </remarks>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.CheckPassword(System.Int32,System.String)">
            <summary>
            Verifica una contraseña de usuario.
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <param name="password">Contraseña a verificar.</param>
            <returns>Devuelve <c>true</c> si la contraseña coincide o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.FindByCriteria(Cosmo.Security.UserSearchCriteria)">
            <summary>
            Selecciona un grupo de usuarios.
            </summary>
            <param name="selector">Selector que contiene los critérios de búsqueda.</param>
            <returns>Una lista de instancias de <see cref="T:Cosmo.Security.User"/>.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.Find(System.String,System.String,System.Int32)">
            <summary>
            Busca usuarios del workspace.
            </summary>
            <param name="login">Login o fracción a buscar</param>
            <param name="city">Ciudad o fracción a buscar</param>
            <param name="countryId">Identificador del pais a buscar</param>
            <returns>Una lista de instancias de <see cref="T:Cosmo.Security.User"/>.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.Find(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Busca usuarios del workspace.
            </summary>
            <param name="login">Login o fracción a buscar</param>
            <param name="city">Ciudad o fracción a buscar</param>
            <param name="countryId">Identificador del pais a buscar</param>
            <param name="onlyEnabledUsers"></param>
            <returns>Una lista de instancias de <see cref="T:Cosmo.Security.User"/>.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.ListCountry">
            <summary>
            Devuelve una lista de paises.
            </summary>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.GetUserLocation(System.Int32)">
            <summary>
            Gets the user location (city and country name) with a standard format.
            </summary>
            <param name="uid">User unique identifier.</param>
            <returns>A string with formatted city and country information.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.ConvertUidToLogin(System.Int32)">
            <summary>
            Obtiene el login asociado a un UID.
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <returns>Una cadena que representa el login del usuario.</returns>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.ReadUserFields(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Devuelve una instancia de MWUser con los datos recuperados de un objeto SqlDataReader que apunte a un registro de la tabla USERS
            </summary>
            <param name="reader">Objeto SqlDataReader que apunte a un registro válido</param>
            <returns>Una instancia de WSUser</returns>
            <remarks>
            Para usar este método la senténcia SQL debe contener los campos indicados en la constante USER_FIELDS
            </remarks>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.ReadRole(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Lee los datos de un rol de usuario de la base de datos.
            </summary>
            <param name="reader">Objeto SqlDataReader que apunte a un registro válido</param>
            <returns>Una instancia de <see cref="T:Cosmo.Security.Role"/> que representa el rol leido.</returns>
            <remarks>
            Para usar este método la senténcia SQL debe contener los campos indicados en la constante USER_FIELDS
            </remarks>
        </member>
        <member name="M:Cosmo.Security.Auth.Impl.SqlServerAuthenticationImpl.SelectorSQL(Cosmo.Security.UserSearchCriteria)">
            <summary>
            Genera la clausula WHERE correspondiente a un filtro para seleccionar usuarios
            </summary>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmo.Security.UserNotVerifiedException">
            <summary>
            Excepción que se lanza cuando la cuenta de usuario no está verificada.
            </summary>
        </member>
        <member name="M:Cosmo.Security.UserNotVerifiedException.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.UserNotVerifiedException"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Security.UserNotVerifiedException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.UserNotVerifiedException"/>.
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.Security.UserNotVerifiedException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.UserNotVerifiedException"/>.
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Security.UserDisabledException">
            <summary>
            Excepción que se lanza cuando la cuenta de usuario está inhabilitada.
            </summary>
        </member>
        <member name="M:Cosmo.Security.UserDisabledException.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.UserDisabledException"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Security.UserDisabledException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.UserDisabledException"/>.
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.Security.UserDisabledException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.UserDisabledException"/>.
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Communications.PrivateMessages.PrivateMessageDAO">
            <summary>
            Implementa una clase de servicio para la gestión de mensajes inter-usuarios
            </summary>
        </member>
        <member name="F:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.PARAM_MESSAGEID">
            <summary>Identificador del parámetro QueryString para el identificador de mensaje.</summary>
        </member>
        <member name="F:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.PARAM_OWNERID">
            <summary>Identificador del parámetro QueryString para el identificador de thread.</summary>
        </member>
        <member name="F:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.PARAM_FROM">
            <summary>Identificador del parámetro QueryString para el identificador del usuario remitente.</summary>
        </member>
        <member name="F:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.PARAM_TO">
            <summary>Identificador del parámetro QueryString para el identificador del usuario destinatario.</summary>
        </member>
        <member name="F:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.PARAM_SUBJECT">
            <summary>Identificador del parámetro QueryString para el identificador del asunto.</summary>
        </member>
        <member name="F:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.PARAM_BODY">
            <summary>Identificador del parámetro QueryString para el identificador del cuerpo del mensaje.</summary>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.#ctor(Cosmo.Workspace)">
            <summary>
            Devuelve una instancia de MWNetUserMessages
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace"/> que representa el espacio de trabajo actual.</param>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.SendMessage(Cosmo.Communications.PrivateMessages.PrivateMessage)">
            <summary>
            Envia un mensaje interno entre dos usuarios
            </summary>
            <param name="message">Una instancia que contiene todos los datos del mensaje</param>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.GetMessage(System.Int32)">
            <summary>
            Recupera un mensaje
            </summary>
            <param name="messageId">Identificador del mensaje en el servidor</param>
            <returns>Una instancia que contiene todos los datos del mensaje</returns>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.DeleteMessage(System.Int32)">
            <summary>
            Elimina un mensaje
            </summary>
            <param name="messageId">Identificador del mensaje en el servidor</param>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.GetMessagesByRecipient(System.Int32,System.Boolean)">
            <summary>
            Recupera mensajes de un usuario
            </summary>
            <param name="recipientId">Identificador del usuario destinatario (recipient).</param>
            <param name="onlyUnreaded">Obtener sólo los mensajes no leídos.</param>
            <returns>Una lista de mensajes recibidos</returns>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.GetThread(System.Int32,System.Int32)">
            <summary>
            Recupera los mensajes entre dos usuarios (thread).
            </summary>
            <param name="ownerUserId">Identificador del primer usuario.</param>
            <param name="remoteUserId">Identificador del segundo usuario.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.GetThreads(System.Int32)">
            <summary>
            Devuelve todos los threads de un usuario (al estilo Facebook).
            </summary>
            <param name="userId">Identificador del usuario para el que se desean obtener todos los threads.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.GetThreadMessages(System.Int32,System.Int32)">
            <summary>
            Recupera un mensaje
            </summary>
            <param name="ownerId">Identificador del propietario del hilo de mensajes.</param>
            <param name="userId">Identificador del usuario destinatario.</param>
            <returns>Una lista de instancias de <see cref="T:Cosmo.Communications.PrivateMessages.PrivateMessage"/>.</returns>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.Received(System.Int32)">
            <summary>
            Recupera mensajes de un usuario
            </summary>
            <param name="uid">Identificador del usuario (destinatario)</param>
            <returns>Una lista de mensajes recibidos</returns>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.ReceivedThreads(System.Int32)">
            <summary>
            Recupera mensajes de un usuario
            </summary>
            <param name="uid">Identificador del usuario (destinatario)</param>
            <returns>Una lista de mensajes recibidos</returns>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.Sended(System.Int32)">
            <summary>
            Recupera mensajes enviados por un usuario
            </summary>
            <param name="uid">Identificador del usuario (remitente)</param>
            <returns>Una lista de todos los mensajes enviados</returns>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.Count(System.Int32)">
            <summary>
            Devuelve el número de mensajes de un usuario
            </summary>
            <param name="uid">Identificador único del usuario</param>
            <returns>El número de mensajes en la bandeja de entrada</returns>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.CountByReceiver(System.Int32,Cosmo.Communications.PrivateMessages.PrivateMessage.UserMessageStatus)">
            <summary>
            Devuelve el número de mensajes de un usuario.
            </summary>
            <param name="uid">Identificador único del usuario destinatario.</param>
            <param name="status">Filtro para averiguar el número de mensajes de un determinado estado</param>
            <returns>El número de mensajes en la bandeja de entrada</returns>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.Count(System.Int32,Cosmo.Communications.PrivateMessages.PrivateMessage.UserMessageStatus)">
            <summary>
            Devuelve el número de mensajes de un usuario
            </summary>
            <param name="uid">Identificador único del usuario</param>
            <param name="status">Filtro para averiguar el número de mensajes de un determinado estado</param>
            <returns>El número de mensajes en la bandeja de entrada</returns>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.ReadPrivateMessage(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Recupera un mensaje de la base de datos.
            </summary>
            <param name="reader">Una instancia de <see cref="T:System.Data.SqlClient.SqlDataReader"/> posicionada en la fila que contiene el mensaje a recuperar.</param>
            <returns>Una instancia de <see cref="T:Cosmo.Communications.PrivateMessages.PrivateMessage"/> que contiene los datos del mensaje solicitado.</returns>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessageDAO.SendNotify(Cosmo.Communications.PrivateMessages.PrivateMessage)">
            <summary>
            Envia una notificación de mensaje privado al receptor de un mensaje privado.
            </summary>
            <param name="message">Una instancia de <see cref="T:Cosmo.Communications.PrivateMessages.PrivateMessage"/> que representa el mensaje privado enviado.</param>
        </member>
        <member name="T:Cosmo.Diagnostics.LogEntry">
            <summary>
            Implementa una entrada del registro de eventos
            </summary>
        </member>
        <member name="F:Cosmo.Diagnostics.LogEntry.LOGIN_SYSTEM">
            <summary>Login correspondiente a una acción de sistema (no achacable a ningún usuario).</summary>
        </member>
        <member name="M:Cosmo.Diagnostics.LogEntry.#ctor">
            <summary>
            Devuelve una instancia de LogEntry
            </summary>
        </member>
        <member name="M:Cosmo.Diagnostics.LogEntry.#ctor(System.String,System.String,Cosmo.Diagnostics.LogEntry.LogEntryType)">
            <summary>
            Devuelve una instancia de LogEntry
            </summary>
            <param name="context">Contexto</param>
            <param name="message">Mensaje</param>
            <param name="type">Tipo de registro</param>
        </member>
        <member name="M:Cosmo.Diagnostics.LogEntry.#ctor(System.String,System.String,System.String,Cosmo.Diagnostics.LogEntry.LogEntryType)">
            <summary>
            Devuelve una instancia de LogEntry
            </summary>
            <param name="application">Nombre de la aplicación</param>
            <param name="context">Contexto</param>
            <param name="message">Mensaje</param>
            <param name="type">Tipo de registro</param>
        </member>
        <member name="M:Cosmo.Diagnostics.LogEntry.#ctor(System.String,System.String,System.String,System.String,Cosmo.Diagnostics.LogEntry.LogEntryType)">
            <summary>
            Devuelve una instancia de LogEntry
            </summary>
            <param name="application">Nombre de la aplicación</param>
            <param name="context">Contexto</param>
            <param name="message">Mensaje</param>
            <param name="login">Login del usuario</param>
            <param name="type">Tipo de registro</param>
        </member>
        <member name="M:Cosmo.Diagnostics.LogEntry.#ctor(System.String,System.String,System.Int32,System.String,Cosmo.Diagnostics.LogEntry.LogEntryType)">
            <summary>
            Devuelve una instancia de LogEntry
            </summary>
            <param name="application">Nombre de la aplicación</param>
            <param name="context">Contexto</param>
            <param name="code">Código del error</param>
            <param name="message">Mensaje</param>
            <param name="type">Tipo de registro</param>
        </member>
        <member name="M:Cosmo.Diagnostics.LogEntry.#ctor(System.String,System.String,System.Int32,System.String,System.String,Cosmo.Diagnostics.LogEntry.LogEntryType)">
            <summary>
            Devuelve una instancia de LogEntry
            </summary>
            <param name="application">Nombre de la aplicación</param>
            <param name="context">Contexto</param>
            <param name="code">Código del error</param>
            <param name="message">Mensaje</param>
            <param name="login">Login del usuario</param>
            <param name="type">Tipo de registro</param>
        </member>
        <member name="M:Cosmo.Diagnostics.LogEntry.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.Diagnostics.LogEntry.ID">
            <summary>
            Identificador único del registro.
            </summary>
        </member>
        <member name="P:Cosmo.Diagnostics.LogEntry.Date">
            <summary>
            Decha y hora de la entrada al registro de eventos.
            </summary>
        </member>
        <member name="P:Cosmo.Diagnostics.LogEntry.UserLogin">
            <summary>
            Login del usuario identificado
            </summary>
        </member>
        <member name="P:Cosmo.Diagnostics.LogEntry.ApplicationName">
            <summary>
            Nombre de la aplicación o libreria que generó la entrada al registro
            </summary>
            <remarks>
            Usualmente se usa para este campo:
               Assembly.GetEntryAssembly().FullName
               Assembly.GetExecutingAssembly().FullName
            </remarks>
        </member>
        <member name="P:Cosmo.Diagnostics.LogEntry.Context">
            <summary>
            Contexto dónde se provocó el registro
            </summary>
            <remarks>
            Para los Assemblies se puede usar la notación Clase.Método() y para las aplicaciones
            web el nombre del script ASPX (por ejemplo).
            </remarks>
        </member>
        <member name="P:Cosmo.Diagnostics.LogEntry.WorkspaceName">
            <summary>
            Nombre del workspace dónde se estaba ejecutando el código.
            </summary>
        </member>
        <member name="P:Cosmo.Diagnostics.LogEntry.Code">
            <summary>
            Devuelve o establece el código del error o evento informativo.
            </summary>
        </member>
        <member name="P:Cosmo.Diagnostics.LogEntry.Message">
            <summary>
            Devuelve o establece el mensaje descriptivo.
            </summary>
        </member>
        <member name="P:Cosmo.Diagnostics.LogEntry.Type">
            <summary>
            Devuelve o establece el tipo de registro.
            </summary>
        </member>
        <member name="T:Cosmo.Diagnostics.LogEntry.LogEntryType">
            <summary>
            Tipos de registro
            </summary>
        </member>
        <member name="F:Cosmo.Diagnostics.LogEntry.LogEntryType.EV_INFORMATION">
            <summary>Registro de tipo informativo</summary>
        </member>
        <member name="F:Cosmo.Diagnostics.LogEntry.LogEntryType.EV_WARNING">
            <summary>Registro de tipo advertencia</summary>
        </member>
        <member name="F:Cosmo.Diagnostics.LogEntry.LogEntryType.EV_ERROR">
            <summary>Registro de tipo error de aplicación</summary>
        </member>
        <member name="F:Cosmo.Diagnostics.LogEntry.LogEntryType.EV_SECURITY">
            <summary>Registro de advertencia de seguridad</summary>
        </member>
        <member name="T:Cosmo.Security.InvalidSessionException">
            <summary>
            Excepción de error de sesión
            </summary>
        </member>
        <member name="M:Cosmo.Security.InvalidSessionException.#ctor">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
        </member>
        <member name="M:Cosmo.Security.InvalidSessionException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.Security.InvalidSessionException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Communications.PrivateMessages.PrivateMessage">
            <summary>
            Implementa un mensaje de usuario a usuario
            </summary>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessage.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Communications.PrivateMessages.PrivateMessage"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Communications.PrivateMessages.PrivateMessage.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessage.ID">
            <summary>
            Identificador único del mensaje en el servidor
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessage.OwnerId">
            <summary>
            Devuelve o establece el propietario del mensaje.
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessage.FromUserID">
            <summary>
            Identificador del autor del mensaje
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessage.ToUserID">
            <summary>
            Identificador del receptor del mensaje
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessage.Subject">
            <summary>
            Título del mensaje (asunto)
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessage.Body">
            <summary>
            Cuerpo del mensaje
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessage.FromIP">
            <summary>
            IP del equipo que envió el mensaje
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessage.Sended">
            <summary>
            Fecha en la que realizó en envio del mensaje
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessage.Status">
            <summary>
            Fecha en la que realizó en envio del mensaje
            </summary>
        </member>
        <member name="P:Cosmo.Communications.PrivateMessages.PrivateMessage.Responses">
            <summary>
            Devuelve el número de respuestas al mensaje (incluyendo el mensaje inicial).
            </summary>
        </member>
        <member name="T:Cosmo.Communications.PrivateMessages.PrivateMessage.UserMessageStatus">
            <summary>
            Estados posibles de un mensaje
            </summary>
        </member>
        <member name="F:Cosmo.Communications.PrivateMessages.PrivateMessage.UserMessageStatus.Unreaded">
            <summary>No leído</summary>
        </member>
        <member name="F:Cosmo.Communications.PrivateMessages.PrivateMessage.UserMessageStatus.Readed">
            <summary>Leído</summary>
        </member>
        <member name="T:Cosmo.Security.User">
            <summary>
            Implementa la cuenta de un usuario del workspace
            </summary>
        </member>
        <member name="M:Cosmo.Security.User.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.User"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Security.User.GetDisplayName">
            <summary>
            Devuelve un nombre para mostrar del usuario.
            </summary>
        </member>
        <member name="M:Cosmo.Security.User.GetAvatarImage">
            <summary>
            Devuelve la imagen correspondiente al avatar lista para ser incluyda en código XHTML.
            P. ej. "images/usr_12344.png"
            </summary>
        </member>
        <member name="M:Cosmo.Security.User.IsInRole(System.String)">
            <summary>
            Indica si el usuario posee un determinado rol.
            </summary>
            <param name="roleName">Nombre del rol.</param>
            <returns><c>true</c> si el usuario posee el rol o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Security.User.ToXml(System.IO.Stream)">
            <summary>
            Devuelve información pública del usuario en formato XML
            </summary>
            <param name="stream">Una instancia de Stream dónde se escribirá el código XML</param>
            <remarks>
            El formato del archivo XML generado es el siguiente:
            &lt;code&gt;
            &lt;contentserver&gt;
                &lt;userinfo id          = "_ContactID_"
                          login       = "_Login_"
                          name        = "_Name_"
                          city        = "_City_"
                          country     = "_CountryName_"
                          description = "_Description_"
                          created     = "_DateCreated_" /&gt;
            &lt;/locations&gt;
            &lt;/code&gt;
            </remarks>
        </member>
        <member name="M:Cosmo.Security.User.IsValid">
            <summary>
            Permite validar los datos de la instancia.
            </summary>
            <returns><c>true</c> si los datos que contiene la instancia son válidos para describir el usuario o <c>false</c> en cualquir otro caso.</returns>
        </member>
        <member name="M:Cosmo.Security.User.Initialize">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.ID">
            <summary>
            Identificador de la cuenta.
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.Login">
            <summary>
            Login
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.Password">
            <summary>
            Contraseña
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.Mail">
            <summary>
            Cuenta de correo electrónico principal
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.Name">
            <summary>
            Nombre (y apellidos) del usuario
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.Description">
            <summary>
            Descripción (texto libre)
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.City">
            <summary>
            Ciudad
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.CountryID">
            <summary>
            Identificador del pais al que pertenece
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.MailAlternative">
            <summary>
            Cuenta de correo electrónico alternativa
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.Phone">
            <summary>
            Teléfono de contacto
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.CanReceiveInternalMessages">
            <summary>
            Indica si desea recibir notificaciones procedentes del Workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.CanReceiveExternalMessages">
            <summary>
            Indica si desea recibir notificaciones procedentes de terceras partes o aplicaciones.
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.CanReceivePrivateMessagesNotify">
            <summary>
            Indica si desea recibir notificaciones procedentes de terceras partes o aplicaciones.
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.DisablePrivateMessages">
            <summary>
            Indica si el usuario tiene desactivada la opción de mensajes privados.
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.Status">
            <summary>
            Estado de la cuenta.
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.Relations">
            <summary>
            Lista de contactos relacionados con el usuario dentro del mismo workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.Created">
            <summary>
            Indica la fecha de creación de la cuenta de usuario.
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.LastLogon">
            <summary>
            Indica la última vez que la cuenta se validó.
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.LogonCount">
            <summary>
            Idica el número de veces que el usuario se ha validado
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.Owner">
            <summary>
            Propietario del objeto
            </summary>
        </member>
        <member name="P:Cosmo.Security.User.Roles">
            <summary>
            Devuelve la lista de roles del usuario.
            </summary>
        </member>
        <member name="T:Cosmo.Security.User.UserStatus">
            <summary>
            Estados de usuario
            </summary>
        </member>
        <member name="F:Cosmo.Security.User.UserStatus.AllStates">
            <summary>Todos los usuarios (no usar este valor en código)</summary>
        </member>
        <member name="F:Cosmo.Security.User.UserStatus.Disabled">
            <summary>Inhabilitado</summary>
        </member>
        <member name="F:Cosmo.Security.User.UserStatus.NotVerified">
            <summary>Pendiente de verificación de la cuenta de correo principal</summary>
        </member>
        <member name="F:Cosmo.Security.User.UserStatus.Enabled">
            <summary>Activa</summary>
        </member>
        <member name="F:Cosmo.Security.User.UserStatus.SecurityBloqued">
            <summary>En cuarentena (sirve para marcar las cuentas pendientes de revisión por causas de seguridad)</summary>
        </member>
        <member name="T:Cosmo.Services.Country">
            <summary>
            Implementa una clase que define un pais assignable a un usuario.
            </summary>
        </member>
        <member name="M:Cosmo.Services.Country.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Services.Country"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Services.Country.#ctor(System.Int32,System.String,System.Boolean)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Services.Country"/>.
            </summary>
            <param name="id">Identificador único del pais</param>
            <param name="name">Nombre del pais</param>
            <param name="defaultSelected">Indica si será el pais seleccionado por defecto en los listados</param>
        </member>
        <member name="M:Cosmo.Services.Country.Initialize">
            <summary>
            Inicialización de la clase.
            </summary>
        </member>
        <member name="P:Cosmo.Services.Country.ID">
            <summary>
            Identificador único del pais
            </summary>
        </member>
        <member name="P:Cosmo.Services.Country.Name">
            <summary>
            Nombre del pais
            </summary>
        </member>
        <member name="P:Cosmo.Services.Country.Default">
            <summary>
            Indica si será el pais seleccionado por defecto en los listados
            </summary>
        </member>
        <member name="T:Cosmo.Security.UserRelation">
            <summary>
            Implementa una relación entre dos usuarios.
            </summary>
        </member>
        <member name="M:Cosmo.Security.UserRelation.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.UserRelation"/>.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserRelation.FromUserID">
            <summary>
            Identificador del usuario que solicita relación con el destinatario.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserRelation.ToUserID">
            <summary>
            Identificador del usuario que recibe la solicitud de relación.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserRelation.Status">
            <summary>
            Estado de la petición de relación entre usuarios.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserRelation.Created">
            <summary>
            Fecha de la solicitud de relación.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserRelation.Updated">
            <summary>
            Fecha de la respuesta por parte del destinatario.
            </summary>
        </member>
        <member name="T:Cosmo.Security.UserRelation.UserRelationStatus">
            <summary>
            Estados de las relaciones entre usuaruios
            </summary>
        </member>
        <member name="F:Cosmo.Security.UserRelation.UserRelationStatus.Unverified">
            <summary>El usuario orígen ha solicitado amistad con el destinatario sin obtener aun respuesta</summary>
        </member>
        <member name="F:Cosmo.Security.UserRelation.UserRelationStatus.Verified">
            <summary>La relación ha sido aceptada por el destinatario</summary>
        </member>
        <member name="F:Cosmo.Security.UserRelation.UserRelationStatus.Rejected">
            <summary>La petición de relación ha sido rechazada por el destinatario</summary>
        </member>
        <member name="T:Cosmo.Security.UserSearchCriteria">
            <summary>
            Implementa una clase para especificar el filtro de búsqueda de usuarios.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserSearchCriteria.City">
            <summary>
            Ciudad.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserSearchCriteria.CountryId">
            <summary>
            Identificador del pais.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserSearchCriteria.FromLastLogon">
            <summary>
            Desde el último acceso.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserSearchCriteria.ToLastLogon">
            <summary>
            Hasta el último acceso.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserSearchCriteria.ExternalMessages">
            <summary>
            Permite el envio de comunicados externos al workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserSearchCriteria.InternalMessages">
            <summary>
            Permite el envio de comunicados internos del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserSearchCriteria.MailPart">
            <summary>
            Servidor de correo.
            </summary>
        </member>
        <member name="T:Cosmo.Security.UserSession">
            <summary>
            Implementa una sesión de usuario.
            </summary>
        </member>
        <member name="M:Cosmo.Security.UserSession.#ctor(Cosmo.Workspace)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Security.UserSession"/>. 
            </summary>
            <param name="workspace">Una instancia de <see cref="P:Cosmo.Security.UserSession.Workspace"/> que representa el espacio de trabajo actual.</param>
        </member>
        <member name="M:Cosmo.Security.UserSession.CheckAuthorization(System.String)">
            <summary>
            Comprueba la autorización para la sesión autenticada actual.
            </summary>
            <remarks>
            De no existir sesión autenticada, devolverá <em>false</em>.
            If user have <c>admin</c> role this check returns <c>true</c> (authorized).
            </remarks>
        </member>
        <member name="M:Cosmo.Security.UserSession.CheckAuthorization(System.String[])">
            <summary>
            Comprueba la autorización para la sesión autenticada actual.
            </summary>
            <remarks>
            De no existir sesión autenticada, devolverá <em>false</em>.
            </remarks>
        </member>
        <member name="M:Cosmo.Security.UserSession.GenerateSession(System.String,System.String)">
            <summary>
            Genera una nueva sesión de usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <param name="password">Contraseña del usuario.</param>
            <returns>Una instancia de <see cref="P:Cosmo.Security.UserSession.User"/> que representa el usuario autenticado actualmente.</returns>
        </member>
        <member name="M:Cosmo.Security.UserSession.GenerateSession(Cosmo.Security.User)">
            <summary>
            Genera una nueva sesión de usuario.
            </summary>
            <param name="user">Una instancia de <see cref="P:Cosmo.Security.UserSession.User"/> que representa el usuario para el que se dese agenerar la sesión.</param>
            <returns>Una instancia de <see cref="P:Cosmo.Security.UserSession.User"/> que representa el usuario autenticado actualmente.</returns>
        </member>
        <member name="M:Cosmo.Security.UserSession.Destroy">
            <summary>
            Destruye la sesión de usuario.
            </summary>
        </member>
        <member name="M:Cosmo.Security.UserSession.GenerateSessionTicket(System.String,System.String)">
            <summary>
            Autentica un usuario y genera un tiket de sessión.
            </summary>
            <param name="login">Login del usuario</param>
            <param name="password">Contraseña del usuario.</param>
            <returns>Una cadena que identifica la sessión o null si se produce un error.</returns>
            <remarks>
            Este método se debe usar para la autenticación mediante ticket de sesión. La utenticación mediante ticket no precisa tener
            la sesión almacenada en memória (una variable en WinForms o en la Session para ASP.NET).
            </remarks>
        </member>
        <member name="M:Cosmo.Security.UserSession.ValidateSessionTicket(System.String)">
            <summary>
            Verifica que una sesión tenga validez.
            </summary>
            <param name="sessionTiket">Identificador de sesión actual.</param>
            <remarks>
            Este método se debe usar para la autenticación mediante ticket de sesión. La utenticación mediante ticket no precisa tener
            la sesión almacenada en memória (una variable en WinForms o en la Session para ASP.NET).
            </remarks>
        </member>
        <member name="P:Cosmo.Security.UserSession.Tiket">
            <summary>
            Devuelve una cadena que contiene el identificador de la sesión de usuario.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserSession.User">
            <summary>
            Devuelve una instancia de <see cref="P:Cosmo.Security.UserSession.User"/> que representa el usuario que ha generado la sesión.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserSession.IsAuthenticated">
            <summary>
            Indica si existe una sessión de usuario iniciada.
            </summary>
        </member>
        <member name="P:Cosmo.Security.UserSession.Workspace">
            <summary>
            Devuelve o establece el workspace asociado a la sesión de usuario.
            </summary>
        </member>
        <member name="T:Cosmo.WorkspaceStatus">
            <summary>
            Enumera los posibles estados de un workspace
            </summary>
        </member>
        <member name="F:Cosmo.WorkspaceStatus.Running">
            <summary>Activo</summary>
        </member>
        <member name="F:Cosmo.WorkspaceStatus.Stopped">
            <summary>Detenido</summary>
        </member>
        <member name="T:Cosmo.Workspace">
            <summary>
            Implementa un workspace, un espacio de trabajo para aplicaciones Cosmo.
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.ROLE_ADMINISTRATOR">
            <summary>Users who have administrative role: access all services and server control</summary>
        </member>
        <member name="F:Cosmo.Workspace.COSMO_URL_DEFAULT">
            <summary>Página de inicio</summary>
        </member>
        <member name="F:Cosmo.Workspace.COSMO_URL_LOGIN">
            <summary>Página de inicio de sesión (autenticación)</summary>
        </member>
        <member name="F:Cosmo.Workspace.COSMO_URL_JOIN">
            <summary>Página de alta de nuevas cuentas</summary>
        </member>
        <member name="F:Cosmo.Workspace.COSMO_URL_JOIN_VERIFICATION">
            <summary>Página de verificación de nuevas cuentas de usuario</summary>
        </member>
        <member name="F:Cosmo.Workspace.COSMO_URL_PASSWORD_RECOVERY">
            <summary>Página de recuperación de la contraseña</summary>
        </member>
        <member name="F:Cosmo.Workspace.COSMO_URL_USER_DATA">
            <summary>Página para los datos personales</summary>
        </member>
        <member name="F:Cosmo.Workspace.COSMO_URL_USER_MESSAGES">
            <summary>Página de mensajes privados personal</summary>
        </member>
        <member name="F:Cosmo.Workspace.COSMO_URL_CONTACT">
            <summary>Página de contacto</summary>
        </member>
        <member name="F:Cosmo.Workspace.REST_SERVICE_USERS">
            <summary>Handler para operaciones de usuario i autenticación/autorización</summary>
        </member>
        <member name="F:Cosmo.Workspace.REST_SERVICE_COMM">
            <summary>Handler para acceso al servidor REST de Communication Services</summary>
        </member>
        <member name="F:Cosmo.Workspace.URL_SERVER_HANDLER">
            <summary>Handler para operaciones del servidor web</summary>
        </member>
        <member name="F:Cosmo.Workspace.PARAM_LOGIN_ACTION">
            <summary>Parámetro que contiene la acción de autenticación a efectuar.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PARAM_LOGIN_REDIRECT">
            <summary>Parámetro que contiene la redirección a una URL después del login.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PARAM_ACTION">
            <summary>Parámetro que permite indicar la acción ejecutada (constantes ACTION_XXXX).</summary>
        </member>
        <member name="F:Cosmo.Workspace.PARAM_COMMAND">
            <summary>Parámetro que permite indicar el comando a ejecutar (constantes COMMAND_XXXX).</summary>
        </member>
        <member name="F:Cosmo.Workspace.PARAM_USER_ID">
            <summary>Parámetro que permite indicar un usuario mediante ID.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PARAM_USER_NAME">
            <summary>Parámetro que permite indicar un usuario mediante nombre/login.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PARAM_OBJECT_ID">
            <summary>Parámetro que permite indicar el identificador de un objeto.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PARAM_FOLDER_ID">
            <summary>Parámetro que permite indicar el identificador de una carpeta/categoria.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PARAM_MENU_ACTIVE">
            <summary>Parámetro que permite indicar el menu activo.</summary>
        </member>
        <member name="F:Cosmo.Workspace.COMMAND_ADD">
            <summary>Comando para crear un nuevo objeto.</summary>
        </member>
        <member name="F:Cosmo.Workspace.COMMAND_EDIT">
            <summary>Comando para actualizar un objeto.</summary>
        </member>
        <member name="F:Cosmo.Workspace.COMMAND_DELETE">
            <summary>Comando para eliminar un objeto.</summary>
        </member>
        <member name="F:Cosmo.Workspace.SESSION_WORKSPACE">
            <summary>Clave de acceso al contexto del workspace almacenado en la sesión del servidor web.</summary>
        </member>
        <member name="F:Cosmo.Workspace.SESSION_LASTERROR">
            <summary>Clave de acceso al último error generado en la sesión.</summary>
        </member>
        <member name="F:Cosmo.Workspace.CACHE_WORKSPACE">
            <summary>Clave de acceso al contexto del workspace almacenado en la sesión del servidor web.</summary>
        </member>
        <member name="F:Cosmo.Workspace.CACHE_LASTERROR">
            <summary>Clave de acceso al último error generado en la sesión.</summary>
        </member>
        <member name="M:Cosmo.Workspace.#ctor(System.Web.HttpContext)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Workspace"/>. 
            </summary>
            <param name="context">Instancia de <see cref="T:System.Web.HttpContext"/> que contiene el contexto actual de servidor web.</param>
        </member>
        <member name="M:Cosmo.Workspace.GetWorkspace(System.Web.HttpContext)">
            <summary>
            Obtiene la instancia de <see cref="T:Cosmo.Workspace"/> usada por el usuario durante la sesión.
            </summary>
            <param name="context">Una instancia de <see cref="T:System.Web.HttpContext"/> que describe el contexto de la llamada al servidor.</param>
        </member>
        <member name="M:Cosmo.Workspace.Initialize(System.Web.HttpContext)">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Name">
            <summary>
            Devuelve el nombre del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Url">
            <summary>
            Devuelve la URL de acceso al workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Mail">
            <summary>
            Devuelve el mail de contacto con el responsable del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.HtmlCharset">
            <summary>
            Devuelve el conjunto de carácteres usado para representar las páginas XHTML del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.HtmlLanguage">
            <summary>
            Devuelve el código de idioma correspondiente al contenido del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UrlClosed">
            <summary>
            Devuelve la URL dónde se redireccionará al cliente si el workspace está inactivo
            o si la IP de acceso está en la lista de bloqueadas.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PageDescription">
            <summary>
            Devuelve la descripción por defecto a insertar en las páginas.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PageKeywords">
            <summary>
            Devuelve las palabras clave por defecto a insertar en las páginas.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.DataService">
            <summary>
            Devuelve una instancia al servicio de datos del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.DataSource">
            <summary>
            Devuelve o establece la conexión a la base de datos.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Context">
            <summary>
            Devuelve o establece la instancia de <see cref="T:System.Web.HttpContext"/> del servidor.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Status">
            <summary>
            Devuelve o establece el estado del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.FileSystemService">
            <summary>
            Devuelve una instancia de <see cref="P:Cosmo.Workspace.FileSystemService"/> que permite acceder al sistema de archivos del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Settings">
            <summary>
            Devuelve o establece la instancia de <see cref="T:Cosmo.WorkspaceSettings"/> que contiene la configuración del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Logger">
            <summary>
            Permite acceder al archivo de LOG del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.AuthenticationService">
            <summary>
            Permite acceder a la gestión de cuentas de usuario del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UIService">
            <summary>
            Devuelve el servicio de comunicaciones del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Communications">
            <summary>
            Devuelve el servicio de comunicaciones del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.CurrentUser">
            <summary>
            Permite obtener la cuenta de usuario autenticado actualmente.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Version">
            <summary>
            Devuelve la versión de la libreria que define el objeto WSWorkspace
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.ProductName">
            <summary>
            Devuelve el nombre del producto.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.CurrentUrl">
            <summary>
            Gets the current relative URL and query string.
            </summary>
        </member>
        <member name="T:Cosmo.Properties.Resources">
            <summary>
              Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:Cosmo.Properties.Resources.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:Cosmo.Properties.Resources.Culture">
            <summary>
              Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
            </summary>
        </member>
        <member name="P:Cosmo.Properties.Resources.ErrorsFound">
            <summary>
              Busca una cadena traducida similar a {0} has the following errors:.
            </summary>
        </member>
        <member name="P:Cosmo.Properties.Resources.SQL_SERVER_SCRIPT">
             <summary>
               Busca una cadena traducida similar a -------------------------------------------------------------------
            -- MobileWhere Server Creation Script                            --
            -------------------------------------------------------------------
            -- Versión: 3.0                                                  --
            -- Última revisión: 09/05/2008                                   --
            -------------------------------------------------------------------
            -- Copyright © 2008 Offshore Tech S.L.                           --
            ----------------------------- [resto de la cadena truncado]&quot;;.
             </summary>
        </member>
        <member name="P:Cosmo.Properties.Resources.TraceWithDetails">
             <summary>
               Busca una cadena traducida similar a {0}
            Details:
            {1}.
             </summary>
        </member>
        <member name="P:Cosmo.Properties.Resources.WarningsFound">
            <summary>
              Busca una cadena traducida similar a {0} has the following warnings:.
            </summary>
        </member>
    </members>
</doc>
