<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmo.Core</name>
    </assembly>
    <members>
        <member name="T:Cosmo.Data.CollectionHelper">
            <summary>
            Collection helper class.
            </summary>
        </member>
        <member name="M:Cosmo.Data.CollectionHelper.IsEqualTo(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Checks whether a collection is the same as another collection.
            </summary>
            <param name="listA">The list A.</param>
            <param name="listB">The list B.</param>
            <returns>
            True if the two collections contain all the same items in the same order.
            </returns>
        </member>
        <member name="T:Cosmo.Data.DataObjectBase`1">
            <summary>
            Abstract class that serves as a base class for serializable objects.
            </summary>
            <typeparam name="T">Type that the class should hold (same as the defined type).</typeparam>
        </member>
        <member name="T:Cosmo.Data.IDataWarningInfo">
            <summary>
            Interface that is based on the IDataErrorInfo interface, but supports warnings instead of errors.
            </summary>
        </member>
        <member name="P:Cosmo.Data.IDataWarningInfo.Warning">
            <summary>
            Gets the warning.
            </summary>
            <value>
            A warning message indicating what is possibly wrong with this object. The default is
            an empty string ("").
            </value>
        </member>
        <member name="P:Cosmo.Data.IDataWarningInfo.Item(System.String)">
            <summary>
            Gets the warning message for the property with the given name.
            </summary>
            <value></value>
            <param name="columnName">The name of the property whose warning message to get.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Data.DataObjectBase`1"/> class.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.op_Equality(Cosmo.Data.DataObjectBase{`0},Cosmo.Data.DataObjectBase{`0})">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.op_Inequality(Cosmo.Data.DataObjectBase{`0},Cosmo.Data.DataObjectBase{`0})">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="F:Cosmo.Data.DataObjectBase`1.Mode">
            <summary>
            Gets or sets the <see cref="T:Cosmo.Data.SerializationMode"/> of this object.
            </summary>
            <remarks>
            This member is a field to enable support for Xml-Rpc (see http://www.xml-rpc.net/).
            </remarks>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Load(System.String)">
            <summary>
            Loads the object from a file using binary formatting.
            </summary>
            <param name="fileName">Filename of the file that contains the serialized data of this object.</param>
            <returns>Deserialized instance of the object. If the deserialization fails, <c>null</c> is returned.</returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Load(System.String,System.Boolean)">
            <summary>
            Loads the object from a file using binary formatting.
            </summary>
            <param name="fileName">Filename of the file that contains the serialized data of this object.</param>
            <param name="enableRedirects">if set to <c>true</c>, redirects will be enabled.</param>
            <returns>Deserialized instance of the object. If the deserialization fails, <c>null</c> is returned.</returns>
            <remarks>
            When enableRedirects is enabled, loading will take more time. Only set
            the parameter to <c>true</c> when the deserialization without redirects fails.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Load(System.String,Cosmo.Data.SerializationMode)">
            <summary>
            Loads the object from a file using a specific formatting.
            </summary>
            <param name="fileName">Filename of the file that contains the serialized data of this object.</param>
            <param name="mode"><see cref="T:Cosmo.Data.SerializationMode"/> to use.</param>
            <returns>Deserialized instance of the object. If the deserialization fails, <c>null</c> is returned.</returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Load(System.String,Cosmo.Data.SerializationMode,System.Boolean)">
            <summary>
            Loads the object from a file using a specific formatting.
            </summary>
            <param name="fileName">Filename of the file that contains the serialized data of this object.</param>
            <param name="mode"><see cref="T:Cosmo.Data.SerializationMode"/> to use.</param>
            <param name="enableRedirects">if set to <c>true</c>, redirects will be enabled.</param>
            <returns>Deserialized instance of the object. If the deserialization fails, <c>null</c> is returned.</returns>
            <remarks>
            When enableRedirects is enabled, loading will take more time. Only set
            the parameter to <c>true</c> when the deserialization without redirects fails.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Load(System.Xml.XmlDocument)">
            <summary>
            Loads the object from an XmlDocument object.
            </summary>
            <param name="xmlDocument">The XML document.</param>
            <returns>Deserialized instance of the object. If the deserialization fails, <c>null</c> is returned.</returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Load(System.Byte[])">
            <summary>
            Loads the object from a stream using binary formatting.
            </summary>
            <param name="bytes">The byte array.</param>
            <returns>Deserialized instance of the object. If the deserialization fails, <c>null</c> is returned.</returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Load(System.Byte[],Cosmo.Data.SerializationMode)">
            <summary>
            Loads the object from a stream.
            </summary>
            <param name="bytes">The byte array.</param>
            <param name="mode"><see cref="T:Cosmo.Data.SerializationMode"/> to use.</param> 
            <returns>Deserialized instance of the object. If the deserialization fails, <c>null</c> is returned.</returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Load(System.IO.Stream)">
            <summary>
            Loads the object from a stream using binary formatting.
            </summary>
            <param name="stream">Stream that contains the serialized data of this object.</param>
            <returns>Deserialized instance of the object. If the deserialization fails, <c>null</c> is returned.</returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Load(System.IO.Stream,System.Boolean)">
            <summary>
            Loads the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="enableRedirects">if set to <c>true</c>, redirects will be enabled.</param>
            <returns>Deserialized instance of the object. If the deserialization fails, <c>null</c> is returned.</returns>
            <remarks>
            When enableRedirects is enabled, loading will take more time. Only set
            the parameter to <c>true</c> when the deserialization without redirects fails.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Load(System.IO.Stream,Cosmo.Data.SerializationMode)">
            <summary>
            Loads the object from a stream using a specific formatting.
            </summary>
            <param name="stream">Stream that contains the serialized data of this object.</param>
            <param name="mode"><see cref="T:Cosmo.Data.SerializationMode"/> to use.</param> 
            <returns>Deserialized instance of the object. If the deserialization fails, <c>null</c> is returned.</returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Load(System.IO.Stream,Cosmo.Data.SerializationMode,System.Boolean)">
            <summary>
            Loads the object from a stream using a specific formatting.
            </summary>
            <param name="stream">Stream that contains the serialized data of this object.</param>
            <param name="mode"><see cref="T:Cosmo.Data.SerializationMode"/> to use.</param> 
            <param name="enableRedirects">if set to <c>true</c>, redirects will be enabled.</param>
            <returns>Deserialized instance of the object. If the deserialization fails, <c>null</c> is returned.</returns>
            <remarks>
            When enableRedirects is enabled, loading will take more time. Only set
            the parameter to <c>true</c> when the deserialization without redirects fails.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Save(System.String)">
            <summary>
            Saves the object to a file using the default formatting.
            </summary>
            <param name="fileName">Filename of the file that will contain the serialized data of this object.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Save(System.String,Cosmo.Data.SerializationMode)">
            <summary>
            Saves the object to a file using a specific formatting.
            </summary>
            <param name="mode"><see cref="T:Cosmo.Data.SerializationMode"/> to use.</param>
            <param name="fileName">Filename of the file that will contain the serialized data of this object.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Save(System.IO.Stream)">
            <summary>
            Saves the object to a stream using the default formatting.
            </summary>
            <param name="stream">Stream that will contain the serialized data of this object.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Save(System.IO.Stream,Cosmo.Data.SerializationMode)">
            <summary>
            Saves the object to a stream using a specific formatting.
            </summary>
            <param name="stream">Stream that will contain the serialized data of this object.</param>
            <param name="mode"><see cref="T:Cosmo.Data.SerializationMode"/> to use.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.RegisterProperty(System.String,System.Type,System.Object)">
            <summary>
            Registers a property that will be automatically handled by this object.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="type">Type of the property.</param>
            <param name="defaultValue">Default value of the property.</param>
            <returns>
            	<see cref="T:Cosmo.Data.PropertyData"/> containing the property information.
            </returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.RegisterProperty(System.String,System.Type,System.Object,System.ComponentModel.PropertyChangedEventHandler)">
            <summary>
            Registers a property that will be automatically handled by this object.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="type">Type of the property.</param>
            <param name="defaultValue">Default value of the property.</param>
            <param name="propertyChangedEventHandler">The property changed event handler.</param>
            <returns>
            	<see cref="T:Cosmo.Data.PropertyData"/> containing the property information.
            </returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.InitializeProperties">
            <summary>
            Initializes all the properties for this object.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.InitializeProperty(Cosmo.Data.PropertyData)">
            <summary>
            Initializes a specific property for this object.
            </summary>
            <param name="property"><see cref="T:Cosmo.Data.PropertyData"/> of the property.</param>
            <exception cref="T:Cosmo.Data.InvalidPropertyException">Thrown when the name of the property is invalid.</exception>
            <exception cref="T:Cosmo.Data.PropertyAlreadyRegisteredException">Thrown when the property is already registered.</exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.InitializeProperty(System.String,System.Type,System.Object,System.ComponentModel.PropertyChangedEventHandler)">
            <summary>
            Initializes a specific property for this object.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="type">Type of the property.</param>
            <param name="defaultValue">Default value of the property.</param>
            <param name="propertyChangedEventHandler">The property changed event handler.</param>
            <exception cref="T:Cosmo.Data.InvalidPropertyException">Thrown when the name of the property is invalid.</exception>
            <exception cref="T:Cosmo.Data.PropertyAlreadyRegisteredException">Thrown when the property is already registered.</exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.IsPropertyRegistered(System.String)">
            <summary>
            Returns whether a specific property is registered.
            </summary>
            <param name="name">Name of the property.</param>
            <returns>True if the property is registered, otherwise false.</returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.ValidateFields">
            <summary>
            Validates the field values of this object. Override this method to enable
            validation of field values.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.ValidateBusinessRules">
            <summary>
            Validates the business rules of this object. Override this method to enable
            validation of business rules.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.SetValue(System.String,System.Object)">
            <summary>
            Sets the value of a specific property.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="value">Value of the property</param>
            <exception cref="T:Cosmo.Data.PropertyNotRegisteredException">Thrown when the property is not registered.</exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.SetValue(System.String,System.Object,System.Boolean)">
            <summary>
            Sets the value of a specific property.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="value">Value of the property</param>
            <param name="notifyOnChange"></param>
            <exception cref="T:Cosmo.Data.PropertyNotRegisteredException">Thrown when the property is not registered.</exception>/// 
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.SetValue(Cosmo.Data.PropertyData,System.Object)">
            <summary>
            Sets the value of a specific property.
            </summary>
            <param name="property"><see cref="T:Cosmo.Data.PropertyData"/> of the property.</param>
            <param name="value">Value of the property</param>
            <exception cref="T:Cosmo.Data.PropertyNotRegisteredException">Thrown when the property is not registered.</exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetValue(System.String)">
            <summary>
            Gets the value of a specific property.
            </summary>
            <param name="name">Name of the property.</param>
            <returns>Object value of the property</returns>
            <exception cref="T:Cosmo.Data.PropertyNotRegisteredException">Thrown when the property is not registered.</exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetValue``1(System.String)">
            <summary>
            Gets the typed value of a specific property.
            </summary>
            <param name="name">Name of the property.</param>
            <returns>Object value of the property</returns>
            <exception cref="T:Cosmo.Data.PropertyNotRegisteredException">Thrown when the property is not registered.</exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetValue(Cosmo.Data.PropertyData)">
            <summary>
            Gets the value of a specific property.
            </summary>
            <param name="property"><see cref="T:Cosmo.Data.PropertyData"/> of the property.</param>
            <returns>Object value of the property</returns>
            <exception cref="T:Cosmo.Data.PropertyNotRegisteredException">Thrown when the property is not registered.</exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetValue``1(Cosmo.Data.PropertyData)">
            <summary>
            Gets the typed value of a specific property.
            </summary>
            <param name="property"><see cref="T:Cosmo.Data.PropertyData"/> of the property.</param>
            <returns>Object value of the property</returns>
            <exception cref="T:Cosmo.Data.PropertyNotRegisteredException">Thrown when the property is not registered.</exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetDefaultValue(System.String)">
            <summary>
            Returns the default value of a specific property.
            </summary>
            <param name="name">Name of the property.</param>
            <returns>Default value of the property.</returns>
            <exception cref="T:Cosmo.Data.PropertyNotRegisteredException">Thrown when the property is not registered.</exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetDefaultValue``1(System.String)">
            <summary>
            Returns the typed default value of a specific property.
            </summary>
            <param name="name">Name of the property.</param>
            <returns>Default value of the property.</returns>
            <exception cref="T:Cosmo.Data.PropertyNotRegisteredException">Thrown when the property is not registered.</exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetDefaultValue(Cosmo.Data.PropertyData)">
            <summary>
            Returns the default value of a specific property.
            </summary>
            <param name="property"><see cref="T:Cosmo.Data.PropertyData"/> of the property.</param>
            <returns>Default value of the property.</returns>
            <exception cref="T:Cosmo.Data.PropertyNotRegisteredException">Thrown when the property is not registered.</exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetDefaultValue``1(Cosmo.Data.PropertyData)">
            <summary>
            Returns the typed default value of a specific property.
            </summary>
            <param name="property"><see cref="T:Cosmo.Data.PropertyData"/> of the property.</param>
            <returns>Default value of the property.</returns>
            <exception cref="T:Cosmo.Data.PropertyNotRegisteredException">Thrown when the property is not registered.</exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetType(System.String)">
            <summary>
            Returns the type of a specific property.
            </summary>
            <param name="name">Name of the property.</param>
            <returns>Type of the property.</returns>
            <exception cref="T:Cosmo.Data.PropertyNotRegisteredException">Thrown when the property is not registered.</exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetType(Cosmo.Data.PropertyData)">
            <summary>
            Returns the type of a specific property.
            </summary>
            <param name="property"><see cref="T:Cosmo.Data.PropertyData"/> of the property.</param>
            <returns>Type of the property.</returns>
            <exception cref="T:Cosmo.Data.PropertyNotRegisteredException">Thrown when the property is not registered.</exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.IsTypeNullable(System.Type)">
            <summary>
            Returns whether a type is nullable or not.
            </summary>
            <param name="type">Type to check.</param>
            <returns>True if the type is nullable, otherwise false.</returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Validate">
            <summary>
            Validates the current object for field and business rule errors.
            </summary>
            <remarks>
            To check wether this object contains any errors, use the <see cref="P:Cosmo.Data.DataObjectBase`1.HasErrors"/> property.
            
            This method does not force validation. This means that when the object is already validated,
            and no properties have been changed, no validation actually occurs since there is no reason
            for any values to have changed.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Validate(System.Boolean)">
            <summary>
            Validates the current object for field and business rule errors.
            </summary>
            <param name="force">if set to <c>true</c>, a validation is forced.</param>
            <remarks>
            To check wether this object contains any errors, use the <see cref="P:Cosmo.Data.DataObjectBase`1.HasErrors"/> property.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetErrorMessage">
            <summary>
            Returns a message that contains all the current errors and automatically determines the name of the object.
            </summary>
            <returns>
            Error string or empty in case of no errors.
            </returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetErrorMessage(System.String)">
            <summary>
            Returns a message that contains all the current errors.
            </summary>
            <param name="userFriendlyObjectName">Name of the user friendly object.</param>
            <returns>
            Error string or empty in case of no errors.
            </returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetWarningMessage">
            <summary>
            Returns a message that contains all the current warnings and automatically determines the name of the object.
            </summary>
            <returns>
            Warning string or empty in case of no warnings.
            </returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetWarningMessage(System.String)">
            <summary>
            Returns a message that contains all the current warnings.
            </summary>
            <param name="userFriendlyObjectName">Name of the user friendly object.</param>
            <returns>
            Warning string or empty in case of no warnings.
            </returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetListMessages(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the list messages.
            </summary>
            <param name="fields">The field warnings or errors.</param>
            <param name="business">The business warnings or errors.</param>
            <returns>String representing the output of all items in the fields an business object.</returns>
            <remarks>
            This method is used to create a message string for field warnings or errors and business warnings
            or errors. Just pass the right dictionary and list to this method.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.SetFieldWarning(Cosmo.Data.PropertyData,System.String)">
            <summary>
            Sets a specific field warning.
            </summary>
            <param name="property"><see cref="T:Cosmo.Data.PropertyData"/> of the property.</param>
            <param name="warning">Warning message.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.SetFieldWarning(System.String,System.String)">
            <summary>
            Sets a specific field warning.
            </summary>
            <param name="property">Name of the property.</param>
            <param name="warning">Warning message.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.SetBusinessRuleWarning(System.String)">
            <summary>
            Sets a specific business rule warning.
            </summary>
            <param name="warning">Warning message</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.SetFieldError(Cosmo.Data.PropertyData,System.String)">
            <summary>
            Sets a specific field error.
            </summary>
            <param name="property"><see cref="T:Cosmo.Data.PropertyData"/> of the property.</param>
            <param name="error">Error message.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.SetFieldError(System.String,System.String)">
            <summary>
            Sets a specific field error.
            </summary>
            <param name="property">Name of the property.</param>
            <param name="error">Error message.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.SetBusinessRuleError(System.String)">
            <summary>
            Sets a specific business rule error.
            </summary>
            <param name="error">Error message</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.SubscribeToEvents">
            <summary>
            Subscribes to all property events.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Invoked when a property value has changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.OnPropertyChanged(System.String)">
            <summary>
            Invoked when a property value has changed.
            </summary>
            <param name="propertyName">Name of the property that has changed.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.ToXml">
            <summary>
            Serializes the object to and xml object.
            </summary>
            <returns><see cref="T:System.Xml.XmlDocument"/> containing the serialized data.</returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.ToByteArray">
            <summary>
            Serializes the object to a byte array.
            </summary>
            <returns>Byte array containing the serialized data.</returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Only constructor for the DataObjectBase.
            </summary>
            <param name="info">SerializationInfo object, null if this is the first time construction.</param>
            <param name="context">StreamingContext object, simple pass a default new StreamingContext() if this is the first time construction.</param>
            <remarks>
            Call this method, even when constructing the object for the first time (thus not deserializing).
            </remarks>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetDataFromSerializationInfo(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            Retrieves the actual data from the serialization info.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <remarks>
            This method is called from the OnDeserialized method, thus all child objects
            are serialized and available at the time this method is called.
            
            Only use this method to support older serialization techniques. When using this class
            for new objects, all serialization is handled automatically.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetDataFromSerializationInfoInternal(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            Retrieves the actual data from the serialization info for the properties registered
            on this object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Writes all the data that must be serialized into the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Invoked when the deserialization of the object graph is complete.
            </summary>
            <param name="context">StreamingContext.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.OnDeserialization(System.Object)">
            <summary>
            Invoked when the deserialization of the object graph is complete.
            </summary>
            <param name="sender">Sender.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.CallOnDeserializationCallback(System.Object)">
            <summary>
            Calls the <see cref="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)"/> method on the object if possible.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.ConvertDictionaryToList(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Converts a dictionary to a list for serialization purposes.
            </summary>
            <param name="dictionary">Dictionary to convert.</param>
            <returns>List that contains all the values of the dictionary.</returns>
            <remarks>
            This method is required because Dictionary can't be serialized.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.ConvertListToDictionary(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Converts a list to a dictionary for serialization purposes.
            </summary>
            <param name="list">List to convert.</param>
            <returns>Dictionary that contains all the values of the list.</returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.Clone">
            <summary>
            Clones the current object.
            </summary>
            <returns>Clone of the object.</returns>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.CancelEdit">
            <summary>
            Discards changes since the last <see cref="M:System.ComponentModel.IEditableObject.BeginEdit"/> call.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.EndEdit">
            <summary>
            Pushes changes since the last <see cref="M:System.ComponentModel.IEditableObject.BeginEdit"/> call.
            </summary>
        </member>
        <member name="E:Cosmo.Data.DataObjectBase`1.PropertyChanged">
            <summary>
            Invoked when a property of this object has changed.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.IsInitialized">
            <summary>
            Gets or sets a value indicating whether this instance is initialized.
            </summary>
            <value>
            	<c>true</c> if this instance is initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.SubscribedToEvents">
            <summary>
            Gets or sets whether this object is subscribed to all childs.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.IsDeserializedDataAvailable">
            <summary>
            Gets or sets whether the deserialized data is available, which means that
            OnDeserialized is invoked.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.IsDeserialized">
            <summary>
            Gets or sets whether the object is fully deserialized.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.IsValidated">
            <summary>
            Gets or sets whether this object is validated or not.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.AlwaysInvokeNotifyChanged">
            <summary>
            Gets or sets whether this object should always invoke the <see cref="E:Cosmo.Data.DataObjectBase`1.PropertyChanged"/> event,
            even when the actual value of a property has not changed.
            
            Enabling this property is useful when using this class in a WPF environment.
            </summary>
            <remarks>
            By default, this property is true. Disable it to gain a very, very small performance improvement but
            to loose stable WPF compatibility.
            </remarks>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.HandlePropertyAndCollectionChanges">
            <summary>
            Gets or sets whether this object should handle (thus invoke the specific events) when
            a property of collection value has changed.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.AutomaticallyValidateOnPropertyChanged">
            <summary>
            Gets or sets whether this object should automatically validate itself when a property value
            has changed.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.IsDirty">
            <summary>
            Gets whether this object is dirty (contains unsaved data).
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.HasWarnings">
            <summary>
            Gets whether this object contains any field or business warnings.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.FieldWarningCount">
            <summary>
            Gets the number of field warnings.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.BusinessRuleWarningCount">
            <summary>
            Gets the number of business rule warnings.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.HasErrors">
            <summary>
            Gets whether this object contains any field or business errors.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.FieldErrorCount">
            <summary>
            Gets the number of field errors.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.BusinessRuleErrorCount">
            <summary>
            Gets the number of business rule errors.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.DeserializationSucceeded">
            <summary>
            Gets whether the deserialization has succeeded. If automatic deserialization fails, the object
            should try to deserialize manually.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.Cosmo#Data#IDataWarningInfo#Warning">
            <summary>
            Gets the current warning.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.Cosmo#Data#IDataWarningInfo#Item(System.String)">
            <summary>
            Gets a warning for a specific column.
            </summary>
            <param name="columnName">Column name.</param>
            <returns>Warning.</returns>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.System#ComponentModel#IDataErrorInfo#Error">
            <summary>
            Gets the current error.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DataObjectBase`1.System#ComponentModel#IDataErrorInfo#Item(System.String)">
            <summary>
            Gets an error for a specific column.
            </summary>
            <param name="columnName">Column name.</param>
            <returns>Error.</returns>
        </member>
        <member name="T:Cosmo.Data.DataObjectBase`1.BackupData">
            <summary>
            Class containing backup information.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.BackupData.#ctor(Cosmo.Data.DataObjectBase{`0})">
            <summary>
            Initializes a new backup data object.
            </summary>
            <param name="obj">Object to backup.</param>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.BackupData.CreateBackup">
            <summary>
            Creates a backup of the object property values.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DataObjectBase`1.BackupData.RestoreBackup">
            <summary>
            Restores the backup to the object.
            </summary>
        </member>
        <member name="T:Cosmo.Data.DBConnection">
            <summary>
            Representa una conexión a base de datos.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DBConnection.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.DBConnection"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DBConnection.#ctor(System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.DBConnection"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DBConnection.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Data.DBConnection"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DBConnection.Connect">
            <summary>
            Inicializa una conexión con la base de datos del Workspace.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DBConnection.Disconnect">
            <summary>
            Cierra la conexión a la base de datos del Workspace.
            </summary>
        </member>
        <member name="M:Cosmo.Data.DBConnection.GetDSN">
            <summary>
            Devuelve la cadena de conexión a la base de datos del workspace
            </summary>
            <returns>La cadena de conexión.</returns>
        </member>
        <member name="M:Cosmo.Data.DBConnection.TestConnection">
            <summary>
            Testea una conexión a base de datos.
            </summary>
            <returns><c>true</c> si la conexión se establece correctamente o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="P:Cosmo.Data.DBConnection.ServerName">
            <summary>
            Devuelve o establece el nombre del servidor de base de datos.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DBConnection.DatabaseName">
            <summary>
            Devuelve o establece el nombre de la base de datos.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DBConnection.AccountLogin">
            <summary>
            Devuelve o establece el login de la cuenta de acceso.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DBConnection.AccountPassword">
            <summary>
            Devuelve o establece la contraseña de la cuenta de acceso.
            </summary>
        </member>
        <member name="P:Cosmo.Data.DBConnection.ConnectionString">
            <summary>
            Devuelve o establece la cadena de conexión a la base de datos (DSN).
            </summary>
        </member>
        <member name="P:Cosmo.Data.DBConnection.Connection">
            <summary>
            Devuelve o establece la conexión a la base de datos.
            </summary>
        </member>
        <member name="T:Cosmo.Data.InvalidPropertyException">
            <summary>
            Exception is thrown when an invalid property is added to the <see cref="T:Cosmo.Data.DataObjectBase`1"/> class.
            </summary>
        </member>
        <member name="M:Cosmo.Data.InvalidPropertyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of this exception.
            </summary>
            <param name="name">Name of the property that caused the exception.</param>
        </member>
        <member name="T:Cosmo.Data.InvalidPropertyValueException">
            <summary>
            Exception is thrown when an the new value of a property of the <see cref="T:Cosmo.Data.DataObjectBase`1"/> class is invalid.
            </summary>
        </member>
        <member name="M:Cosmo.Data.InvalidPropertyValueException.#ctor(System.String,System.Type,System.Type)">
            <summary>
            Initializes a new instance of this exception.
            </summary>
            <param name="name">Name of the property that caused the exception.</param>
            <param name="expectedType">Expected type for the property.</param>
            <param name="actualType">Actual object value type.</param>
        </member>
        <member name="T:Cosmo.Data.PublishStatus">
            <summary>
            Enumera los estados posibles de publicación de un objeto Cosmo.
            </summary>
        </member>
        <member name="F:Cosmo.Data.PublishStatus.Unpublished">
            <summary>
            Despublicado. 
            El objeto no es visible.
            </summary>
        </member>
        <member name="F:Cosmo.Data.PublishStatus.Draft">
            <summary>
            Borrador. 
            El objeto no es visible externamente y sólo es accesible por el propietario.
            </summary>
        </member>
        <member name="F:Cosmo.Data.PublishStatus.ApprovalPending">
            <summary>
            Aprovación pendiente. 
            El objeto no es visible externamente y está a la espera de recibir aprovación por un usuario gerárquicamente por encima del propietario.
            </summary>
        </member>
        <member name="F:Cosmo.Data.PublishStatus.Published">
            <summary>
            Publicado.
            El objeto es visible externamente y puede ser accedido por todos los usuarios o por los que tienen suficientes privilegios.
            </summary>
        </member>
        <member name="T:Cosmo.Data.IStandardObject">
            <summary>
            Interface para los objetos estándars que maneja Cosmo.
            </summary>
        </member>
        <member name="M:Cosmo.Data.IStandardObject.Save(System.String)">
            <summary>
            Serializa el objeto a un archivo XML.
            </summary>
            <param name="filename">Archivo de salida.</param>
        </member>
        <member name="M:Cosmo.Data.IStandardObject.Load(System.String)">
            <summary>
            Desserializa un objeto serializado en un archivo XML y carga los datos en la instancia actual.
            </summary>
            <param name="filename">Archivo a cargar.</param>
        </member>
        <member name="M:Cosmo.Data.IStandardObject.Validate">
            <summary>
            Valida los datos de las propiedades del objeto.
            </summary>
            <returns><c>true</c> si lo sdatos son correctos o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="P:Cosmo.Data.IStandardObject.Id">
            <summary>
            Devuelve o establece el identificador del objeto.
            </summary>
        </member>
        <member name="P:Cosmo.Data.IStandardObject.FolderId">
            <summary>
            Devuelve o establece el identificador de la rama del repositorio Cosmo al que pertenece.
            </summary>
        </member>
        <member name="P:Cosmo.Data.IStandardObject.Status">
            <summary>
            Devuelve o establece el estado de publicación del objeto.
            </summary>
        </member>
        <member name="P:Cosmo.Data.IStandardObject.Created">
            <summary>
            Devuelve o establece la fecha de creación del objeto.
            </summary>
        </member>
        <member name="P:Cosmo.Data.IStandardObject.Updated">
            <summary>
            Devuelve o establece la fecha de la última modificación del objeto.
            </summary>
        </member>
        <member name="P:Cosmo.Data.IStandardObject.Owner">
            <summary>
            Devuelve o establece el login del propietario del objeto.
            </summary>
            <remarks>
            Por defecto, el propietario del objeto es el usuario creador del mismo.
            </remarks>
        </member>
        <member name="T:Cosmo.Data.PropertyAlreadyRegisteredException">
            <summary>
            Exception is thrown when a property is added to the <see cref="T:Cosmo.Data.DataObjectBase`1"/> class that is
            already registered by the object.
            </summary>
        </member>
        <member name="M:Cosmo.Data.PropertyAlreadyRegisteredException.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of this exception.
            </summary>
            <param name="name">Name of the property that caused the exception.</param>
            <param name="type">Type of the object that is trying to register the property.</param>
        </member>
        <member name="T:Cosmo.Data.PropertyData">
            <summary>
            Object that contains all the property data that is used by the <see cref="T:Cosmo.Data.DataObjectBase`1"/> class.
            </summary>
        </member>
        <member name="M:Cosmo.Data.PropertyData.#ctor(System.String,System.Type,System.Object,System.ComponentModel.PropertyChangedEventHandler)">
            <summary>
            Initializes a new instance of this object.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="type">Type of the property.</param>
            <param name="defaultValue">Default value of the property.</param>
            <param name="propertyChangedEventHandler">The property changed event handler.</param>
        </member>
        <member name="M:Cosmo.Data.PropertyData.GetDefaultValue">
            <summary>
            Returns the default value of the property.
            </summary>
            <returns>Default value of the property.</returns>
        </member>
        <member name="M:Cosmo.Data.PropertyData.GetDefaultValue``1">
            <summary>
            Returns the typed default value of the property.
            </summary>
            <returns>Default value of the property.</returns>
        </member>
        <member name="P:Cosmo.Data.PropertyData.Name">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:Cosmo.Data.PropertyData.Type">
            <summary>
            Gets the type of the property.
            </summary>
        </member>
        <member name="P:Cosmo.Data.PropertyData.DefaultValue">
            <summary>
            Gets or sets the default value of the property.
            </summary>
        </member>
        <member name="P:Cosmo.Data.PropertyData.PropertyChangedEventHandler">
            <summary>
            Gets or sets the property changed event handler.
            </summary>
            <value>The property changed event handler.</value>
        </member>
        <member name="T:Cosmo.Data.PropertyNotNullableException">
            <summary>
            Exception is thrown when a property value is set to null but when the type does not support
            null values.
            </summary>
        </member>
        <member name="M:Cosmo.Data.PropertyNotNullableException.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of this exception.
            </summary>
            <param name="name">Name of the property that caused the exception.</param>
            <param name="type">Type of the object that is trying to register the property.</param>
        </member>
        <member name="T:Cosmo.Data.PropertyNotRegisteredException">
            <summary>
            Exception is thrown when a property is used by the <see cref="T:Cosmo.Data.DataObjectBase`1"/> class that is
            not registered by the object.
            </summary>
        </member>
        <member name="M:Cosmo.Data.PropertyNotRegisteredException.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of this exception.
            </summary>
            <param name="name">Name of the property that caused the exception.</param>
            <param name="type">Type of the object that is trying to register the property.</param>
        </member>
        <member name="T:Cosmo.Data.RedirectDeserializationBinder">
            <summary>
            <see cref="T:System.Runtime.Serialization.SerializationBinder"/> class that supports backwards compatible serialization.
            </summary>
        </member>
        <member name="M:Cosmo.Data.RedirectDeserializationBinder.#ctor">
            <summary>
            Creates a custom binder that redirects all the types to new types if required. All properties
            decorated with the <see cref="T:Cosmo.Data.RedirectTypeAttribute"/> will be redirected.
            </summary>
            <remarks>
            This constructor searches for attributes of the current application domain.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.RedirectDeserializationBinder.#ctor(System.AppDomain)">
            <summary>
            Creates a custom binder that redirects all the types to new types if required. All properties
            decorated with the <see cref="T:Cosmo.Data.RedirectTypeAttribute"/> will be redirected.
            </summary>
            <param name="appDomain"><see cref="T:System.AppDomain"/> to search in.</param>
            <remarks>
            This constructor searches for attributes in a specific application domain.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.RedirectDeserializationBinder.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a custom binder that redirects all the types to new types if required. All properties
            decorated with the <see cref="T:Cosmo.Data.RedirectTypeAttribute"/> will be redirected.
            </summary>
            <param name="assemblies">Array of assembly locations that should be searched.</param>
            <remarks>
            This constructor searches for attributes in specific assemblies.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.RedirectDeserializationBinder.Initialize(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes the binder by searching for all <see cref="T:Cosmo.Data.RedirectTypeAttribute"/> in the
            assemblies passed to this method.
            </summary>
            <param name="assemblies">Array of assembly locations that should be searched.</param>
        </member>
        <member name="M:Cosmo.Data.RedirectDeserializationBinder.InitializeAttributes(System.Object,Cosmo.Data.RedirectTypeAttribute[])">
            <summary>
            Initializes the binder by searching for all <see cref="T:Cosmo.Data.RedirectTypeAttribute"/> in the
            attributes passed to this method.
            </summary>
            <param name="decoratedObject">Object that was decorated with the attribute.</param>
            <param name="attributes">Array of attributes to search for.</param>
        </member>
        <member name="M:Cosmo.Data.RedirectDeserializationBinder.BindToType(System.String,System.String)">
            <summary>
            Binds an assembly and typename to a specific type.
            </summary>
            <param name="assemblyName">Original assembly name.</param>
            <param name="typeName">Original type name.</param>
            <returns><see cref="T:System.Type"/> that the serialization should actually use.</returns>
        </member>
        <member name="M:Cosmo.Data.RedirectDeserializationBinder.LoadType(System.String)">
            <summary>
            Tries to load a type on a safe way.
            </summary>
            <param name="type"></param>
            <returns></returns>
            <remarks>
            In case this method fails to load the type, a warning will be traced with additional information.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.RedirectDeserializationBinder.SplitType(System.String,System.String@,System.String@)">
            <summary>
            Splits the type into a type name and assembly name.
            </summary>
            <param name="type">Type to split.</param>
            <param name="assemblyName">Assemby name.</param>
            <param name="typeName">Type name.</param>
        </member>
        <member name="M:Cosmo.Data.RedirectDeserializationBinder.ConvertTypeToVersionIndependentType(System.String)">
            <summary>
            Converts a string representation of a type to a version independent type by removing the assembly version information.
            </summary>
            <param name="type">Type to convert.</param>
            <returns>String representing the type without version information.</returns>
        </member>
        <member name="M:Cosmo.Data.RedirectDeserializationBinder.ConvertTypeToNewType(System.String)">
            <summary>
            Converts a string representation of a type to a redirected type.
            </summary>
            <param name="type">Type to convert.</param>
            <returns>String representing the type that represents the redirected type.</returns>
        </member>
        <member name="M:Cosmo.Data.RedirectDeserializationBinder.GetInnerTypes(System.String)">
            <summary>
            Returns the inner type of a type, for example, a generic array type.
            </summary>
            <param name="type">Full type which might contain an inner type.</param>
            <returns>Array of inner types.</returns>
        </member>
        <member name="P:Cosmo.Data.RedirectDeserializationBinder.MicrosoftPublicKeyTokens">
            <summary>
            Gets the Microsoft public key tokens.
            </summary>
            <value>The Microsoft public key tokens.</value>
        </member>
        <member name="T:Cosmo.Data.RedirectTypeAttribute">
            <summary>
            Attribute that can be used to redirect types to other types to be able
            to rename / move property types.
            </summary>
            <remarks>
            This attribute should be appended to the property definition.
            
            In case this attribute is used on a field or property, the <see cref="P:Cosmo.Data.RedirectTypeAttribute.NewAssemblyName"/> and 
            <see cref="P:Cosmo.Data.RedirectTypeAttribute.NewTypeName"/> are mandatory. In all other cases, the type and assembly will be
            loaded automatically.
            </remarks>
        </member>
        <member name="M:Cosmo.Data.RedirectTypeAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new object from scratch.
            </summary>
            <param name="originalAssemblyName">Original assembly location..</param>
            <param name="originalTypeName">Original type name.</param>
        </member>
        <member name="P:Cosmo.Data.RedirectTypeAttribute.OriginalAssemblyName">
            <summary>
            Gets or sets the original assembly name.
            </summary>
        </member>
        <member name="P:Cosmo.Data.RedirectTypeAttribute.NewAssemblyName">
            <summary>
            Gets or sets the new assembly name.
            </summary>
            <remarks>
            Leave empty if the assembly name is unchanged.
            </remarks>
        </member>
        <member name="P:Cosmo.Data.RedirectTypeAttribute.OriginalTypeName">
            <summary>
            Gets or sets the original type name.
            </summary>
            <remarks>
            List or Array types should be postfixed with a [[]].
            </remarks>
        </member>
        <member name="P:Cosmo.Data.RedirectTypeAttribute.NewTypeName">
            <summary>
            Gets or sets the new type name.
            </summary>
            <remarks>
            Leave empty if the type name is unchanged.
            
            List or Array types should be postfixed with a [[]].
            </remarks>
        </member>
        <member name="P:Cosmo.Data.RedirectTypeAttribute.OriginalType">
            <summary>
            Gets the original type.
            </summary>
        </member>
        <member name="P:Cosmo.Data.RedirectTypeAttribute.TypeToLoad">
            <summary>
            Gets the new type that should be loaded.
            </summary>
        </member>
        <member name="T:Cosmo.Data.SerializationMode">
            <summary>
            Enumeration containing all the available serialization modes for the <see cref="T:Cosmo.Data.DataObjectBase`1"/> class.
            </summary>
        </member>
        <member name="F:Cosmo.Data.SerializationMode.Xml">
            <summary>
            Serialize using the XmlSerializer.
            </summary>
        </member>
        <member name="F:Cosmo.Data.SerializationMode.Binary">
            <summary>
            Serialize using the BinaryFormatter.
            </summary>
        </member>
        <member name="T:Cosmo.Data.SerializationHelper">
            <summary>
            Class that makes serialization much easier and safer.
            </summary>
        </member>
        <member name="M:Cosmo.Data.SerializationHelper.GetString(System.Runtime.Serialization.SerializationInfo,System.String,System.String)">
            <summary>
            Retrieves a string from a SerializationInfo object.
            </summary>
            <param name="info">SerializationInfo object.</param>
            <param name="name">Name of the value to retrieve.</param>
            <param name="defaultValue">Default value when value does not exist.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:Cosmo.Data.SerializationHelper.GetInt(System.Runtime.Serialization.SerializationInfo,System.String,System.Int32)">
            <summary>
            Retrieves an integer from a SerializationInfo object.
            </summary>
            <param name="info">SerializationInfo object</param>
            <param name="name">Name of the value to retrieve.</param>
            <param name="defaultValue">Default value when value does not exist.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:Cosmo.Data.SerializationHelper.GetBool(System.Runtime.Serialization.SerializationInfo,System.String,System.Boolean)">
            <summary>
            Retrieves a boolean from a SerializationInfo object.
            </summary>
            <param name="info">SerializationInfo object.</param>
            <param name="name">Name of the value to retrieve.</param>
            <param name="defaultValue">Default value when value does not exist.</param>
            <returns>Boolean value.</returns>
        </member>
        <member name="M:Cosmo.Data.SerializationHelper.GetObject``1(System.Runtime.Serialization.SerializationInfo,System.String,``0)">
            <summary>
            Retrieves an object from a SerializationInfo object.
            </summary>
            <typeparam name="T">Type of the value to read from the serialization information.</typeparam>
            <param name="info">SerializationInfo object.</param>
            <param name="name">Name of the value to retrieve.</param>
            <param name="defaultValue">Default value when value does not exist.</param>
            <returns>Object value.</returns>
        </member>
        <member name="M:Cosmo.Data.SerializationHelper.GetObject(System.Runtime.Serialization.SerializationInfo,System.String,System.Type,System.Object)">
            <summary>
            Retrieves an object from a SerializationInfo object.
            </summary>
            <param name="info">SerializationInfo object.</param>
            <param name="name">Name of the value to retrieve.</param>
            <param name="type">Type of the object to retrieve.</param>
            <param name="defaultValue">Default value when value does not exist.</param>
            <returns>Object value.</returns>
        </member>
        <member name="T:Cosmo.Data.TypeHelper">
            <summary>
            <see cref="T:System.Type"/> helper class.
            </summary>
        </member>
        <member name="M:Cosmo.Data.TypeHelper.FormatType(System.String,System.String)">
            <summary>
            Formats a type in the official type description like [typename], [assemblyname].
            </summary>
            <param name="assembly">Assembly.</param>
            <param name="type">Type.</param>
            <returns>Type name like [typename], [assemblyname].</returns>
        </member>
        <member name="M:Cosmo.Data.TypeHelper.FormatInnerTypes(System.String[])">
            <summary>
            Formats multiple inner types into one string.
            </summary>
            <returns>String representing a combination of all inner types.</returns>
        </member>
        <member name="T:Cosmo.Data.Validation.CosmoValidationException">
            <summary>
            Implementa la excepción que se lanza cuando una validación no cumple con los requisitos establecidos.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Validation.CosmoValidationException.#ctor">
            <summary>
            Devuelve una instancia de CosmoValidationException.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Validation.CosmoValidationException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de CosmoValidationException.
            </summary>
            <param name="message">Descripción del error.</param>
        </member>
        <member name="P:Cosmo.Data.Validation.CosmoValidationException.Message">
            <summary>
            Devuelve el mensaje descriptivo del error.
            </summary>
        </member>
        <member name="T:Cosmo.Data.Validation.ValidationRuleBase">
            <summary>
            Implementa una regla de validación básica. Sirve para implementar reglas de validación específicas.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Validation.ValidationRuleBase.CheckRule(System.String)">
            <summary>
            Chequea la regla a partir del valor proporcionado.
            </summary>
            <param name="value">Valor a validar obtenido del formulario.</param>
            <returns><c>true</c> si el valor es válido o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.ValidationRuleBase.GetValiadtionRulesScript(System.String)">
            <summary>
            Devuelve una cadena de configuración de la regla para un script que use jQuery Validation..
            </summary>
        </member>
        <member name="M:Cosmo.Data.Validation.ValidationRuleBase.GetValiadtionMessagesScript(System.String)">
            <summary>
            Devuelve una cadena de configuración los mensajes a mostrar para un script que use jQuery Validation..
            </summary>
        </member>
        <member name="P:Cosmo.Data.Validation.ValidationRuleBase.Required">
            <summary>
            Indica si el campo es obligatorio.
            </summary>
        </member>
        <member name="T:Cosmo.Data.Validation.Validator">
            <summary>
            Implementa una clase para la validación de datos proporcionados en un formulario web.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.#ctor">
            <summary>
            Devuelve una instancia de Validator.
            </summary>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.#ctor(System.Boolean)">
            <summary>
            Devuelve una instancia de Validator.
            </summary>
            <param name="exceptionOnValidationError">Indica si se debe lanzar una excepción cuando falle una validación.</param>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.AddError(System.String)">
            <summary>
            Permite agregar un error de forma manual para validaciones manuales.
            </summary>
            <param name="message">Mensaje de error.</param>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.StringValidator(System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Validación de cadenas de texto.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <param name="lengthMin">Longitud mínima.</param>
            <param name="lengthMax">Longitud máxima.</param>
            <returns>Una cadena de texto que contiene el valor validado o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.StringValidator(System.String,System.String,System.Boolean)">
            <summary>
            Validación de cadenas de texto.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <returns>Una cadena de texto que contiene el valor validado o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.IntegerValidator(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            Validación de cadenas de texto.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <param name="min">Valor mínimo.</param>
            <param name="max">Valor máximo.</param>
            <param name="defaultValue">Valor por defecto a devolver en caso de fallar la validación.</param>
            <returns>Una cadena de texto que contiene el valor validado o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.IntegerValidator(System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Validación de cadenas de texto.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <param name="min">Valor mínimo.</param>
            <param name="max">Valor máximo.</param>
            <returns>Una cadena de texto que contiene el valor validado o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.IntegerValidator(System.String,System.String,System.Boolean)">
            <summary>
            Validación de cadenas de texto.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <returns>Una cadena de texto que contiene el valor validado o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.CurrencyValidator(System.String,System.String,System.Boolean,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Validación de valors monetarios.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <param name="min">Valor mínimo.</param>
            <param name="max">Valor máximo.</param>
            <param name="defaultValue">Valor por defecto a devolver en caso de fallar la validación.</param>
            <returns>Un valor <see cref="T:System.Decimal"/> que contiene el valor validado o el valor por defecto en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.CurrencyValidator(System.String,System.String,System.Boolean)">
            <summary>
            Validación de valors monetarios.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <returns>Un valor <see cref="T:System.Decimal"/> que contiene el valor validado o el valor por defecto en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.PasswordValidator(System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Validación de contraseñas.
            </summary>
            <param name="value">Contraseña.</param>
            <param name="value2">Verificación de la contraseña.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <param name="lengthMin">Longitud mínima.</param>
            <param name="lengthMax">Longitud máxima.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.MailValidator(System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Validación de cuentas de correo electrónico.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <param name="lengthMin">Longitud mínima.</param>
            <param name="lengthMax">Longitud máxima.</param>
            <returns>Una cadena de texto que contiene la cuenta de correo o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.MailValidator(System.String,System.String,System.Boolean)">
            <summary>
            Validación de cuentas de correo electrónico.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <returns>Una cadena de texto que contiene la cuenta de correo o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.UrlValidator(System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Validación de direcciones URL.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <param name="lengthMin">Longitud mínima.</param>
            <param name="lengthMax">Longitud máxima.</param>
            <returns>Una cadena de texto que contiene la URL o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Data.Validation.Validator.UrlValidator(System.String,System.String,System.Boolean)">
            <summary>
            Validación de direcciones URL.
            </summary>
            <param name="value">Valor a validar.</param>
            <param name="title">Título del campo.</param>
            <param name="required">Indica si es un campo requerido.</param>
            <returns>Una cadena de texto que contiene la URL o una cadena de texto vacía en cualquier otro caso.</returns>
        </member>
        <member name="P:Cosmo.Data.Validation.Validator.LaunchExceptionOnValidationError">
            <summary>
            Indica si se debe lanzar una excepción cuando falle una validación.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Validation.Validator.IsValid">
            <summary>
            Indica si los campos validados son correctos o no.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Validation.Validator.ErrorMessage">
            <summary>
            Devuelve el mensaje de error.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Validation.Validator.ErrorXhtmlMessage">
            <summary>
            Devuelve el mensaje de error en formato XHTML.
            </summary>
        </member>
        <member name="P:Cosmo.Data.Validation.Validator.ErrorJSMessage">
            <summary>
            Devuelve el mensaje de error en formato strijng para usar en JavaScript.
            </summary>
        </member>
        <member name="T:Cosmo.Diagnostics.EventLog">
            <summary>
            Implemnta una clase para generar archivos de LOG en modo texto en la estación local.
            </summary>
        </member>
        <member name="M:Cosmo.Diagnostics.EventLog.GenerateDefaultLogFileName(System.String,System.String,System.Boolean)">
            <summary>
            Devuelve un nombre válido de archivo LOG
            </summary>
            <param name="basepath">Ruta al directorio dónde se debe generar el archivo</param>
            <param name="BaseFileName">Nombre base del archivo</param>
            <param name="WithDate">Indica si se debe agregar la fecha al nombre de archivo</param>
            <returns>Una cadena que representa el nombre del archuivo</returns>
        </member>
        <member name="M:Cosmo.Diagnostics.EventLog.WriteToLog(System.String,System.String)">
            <summary>
            Pass in the fully qualified name of the log file you want to write to
            and the message to write
            </summary>
            <param name="LogPath"></param>
            <param name="Message"></param>
        </member>
        <member name="M:Cosmo.Diagnostics.EventLog.WriteToEventLog(System.String,System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            Writes a message to the application event log
            </summary>
            <param name="Source">Source is the source of the message ususally you will want this to be the application name</param>
            <param name="Message">message to be written</param>
            <param name="EntryType">the entry type to use to categorize the message like for exmaple error or information</param>
        </member>
        <member name="T:Cosmo.Diagnostics.ExceptionHelper">
            <summary>
            Exception helper class.
            </summary>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsError(System.Exception,System.String)">
            <summary>
            Traces an error message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="message">Message of the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsError(System.Exception,System.String,System.Object[])">
            <summary>
            Traces an error message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="format">A format string that contains zero or more format items, which correspond to objects in the args array.</param>
            <param name="args">An object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsWarning(System.Exception,System.String)">
            <summary>
            Traces a warning message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="message">Message of the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsWarning(System.Exception,System.String,System.Object[])">
            <summary>
            Traces a warning message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="format">A format string that contains zero or more format items, which correspond to objects in the args array.</param>
            <param name="args">An object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsInformation(System.Exception,System.String)">
            <summary>
            Traces an information message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="message">Message of the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsInformation(System.Exception,System.String,System.Object[])">
            <summary>
            Traces an information message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="format">A format string that contains zero or more format items, which correspond to objects in the args array.</param>
            <param name="args">An object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsVerbose(System.Exception,System.String)">
            <summary>
            Traces a verbose message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="message">Message of the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceExceptionAsVerbose(System.Exception,System.String,System.Object[])">
            <summary>
            Traces a verbose message with exception details.
            </summary>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="format">A format string that contains zero or more format items, which correspond to objects in the args array.</param>
            <param name="args">An object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceException(System.Diagnostics.TraceLevel,System.Exception,System.String)">
            <summary>
            Traces a message with exception details.
            </summary>
            <param name="level"><see cref="T:System.Diagnostics.TraceLevel"/> to write.</param>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="message">Message of the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.TraceException(System.Diagnostics.TraceLevel,System.Exception,System.String,System.Object[])">
            <summary>
            Traces a message with exception details.
            </summary>
            <param name="level"><see cref="T:System.Diagnostics.TraceLevel"/> to write.</param>
            <param name="ex"><see cref="T:System.Exception"/> that contains the additional information.</param>
            <param name="format">A format string that contains zero or more format items, which correspond to objects in the args array.</param>
            <param name="args">An object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.ExceptionHelper.GetInnerException(System.Exception)">
            <summary>
            Gets the inner exception.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Cosmo.Diagnostics.TraceHelper">
            <summary>
            Trace helper class.
            </summary>
        </member>
        <member name="M:Cosmo.Diagnostics.TraceHelper.ConvertTraceEventTypeToTraceLevel(System.Diagnostics.TraceEventType)">
            <summary>
            Converts a <see cref="T:System.Diagnostics.TraceEventType"/> to a <see cref="T:System.Diagnostics.TraceLevel"/>.
            </summary>
            <param name="eventType"><see cref="T:System.Diagnostics.TraceEventType"/> to convert.</param>
            <returns><see cref="T:System.Diagnostics.TraceLevel"/> that represents a <see cref="T:System.Diagnostics.TraceEventType"/>.</returns>
        </member>
        <member name="M:Cosmo.Diagnostics.TraceHelper.TraceErrorWithDetails(System.String,System.String)">
            <summary>
            Traces an error message with details.
            </summary>
            <param name="message">Message of the trace.</param>
            <param name="details">Additional details which will be listed later in the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.TraceHelper.TraceWarningWithDetails(System.String,System.String)">
            <summary>
            Traces a warning message with details.
            </summary>
            <param name="message">Message of the trace.</param>
            <param name="details">Additional details which will be listed later in the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.TraceHelper.TraceInformationWithDetails(System.String,System.String)">
            <summary>
            Traces an information message with details.
            </summary>
            <param name="message">Message of the trace.</param>
            <param name="details">Additional details which will be listed later in the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.TraceHelper.TraceVerboseWithDetails(System.String,System.String)">
            <summary>
            Traces a verbose message with details.
            </summary>
            <param name="message">Message of the trace.</param>
            <param name="details">Additional details which will be listed later in the trace.</param>
        </member>
        <member name="M:Cosmo.Diagnostics.TraceHelper.TraceWithDetails(System.Diagnostics.TraceLevel,System.String,System.String)">
            <summary>
            Traces a message with details.
            </summary>
            <param name="level"><see cref="T:System.Diagnostics.TraceLevel"/> to write.</param>
            <param name="message">Message of the trace.</param>
            <param name="details">Additional details which will be listed later in the trace.</param>
        </member>
        <member name="T:Cosmo.Drawing.JpegBaseEncoder">
            <summary>
            Clase base que engloba el codificador JPEG.
            </summary>
        </member>
        <member name="M:Cosmo.Drawing.JpegBaseEncoder.EncodeImageBufferToJpg(System.Byte[0:,0:,0:],System.Drawing.Point,System.Drawing.Point,System.IO.BinaryWriter,System.Single,Cosmo.Drawing.DrawingUtils.IProgress,Cosmo.Drawing.DrawingUtils.ICurrentOperation)">
            <summary>
            Encodes a provided ImageBuffer[,,] to a JPG Image.
            </summary>
            <param name="ImageBuffer">The ImageBuffer containing the pixel data.</param>
            <param name="originalDimension">Dimension of the original image. This value is written to the image header.</param>
            <param name="actualDimension">Dimension on which the Encoder works. As the Encoder works in 8*8 blocks, if the image size is not divisible by 8 the remaining blocks are set to '0' (in this implementation)</param>
            <param name="OutputStream">Stream to which the JPEG data is to be written.</param>
            <param name="Quantizer_Quality">Required quantizer jpegQuality; Default: 50 , Lower value higher jpegQuality.</param>
            <param name="progress">Interface for updating Progress.</param>
            <param name="currentOperation">Interface for updating CurrentOperation.</param>
        </member>
        <member name="M:Cosmo.Drawing.JpegBaseEncoder.EncodeImageToJpg(System.Drawing.Image,System.IO.BinaryWriter,System.Single,Cosmo.Drawing.DrawingUtils.IProgress,Cosmo.Drawing.DrawingUtils.ICurrentOperation)">
            <summary>
            Encodes a provided Image to a JPG Image.
            </summary>
            <param name="ImageToBeEncoded">The Image to be encoded.</param>
            <param name="OutputStream">Stream to which the JPEG data is to be written.</param>
            <param name="Quantizer_Quality">Required quantizer jpegQuality; Default: 50 , Lower value higher jpegQuality.</param>
            <param name="progress">Interface for updating Progress.</param>
            <param name="currentOperation">Interface for updating CurrentOperation.</param>
        </member>
        <member name="P:Cosmo.Drawing.JpegBaseEncoder.LuminanceTable">
            <summary>
            A 64 byte array which corresponds to a JPEG Luminance Quantization table.
            </summary>
        </member>
        <member name="P:Cosmo.Drawing.JpegBaseEncoder.ChromianceTable">
            <summary>
            A 64 byte array which corresponds to a JPEG Chromiance Quantization table.
            </summary>
        </member>
        <member name="T:Cosmo.Drawing.Imaging">
            <summary>
            Generates Y, Cb, Cr, R, G and B values from given RGB_Buffer
            </summary>
        </member>
        <member name="M:Cosmo.Drawing.Imaging.GetChannelData(System.Byte[0:,0:,0:],System.Boolean,System.Int32,System.Int32,Cosmo.Drawing.Imaging.ChannelType,Cosmo.Drawing.DrawingUtils.IProgress,Cosmo.Drawing.DrawingUtils.ICurrentOperation)">
            <summary>
            Generates Y, Cb, Cr, R, G and B values from given RGB_Buffer
            </summary>
            <param name="RGB_Buffer">The input RGB_Buffer.</param>
            <param name="drawInGrayscale">Draw in grayscale.</param>
            <param name="width">Width of the image.</param>
            <param name="height">Height of the image.</param>
            <param name="channel">Enum specifying the channel type required.</param>
            <param name="progress">Interface for updating progress.</param>
            <param name="operation">Interface for updating current operation.</param>
            <returns>3D array of the specified channel type.</returns>
        </member>
        <member name="T:Cosmo.Drawing.Imaging.ChannelType">
            <summary>
            Defines the different possible channel types.
            </summary>
        </member>
        <member name="T:Cosmo.Drawing.DrawingInteropGdi">
            <summary>
            Clase que encapsula las funcionalidades de la API GDI de Windows.
            </summary>
        </member>
        <member name="M:Cosmo.Drawing.DrawingInteropGdi.CreateCompatibleDC(System.IntPtr)">
            <summary>
            The CreateCompatibleDC function creates a memory device context (DC) compatible with the specified device. 
            </summary>
            <param name="hdc">[in] Handle to an existing DC. If this handle is NULL, the function creates a memory DC compatible with the application's current screen. </param>
            <returns>
            If the function succeeds, the return value is the handle to a memory DC.
            If the function fails, the return value is NULL. 
            </returns>
        </member>
        <member name="M:Cosmo.Drawing.DrawingInteropGdi.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            The SelectObject function selects an object into the specified device context (DC). 
            The new object replaces the previous object of the same type. 
            </summary>
            <param name="hdc">[in] Handle to the DC.</param>
            <param name="hgdiobj">[in] Handle to the object to be selected. The specified object must have been created by using one of the following functions. </param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Drawing.DrawingInteropGdi.SetStretchBltMode(System.IntPtr,System.Int32)">
            <summary>
            The SetStretchBltMode function sets the bitmap stretching mode in the specified device context. 
            </summary>
            <param name="hdc">[in] Handle to the device context. </param>
            <param name="iStretchMode">[in] Specifies the stretching mode. This parameter can be one of the values from StretchBltModes enum.</param>
            <returns>
            If the function succeeds, the return value is the previous stretching mode.
            If the function fails, the return value is zero. 
            </returns>
        </member>
        <member name="M:Cosmo.Drawing.DrawingInteropGdi.GetObject(System.IntPtr,System.Int32,Cosmo.Drawing.DrawingInteropGdi.BITMAP@)">
            <summary>
            The GetObject function retrieves information for the specified graphics object. 
            </summary>
            <param name="hgdiobj">[in] Handle to the graphics object of interest. This can be a handle to one of the following: a logical bitmap, a brush, a font, a palette, a pen, or a device independent bitmap created by calling the CreateDIBSection function. </param>
            <param name="cbBuffer">[in] Specifies the number of bytes of information to be written to the buffer. </param>
            <param name="lpvObject">[out] Pointer to a buffer that receives the information about the specified graphics object. </param>
            <returns>
            If the function succeeds, and lpvObject is a valid pointer, the return value is the number of bytes stored into the buffer.
            If the function succeeds, and lpvObject is NULL, the return value is the number of bytes required to hold the information the function would store into the buffer.
            If the function fails, the return value is zero. 
            </returns>
        </member>
        <member name="M:Cosmo.Drawing.DrawingInteropGdi.StretchBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations)">
            <summary>
            The StretchBlt function copies a bitmap from a source rectangle into a destination 
            rectangle, stretching or compressing the bitmap to fit the dimensions of the destination 
            rectangle, if necessary. The system stretches or compresses the bitmap according to 
            the stretching mode currently set in the destination device context. 
            </summary>
            <param name="hdcDest">[in] Handle to the destination device context. </param>
            <param name="nXOriginDest">[in] Specifies the x-coordinate, in logical units, of the upper-left corner of the destination rectangle. </param>
            <param name="nYOriginDest">[in] Specifies the y-coordinate, in logical units, of the upper-left corner of the destination rectangle. </param>
            <param name="nWidthDest">[in] Specifies the maxWidth, in logical units, of the destination rectangle. </param>
            <param name="nHeightDest">[in] Specifies the maxHeight, in logical units, of the destination rectangle. </param>
            <param name="hdcSrc">[in] Handle to the source device context. </param>
            <param name="nXOriginSrc">[in] Specifies the x-coordinate, in logical units, of the upper-left corner of the source rectangle. </param>
            <param name="nYOriginSrc">[in] Specifies the y-coordinate, in logical units, of the upper-left corner of the source rectangle. </param>
            <param name="nWidthSrc">[in] Specifies the maxWidth, in logical units, of the source rectangle. </param>
            <param name="nHeightSrc">[in] Specifies the maxHeight, in logical units, of the source rectangle. </param>
            <param name="dwRop">[in] Specifies the raster operation to be performed. Raster operation codes define how the system combines colors in output operations that involve a brush, a source bitmap, and a destination bitmap. </param>
            <returns>
            If the function succeeds, the return value is nonzero. 
            If the function fails, the return value is zero. 
            </returns>
        </member>
        <member name="M:Cosmo.Drawing.DrawingInteropGdi.CreateCompatibleBitmap(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            The CreateCompatibleBitmap function creates a bitmap compatible with the device that is associated with the specified device context. 
            </summary>
            <param name="hdc">[in] Handle to a device context. </param>
            <param name="nWidth">[in] Specifies the bitmap maxWidth, in pixels. </param>
            <param name="nHeight">[in] Specifies the bitmap maxHeight, in pixels. </param>
            <returns>
            If the function succeeds, the return value is a handle to the compatible bitmap (DDB).
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:Cosmo.Drawing.DrawingInteropGdi.GetDIBits(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32,System.Byte[],Cosmo.Drawing.DrawingInteropGdi.BITMAPINFOHEADER@,System.UInt32)">
            <summary>
            The GetDIBits function retrieves the bits of the specified compatible bitmap 
            and copies them into a buffer as a DIB using the specified format. 
            </summary>
            <param name="hdc">[in] Handle to the device context. </param>
            <param name="hbmp">[in] Handle to the bitmap. This must be a compatible bitmap (DDB). </param>
            <param name="uStartScan">[in] Specifies the first scan line to retrieve.</param>
            <param name="cScanLines">[in] Specifies the number of scan lines to retrieve.</param>
            <param name="lpvBits">[out] Pointer to a buffer to receive the bitmap data. If this parameter is NULL, the function passes the dimensions and format of the bitmap to the BITMAPINFOHEADER structure pointed to by the lpbi parameter.</param>
            <param name="lpbmi">[in/out] Pointer to a BITMAPINFOHEADER structure that specifies the desired format for the DIB data. </param>
            <param name="uUsage">[in] Specifies the format of the bmiColors member of the BITMAPINFOHEADER structure.</param>
            <returns>If the lpvBits parameter is non-NULL and the function succeeds, the return value is the number of scan lines copied from the bitmap.</returns>
        </member>
        <member name="M:Cosmo.Drawing.DrawingInteropGdi.SetDIBits(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32,System.Byte[],Cosmo.Drawing.DrawingInteropGdi.BITMAPINFOHEADER@,System.UInt32)">
            <summary>
            The SetDIBits function sets the pixels in a compatible bitmap (DDB) 
            using the color data found in the specified DIB . 
            </summary>
            <param name="hdc">[in] Handle to a device context. </param>
            <param name="hbmp">[in] Handle to the compatible bitmap (DDB) that is to be altered using the color data from the specified DIB.</param>
            <param name="uStartScan">[in] Specifies the starting scan line for the device-independent color data in the array pointed to by the lpvBits parameter. </param>
            <param name="cScanLines">[in] Specifies the number of scan lines found in the array containing device-independent color data. </param>
            <param name="lpvBits">[in] Pointer to the DIB color data, stored as an array of bytes. The format of the bitmap values depends on the biBitCount member of the BITMAPINFO structure pointed to by the lpbmi parameter. </param>
            <param name="lpbmi">[in] Pointer to a BITMAPINFOHEADER structure that contains information about the DIB. </param>
            <param name="fuColorUse">[in] Specifies whether the bmiColors member of the BITMAPINFO structure was provided and, if so, whether bmiColors contains explicit red, green, blue (RGB) values or palette indexes.</param>
            <returns>If the function succeeds, the return value is the number of scan lines copied.</returns>
        </member>
        <member name="M:Cosmo.Drawing.DrawingInteropGdi.GetDC(System.IntPtr)">
            <summary>
            The GetDC function retrieves a handle to a display device context (DC) 
            for the client area of a specified window or for the entire screen.        
            </summary>
            <param name="hWnd">[in] Handle to the window whose DC is to be retrieved. If this value is NULL, GetDC retrieves the DC for the entire screen. </param>
            <returns>If the function succeeds, the return value is a handle to the DC for the specified window's client area. I
            If the function fails, the return value is NULL. 
            </returns>  
        </member>
        <member name="M:Cosmo.Drawing.DrawingInteropGdi.GetClientRect(System.IntPtr,Cosmo.Drawing.DrawingInteropGdi.RECT@)">
            <summary>
            The GetClientRect function retrieves the coordinates of a window's client area.
            The client coordinates specify the upper-left and lower-right corners of the client area. 
            </summary>
            <param name="hWnd">[in] Handle to the window whose client coordinates are to be retrieved.</param>
            <param name="lpRect">[out] Pointer to a RECT structure that receives the client coordinates.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Cosmo.Drawing.DrawingInteropGdi.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations)">
            <summary>
               Performs a bit-block transfer of the color data corresponding to a
               rectangle of pixels from the specified source device context into
               a destination device context.
            </summary>
            <param name="hdc">Handle to the destination device context.</param>
            <param name="nXDest">The leftmost x-coordinate of the destination rectangle (in pixels).</param>
            <param name="nYDest">The topmost y-coordinate of the destination rectangle (in pixels).</param>
            <param name="nWidth">The maxWidth of the source and destination rectangles (in pixels).</param>
            <param name="nHeight">The maxHeight of the source and the destination rectangles (in pixels).</param>
            <param name="hdcSrc">Handle to the source device context.</param>
            <param name="nXSrc">The leftmost x-coordinate of the source rectangle (in pixels).</param>
            <param name="nYSrc">The topmost y-coordinate of the source rectangle (in pixels).</param>
            <param name="dwRop">A raster-operation code.</param>
            <returns>
               <c>true</c> if the operation succeeded, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Cosmo.Drawing.DrawingInteropGdi.DeleteObject(System.IntPtr)">
            <summary>
            The DeleteObject function deletes a logical pen, brush, font, bitmap, region, or palette, 
            freeing all system resources associated with the object. After the object is deleted, 
            the specified handle is no longer valid. 
            </summary>
            <param name="hObject">[in] Handle to a logical pen, brush, font, bitmap, region, or palette.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Cosmo.Drawing.DrawingInteropGdi.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            The ReleaseDC function releases a device context (DC), freeing it for use by other applications. 
            The effect of the ReleaseDC function depends on the type of DC.
            </summary>
            <param name="hWnd">[in] Handle to the window whose DC is to be released. </param>
            <param name="hDC">[in] Handle to the DC to be released. </param>
            <returns>
            The return value indicates whether the DC was released. 
            If the DC was released, the return value is 1.
            If the DC was not released, the return value is zero.
            </returns>
        </member>
        <member name="M:Cosmo.Drawing.DrawingInteropGdi.SetPixel(System.IntPtr,System.Int32,System.Int32,System.UInt32)">
            <summary>
            The SetPixel function sets the pixel at the specified coordinates to the specified color. 
            </summary>
            <param name="hdc">[in] Handle to the device context. </param>
            <param name="X">[in] Specifies the x-coordinate, in logical units, of the point to be set. </param>
            <param name="Y">[in] Specifies the y-coordinate, in logical units, of the point to be set. </param>
            <param name="crColor">[in] Specifies the color to be used to paint the point.</param>
            <returns>If the function succeeds, the return value is the RGB value that the function sets the pixel to. 
            This value may differ from the color specified by crColor; that occurs when an exact match for the 
            specified color cannot be found.</returns>
        </member>
        <member name="T:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations">
            <summary>
                Specifies a raster-operation code. These codes define how the color data for the
                source rectangle is to be combined with the color data for the destination
                rectangle to achieve the final color.
            </summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.SRCCOPY">
            <summary>dest = source</summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.SRCPAINT">
            <summary>dest = source OR dest</summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.SRCAND">
            <summary>dest = source AND dest</summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.SRCINVERT">
            <summary>dest = source XOR dest</summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.SRCERASE">
            <summary>dest = source AND (NOT dest)</summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.NOTSRCCOPY">
            <summary>dest = (NOT source)</summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.NOTSRCERASE">
            <summary>dest = (NOT src) AND (NOT dest)</summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.MERGECOPY">
            <summary>dest = (source AND pattern)</summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.MERGEPAINT">
            <summary>dest = (NOT source) OR dest</summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.PATCOPY">
            <summary>dest = pattern</summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.PATPAINT">
            <summary>dest = DPSnoo</summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.PATINVERT">
            <summary>dest = pattern XOR dest</summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.DSTINVERT">
            <summary>dest = (NOT dest)</summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.BLACKNESS">
            <summary>dest = BLACK</summary>
        </member>
        <member name="F:Cosmo.Drawing.DrawingInteropGdi.TernaryRasterOperations.WHITENESS">
            <summary>dest = WHITE</summary>
        </member>
        <member name="T:Cosmo.Drawing.Picture">
            <summary>
            Representa una imagen y implementa las operaciones más habituales.
            </summary>
        </member>
        <member name="M:Cosmo.Drawing.Picture.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Drawing.Picture"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Drawing.Picture.#ctor(System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Drawing.Picture"/>.
            </summary>
            <param name="filename">Nombre (y ruta) del archivo de imagen.</param>
        </member>
        <member name="M:Cosmo.Drawing.Picture.CreateThumbnail(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Genera una imagen miniatura de la imagen.
            </summary>
            <param name="maxWidth">Anchura máxima de la imagen miniatura.</param>
            <param name="maxHeight">Alura máxima de la imagen miniatura.</param>
            <param name="save">Indica si se debe guardar la imagen resultante a un archivo.</param>
            <returns>Una instancia de <see cref="T:System.Drawing.Bitmap"/> que contiene la imagen miniatura.</returns>
        </member>
        <member name="M:Cosmo.Drawing.Picture.Transform(Cosmo.Drawing.Picture.PictureFormats,System.String,System.Single)">
            <summary>
            Transforma la imagen a un formato distinto. 
            </summary>
            <param name="format">Formato de destino.</param>
            <param name="filename">Archivo de destino.</param>
            <param name="jpegQuality">Calidad de la imagen para el formato de destino JPEG.</param>
        </member>
        <member name="M:Cosmo.Drawing.Picture.Transform(Cosmo.Drawing.Picture.PictureFormats,System.String)">
            <summary>
            Transforma la imagen a un formato distinto. 
            </summary>
            <param name="format">Formato de destino.</param>
            <param name="filename">Archivo de destino.</param>
        </member>
        <member name="M:Cosmo.Drawing.Picture.ToBitmap">
            <summary>
            Convierte la imagen en una instancia de <see cref="T:System.Drawing.Bitmap"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Drawing.Picture.ToImage">
            <summary>
            Convierte la imagen en una instancia de <see cref="T:System.Drawing.Image"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Drawing.Picture.CreateThumbnail(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Genera una imagen miniatura a partir de una imagen original
            </summary>
            <param name="filename">Nombre del archivo que contiene la imagen</param>
            <param name="maxWidth">Ancho máximo de la imagen resultante</param>
            <param name="maxHeight">Altura máxima de la imagen resultante</param>
            <param name="save">Indica si se debe guardar la imagen resultante</param>
            <returns>Una instancia Bitmap que contiene la imagen miniatura</returns>
            <remarks>
            Al guardar la imagen miniatura se renombra añadiendo el prefijo "th_" delante del nombre 
            y se mantiene la misma ruta.
            </remarks>
        </member>
        <member name="T:Cosmo.Drawing.Picture.PictureFormats">
            <summary>
            Enumera los tipos de imagen soportados por la clase <see cref="T:Cosmo.Drawing.Picture"/>.
            </summary>
        </member>
        <member name="F:Cosmo.Drawing.Picture.PictureFormats.JPEG">
            <summary>Formato JPEG.</summary>
        </member>
        <member name="F:Cosmo.Drawing.Picture.PictureFormats.GIF">
            <summary>Formato GIF.</summary>
        </member>
        <member name="F:Cosmo.Drawing.Picture.PictureFormats.PNG">
            <summary>Formato PNG.</summary>
        </member>
        <member name="T:Cosmo.Drawing.PrintDocuments">
            <summary>
            Implementa un documento de impresión formado por uno o más documerntos de impresión.
            </summary>
        </member>
        <member name="M:Cosmo.Drawing.PrintDocuments.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Drawing.PrintDocuments"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Drawing.PrintDocuments.#ctor(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintDocument)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Drawing.PrintDocuments"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Drawing.PrintDocuments.#ctor(System.Drawing.Printing.PrintDocument[])">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Drawing.PrintDocuments"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Drawing.PrintDocuments.Add(System.Drawing.Printing.PrintDocument)">
            <summary>
            Anexa un documento de impresión al documento maestro.
            </summary>
            <param name="document">Una instancia de <see cref="T:System.Drawing.Printing.PrintDocument"/>.</param>
        </member>
        <member name="M:Cosmo.Drawing.PrintDocuments.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
            <summary>
            Evento que se llama al inicio de la impresión.
            </summary>
        </member>
        <member name="M:Cosmo.Drawing.PrintDocuments.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
            <summary>
            Evento que se llama durante la consulta de la configuración de impresora.
            </summary>
        </member>
        <member name="M:Cosmo.Drawing.PrintDocuments.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Evento que se llama al imprimir la página.
            </summary>
        </member>
        <member name="T:Cosmo.Drawing.JpegTables">
            <summary>
            Clase que permite la gestión de las tablas de conversión para imágenes JPEG.
            </summary>
        </member>
        <member name="T:Cosmo.Drawing.DrawingUtils">
            <summary>
            Utilidades para las classes del namespace Cosmo.Drawing.
            http://www.codeproject.com/KB/graphics/SimpleJpeg.aspx
            </summary>
        </member>
        <member name="T:Cosmo.IO.FileReader">
            <summary>
            Implementa una classe con utilidades relacionadas con el sistema de archivos
            </summary>
        </member>
        <member name="M:Cosmo.IO.FileReader.LoadTextFileToByteArray(System.String)">
            <summary>
            Obtiene el contenido (texto) de un archivo.
            </summary>
            <param name="filename">Nombre y ruta del archivo.</param>
            <returns>El contenido (texto) del archivo.</returns>
        </member>
        <member name="M:Cosmo.IO.FileReader.LoadTextFileToString(System.String)">
            <summary>
            Obtiene el contenido (texto) de un archivo.
            </summary>
            <param name="filename">Nombre y ruta del archivo.</param>
            <returns>El contenido (texto) del archivo.</returns>
        </member>
        <member name="T:Cosmo.IO.PathInfo">
            <summary>
            Implementa una clase para el manejo de rutas físicas de archivos.
            </summary>
        </member>
        <member name="M:Cosmo.IO.PathInfo.Combine(System.String,System.String)">
            <summary>
            Compina dos fragmentos de archivo/ruta
            </summary>
            <returns>Los fragmentos combinados.</returns>
        </member>
        <member name="M:Cosmo.IO.PathInfo.Combine(System.String[])">
            <summary>
            Compina dos o más fragmentos de archivo/ruta
            </summary>
            <returns>Los fragmentos combinados.</returns>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxController">
            <summary>
            Controller for print processing to fax _printer.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
            <overloads></overloads>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
            <overloads></overloads>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
            <overloads></overloads>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
            <overloads></overloads>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxCoverPage">
            <summary>
            Contains all data to display on a fax coverpage.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxCoverPage.#ctor">
            <summary>
            Create a instance with empty data.
            For filling data, use <see cref="M:Cosmo.Net.Fax.FaxServer.FillDefaultInformations(Cosmo.Net.Fax.FaxInformations,Cosmo.Net.Fax.FaxCoverPage)"/> method.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxCoverPage.Fill(Cosmo.Net.Fax.NativeMethods.FAX_COVERPAGE_INFO)">
            <summary>
            Fill the members with a <see cref="T:Cosmo.Net.Fax.NativeMethods.FAX_COVERPAGE_INFO"/> structure.
            </summary>
            <param name="coverPage">The Windows structure contains data.</param>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxCoverPage.CreateCoverPageStructure">
            <summary>
            Create a Windows <see cref="T:Cosmo.Net.Fax.NativeMethods.FAX_COVERPAGE_INFO"/> structure for using with native functions.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.CoverPageName">
            <summary>
            Get or set the cover page name to use.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.RecipientCity">
            <summary>
            Get or set the recipient city to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.RecipientCompany">
            <summary>
            Get or set the recipient company to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.RecipientCountry">
            <summary>
            Get or set the recipient country to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.RecipientDepartment">
            <summary>
            Get or set the recipient department to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.RecipientHomePhone">
            <summary>
            Get or set the recipient home phone to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.RecipientName">
            <summary>
            Get or set the recipient name to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.RecipientNumber">
            <summary>
            Get or set the recipient fax number to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.RecipientOfficeLocation">
            <summary>
            Get or set the recipient office location to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.RecipientOfficePhone">
            <summary>
            Get or set the recipient office phone to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.RecipientState">
            <summary>
            Get or set the recipient state to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.RecipientStreetAddress">
            <summary>
            Get or set the recipient street address to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.RecipientTitle">
            <summary>
            Get or set the recipient title to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.RecipientPostalZipCode">
            <summary>
            Get or set the recipient postal ZIP code to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.SenderAddress">
            <summary>
            Get or set the sender address to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.SenderCompany">
            <summary>
            Get or set the sender company to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.SenderDepartment">
            <summary>
            Get or set the sender department to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.SenderFaxNumber">
            <summary>
            Get or set the sender fax number to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.SenderHomePhone">
            <summary>
            Get or set the sender home phone to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.SenderName">
            <summary>
            Get or set the sender name to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.SenderOfficeLocation">
            <summary>
            Get or set the sender office location to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.SenderOfficePhone">
            <summary>
            Get or set the sender office phone to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.SenderTitle">
            <summary>
            Get or set the sender title phone to put in the cover page.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxCoverPage.Subject">
            <summary>
            Get or set the subject to put in the cover page.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxException">
            <summary>
            Exception throwed in the Fax .NET library.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxException.#ctor(System.String)">
            <summary>
            Create an exception instance with a message.
            </summary>
            <param name="message">Message of the exception.</param>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxException.#ctor(System.String,System.Exception)">
            <summary>
            Create an exception instance containing an inner exception.
            </summary>
            <param name="message">Message of the exception.</param>
            <param name="innerException">Inner exception attached with the FaxException.</param>
            <remarks>Lot of exceptions are generate by a error in native function calls.
            The <paramref name="innerException"/> is often filled with a <see cref="T:System.ComponentModel.Win32Exception"/>.</remarks>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <overloads></overloads>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxInformations">
            <summary>
            Contains all data informations for sending a fax (recepient, sender,...etc) for sending a fax.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxInformations.#ctor">
            <summary>
            Create an instance of FaxInformations with empty values.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxInformations.RecipientName">
            <summary>
            Get or set the recipient name.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxInformations.RecipientNumber">
            <summary>
            Get or set the recipient number
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxInformations.DocumentName">
            <summary>
            Get or set the document name
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxInformations.SenderName">
            <summary>
            Get or set the sender name
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxInformations.SenderCompany">
            <summary>
            Get or set the sender department
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxInformations.SenderDepartment">
            <summary>
            Get or set the sender department
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxInformations.BillingCode">
            <summary>
            Get or set the billing code
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxInformations.CoverPage">
            <summary>
            Get or set the cover page.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxInformations.FaxScheduleAction">
            <summary>
            Represent the different schedules options for sending a fax document.
            </summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxInformations.FaxScheduleAction.Now">
            <summary>Send fax now.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxInformations.FaxScheduleAction.SpecificTime">
            <summary>Send fax at a specific time.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxInformations.FaxScheduleAction.DiscountPeriod">
            <summary>Send fax during a discount period.</summary>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxJob">
            <summary>
            Represent a fax job which is on a fax server.
            </summary>
            <remarks>Fax job are deleted after an fax was transmitted succesfully.</remarks>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxJob.#ctor(Cosmo.Net.Fax.FaxServer,Cosmo.Net.Fax.NativeMethods.FAX_JOB_ENTRY)">
            <summary>
            Create a fax job.
            </summary>
            <param name="server">Fax server attaching with the new job.</param>
            <param name="entry">Data that will fill members of FaxJob.</param>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxJob.Initialize(Cosmo.Net.Fax.NativeMethods.FAX_JOB_ENTRY)">
            <summary>
            Initialise members variables which can be change.
            </summary>
            <param name="entry"></param>
            <remarks>This method was created for update members which can change (For example the Status of a fax job).
            This method is called by the constructor and the Refresh method.</remarks>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxJob.Refresh(Cosmo.Net.Fax.NativeMethods.FAX_JOB_ENTRY)">
            <summary>
            Refresh some members of fax job.
            </summary>
            <param name="entry">Windows API structure of fax job entry.</param>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxJob.RecipientNumber">
            <summary>
            Get the recipient number.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxJob.RecipientName">
            <summary>
            Get the recipient name.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxJob.SenderCompany">
            <summary>
            Get the sender company.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxJob.SenderDepartment">
            <summary>
            Get the sender department.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxJob.SenderName">
            <summary>
            Get the sender name.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxJob.Type">
            <summary>
            Get the fax job type.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxJob.Size">
            <summary>
            Get the size of fax job.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxJob.PageCount">
            <summary>
            Get the page count of fax job.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxJob.Status">
            <summary>
            Get the current status of fax job.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxJob.BillingCode">
            <summary>
            Get the billing code of fax job.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxJob.UserName">
            <summary>
            Get the name of user who submitted the fax job
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxJob.Server">
            <summary>
            Get the server where the fax job is.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxJob.ID">
            <summary>
            Get the id job.
            </summary>
            <remarks>This ID must be use only on internal assembly.</remarks>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxJob.FaxJobType">
            <summary>
            Represents a fax type job.
            </summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxJobType.Unknown">
            <summary>The job type is unknown. This value indicates that the fax server has not yet scheduled the job.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxJobType.Send">
            <summary>The job is an outgoing fax transmission.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxJobType.Receive">
            <summary>The job is an incoming fax transmission.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxJobType.Routing">
            <summary>The fax server tried to route the fax transmission, but routing failed. The fax server will attempt to route the job again.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxJobType.FailReceive">
            <summary>The fax server did not route the fax because it did not receive the entire transmission. The fax server saves the partial transmission in a temporary directory.</summary>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxJob.FaxStatus">
            <summary>
            Represents the different status of a device fax.
            </summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.None">
            <summary>There is no status for device or fax job.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.Dialing">
            <summary>The device is dialing a fax number.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.Sending">
            <summary>The device is sending a fax document.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.Receiving">
            <summary>The device is receiving a fax document.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.Completed">
            <summary>The device completed sending or receiving a fax transmission.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.Handled">
            <summary>The fax service processed the outbound fax document; the fax service provider will transmit the document.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.Unvailable">
            <summary>The device is not available because it is in use by another application.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.Busy">
            <summary>The device encountered a busy signal.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.NoAnswer">
            <summary>The receiving device did not answer the call.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.BadAddress">
            <summary>The device dialed an invalid fax number.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.NoDialTone">
            <summary>The sending device cannot complete the call because it does not detect a dial tone.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.Disconnected">
            <summary>The fax call was disconnected by the sender or the caller.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.FatalError">
            <summary>The device has encountered a fatal protocol error.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.NotFaxCall">
            <summary>The device received a call that was a data call or a voice call.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.CallDelayed">
            <summary>
            The device delayed a fax call because the sending device received a busy signal multiple times.
            The device cannot retry the call because dialing restrictions exist.
            (Some countries/regions restrict the number of retry attempts when a number is busy.
            </summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.CallBlackListed">
            <summary>The device is initializing a call.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.Initializing">
            <summary>The device is initializing a call.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.OffLine">
            <summary>The device is offline and unavailable.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.Ringing">
            <summary>The device is ringing.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.Available">
            <summary>The device is available.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.Abording">
            <summary>The device is aborting a fax job.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.Routing">
            <summary>The device is routing a received fax document.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxStatus.Answered">
            <summary>The device answered a new call.</summary>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxJob.FaxQueueStatus">
            <summary>
            Represents an the differents queue status of a <see cref="T:Cosmo.Net.Fax.FaxJob"/>.
            </summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxQueueStatus.Pending">
            <summary>The fax job is in the queue and pending service.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxQueueStatus.InProgress">
            <summary>The fax job is in progress.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxQueueStatus.Deleting">
            <summary>The fax server is deleting the fax job.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxQueueStatus.Failed">
            <summary>The fax job failed.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxQueueStatus.Paused">
            <summary>The fax server paused the fax job.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxQueueStatus.NoLine">
            <summary>There is no line available to send the fax. The fax server will send the transmission when a line is available.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxQueueStatus.Retrying">
            <summary>The fax job failed. The fax server will attempt to retransmit the fax after a specified interval.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxJob.FaxQueueStatus.RetriesExceed">
            <summary>The fax server exceeded the maximum number of retransmission attempts allowed. The fax will not be sent.</summary>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxJobCollection">
            <summary>
            Represent a read-only collection of fax _jobs.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxJobCollection.Add(Cosmo.Net.Fax.FaxJob)">
            <summary>
            Add a <see cref="T:Cosmo.Net.Fax.FaxJob"/> object in the collection.
            </summary>
            <param name="faxJob"></param>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxJobCollection.GetJob(System.UInt32)">
            <summary>
            Find a fax job by ID and return it.
            </summary>
            <param name="id">ID of fax job to be find.</param>
            <returns>The fax job found or null in otherwise.</returns>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxJobCollection.Remove(System.UInt32)">
            <summary>
            Remove a fax job.
            </summary>
            <param name="id">ID of fax job to be delete.</param>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxJobCollection.GetJobsUser">
            <summary>
            Get all fax _jobs for the current user.
            </summary>
            <returns>All fax _jobs of the current user.</returns>
            <remarks>The current user is obtained by <see cref="P:System.Environment.UserDomainName"/> and <see cref="P:System.Environment.UserName"/></remarks>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxJobCollection.GetJobsUser(System.String)">
            <summary>
            Get all fax _jobs for an user.
            </summary>
            <param name="userName">Windows user name to be found (Domain\\UserName)</param>
            <returns>All fax _jobs of the <paramref name="userName"/></returns>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxPort">
            <summary>
            Describe the configuration of one fax port.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxPort.Refresh">
            <summary>
            Refresh fax server configuration
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxPort.DeviceId">
            <summary>
            Get the internal device ID.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxPort.Server">
            <summary>
            Get attached fax server.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxPort.DeviceName">
            <summary>
            Get the device name.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxPort.Capability">
            <summary>
            Get the capability of the fax port.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxPort.Rings">
            <summary>
            Get or set the number of times an incoming fax call should ring before the device answers the call. 
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxPort.Tsid">
            <summary>
            Get or set transmitting station identifier (TSID). This identifier is usually a telephone number.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxPort.Csid">
            <summary>
            Get or set called station identifier (CSID). This identifier is usually a telephone number.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxPort.Priority">
            <summary>
            Get or set the the relative order in which available fax devices send outgoing transmissions.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxPort.FaxPortCapability">
            <summary>
            Represents the capability of fax port.
            </summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxPort.FaxPortCapability.Receive">
            <summary>The device can receive faxes.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxPort.FaxPortCapability.Send">
            <summary>The device can send faxes.</summary>
        </member>
        <member name="F:Cosmo.Net.Fax.FaxPort.FaxPortCapability.Virtual">
            <summary>The device is a virtual fax device.</summary>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxPortCollection">
            <summary>
            Represent a read-only collection of fax port devices on a <see cref="T:Cosmo.Net.Fax.FaxServer"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxPortCollection.Remove(System.UInt32)">
            <summary>
            Remove a port device.
            </summary>
            <param name="id">ID of port device to be delete.</param>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxResources">
            <summary>
            Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
            </summary>
            <remarks>
            Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder à l'aide d'un outil, tel que ResGen ou Visual Studio.
            Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen avec l'option /str ou régénérez votre projet VS.
            </remarks>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxResources.ResourceManager">
            <summary>
              Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxResources.Culture">
            <summary>
              Remplace la propriété CurrentUICulture du thread actuel pour toutes
              les recherches de ressources à l'aide de cette classe de ressource fortement typée.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxResources.ExceptionBadOwnerServerForJob">
            <summary>
              Recherche une chaîne localisée semblable à This job is not owned by this server..
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxResources.ExceptionFaxServerDisposed">
            <summary>
              Recherche une chaîne localisée semblable à The fax server object has been disposed..
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxResources.ExceptionFaxServiceNotInstalled">
            <summary>
              Recherche une chaîne localisée semblable à Windows Fax Service is not installed on the current system..
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxResources.ExceptionNoRecipientNumber">
            <summary>
              Recherche une chaîne localisée semblable à There is no recipient number.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxResources.ExceptionPrinterIncorrect">
            <summary>
              Recherche une chaîne localisée semblable à The _printer name &apos;{0}&apos; is incorrect.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxResources.ExceptionPrintingFail">
            <summary>
              Recherche une chaîne localisée semblable à Unable to sending fax. Printing to device context has failed..
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxResources.ExceptionUnableConnect">
            <summary>
              Recherche une chaîne localisée semblable à Unable to connect fax server &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxResources.ExceptionUnableOpenRegistryKey">
            <summary>
              Recherche une chaîne localisée semblable à Unable to open the registry..
            </summary>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxServer">
            <summary>
            Represent a connection to a fax server.
            For sending a fax you should do :
            <list type="number">
            <item>Check if Windows Fax Service is installed (<see cref="P:Cosmo.Net.Fax.FaxServer.IsFaxServiceInstalled"/>)</item>
            <item>Connect to a fax server with the fax _printer (by example : <see cref="M:Cosmo.Net.Fax.FaxServer.#ctor(System.String,System.Drawing.Printing.PrinterSettings)"/>)</item>
            <item>Call <see cref="M:Cosmo.Net.Fax.FaxServer.GetDefaultInformations"/> for create and fill a <see cref="T:Cosmo.Net.Fax.FaxInformations"/> class, with default value from fax server.</item>
            <item>Use one construction of Send methode for sending a <see cref="T:System.Drawing.Printing.PrintDocument"/> or a file. (By exemple <see cref="M:Cosmo.Net.Fax.FaxServer.Send(Cosmo.Net.Fax.FaxInformations,System.Drawing.Printing.PrintDocument)"/></item>
            <item>Get the <see cref="T:Cosmo.Net.Fax.FaxJob"/> object for having informations about that.</item>
            <item>Call <see cref="M:Cosmo.Net.Fax.FaxServer.RefreshJobs"/> for updating the fax _jobs data informations.</item>
            <item>Dispose fax server object (<see cref="M:Cosmo.Net.Fax.FaxServer.Dispose"/>).</item>
            </list>
            
            <example>For sending a fax with a <see cref="T:System.Drawing.Printing.PrintDocument"/> :
            <code>
            
            //Connect to FaxServer
            using (FaxServer server = new FaxServer("Beer-Server", "Fax"))
            {
                FaxInformations info;
                FaxJob job;
                info = server.GetDefaultInformations();  //Get default data informations on Windows Fax Service
            
                info.RecipientName = "Gilles TOURREAU"; //Fill the recipient name
                info.RecipientNumber = "+33116641664";  //Fill the recipient number (1664 is good french beer !!!)
            
                job = server.Send(info, @"C:\French\Beer\1664.jpg");
                
                Console.WriteLine("Current status : " + job.Status);
            }
            
            //Here, all fax ressources are free !
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.#ctor(System.String,System.String)">
            <summary>
            Connect to the Fax Server.
            </summary>
            <param name="serverName">Name of fax server (You can put null or empty string for localhost).</param>
            <param name="printerName">Fax Printer name, where documents can be printed</param>
            <exception cref="T:System.ArgumentException">If the <paramref name="printerName"/> is incorrect.</exception>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.#ctor(System.String,System.Drawing.Printing.PrinterSettings)">
            <summary>
            Connect to the Fax Server.
            </summary>
            <param name="serverName">Name of fax server (You can put null or empty string for localhost).</param>
            <param name="printer">Fax Printer where documents can be printed</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="printer"/> is null.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="printer"/> is an invalid printer.</exception>
            <exception cref="T:Cosmo.Net.Fax.FaxException">If Windows Fax Service is not installed on the current system.</exception>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.Send(Cosmo.Net.Fax.FaxInformations)">
            <summary>
            Send only a cover page by fax.
            </summary>
            <param name="informations">Data informations of fax document.</param>
            <returns>The new fax job create</returns>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.Send(Cosmo.Net.Fax.FaxInformations,System.Drawing.Printing.PrintDocument)">
            <summary>
            Print a document to fax _printer and send this with a cover page.
            </summary>
            <param name="informations">Data informations of fax document</param>
            <param name="document">Document to be send</param>
            <returns>The new fax job create</returns>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.Send(Cosmo.Net.Fax.FaxInformations,System.String)">
            <summary>
            Send file by fax with cover page.
            </summary>
            <param name="informations">Data that contains the information necessary for the fax server to send the fax transmission.</param>
            <param name="fileName">Path of file name to be send</param>
            <returns>The fax job create</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="informations"/> is null.</exception>
            <exception cref="T:System.IO.FileNotFoundException">If <paramref name="fileName"/> could not be found.</exception>
            <remarks>The file name mus be printable with Windows.</remarks>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.Send(Cosmo.Net.Fax.FaxInformations[],System.String)">
            <summary>
            Send a file name for multiple recipients.
            </summary>
            <param name="informations">Array of multiple recipients</param>
            <param name="fileName">Name of file to be send.</param>
            <returns>Array of fax _jobs created</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="informations"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fileName"/> is null.</exception>
            <exception cref="T:System.IO.FileNotFoundException">If the file is not found.</exception>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.Send(Cosmo.Net.Fax.FaxInformations[],System.Drawing.Printing.PrintDocument)">
            <summary>
            Send a <see cref="T:System.Drawing.Printing.PrintDocument"/> for multiple recipients.
            </summary>
            <param name="informations">Array of multiple recipients</param>
            <param name="document">Document to be print.</param>
            <returns>Array of fax _jobs created</returns>
            <remarks><paramref name="document"/> will be print for each recipient in <paramref name="informations"/> array.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="informations"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="document"/> is null.</exception>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.GetDefaultInformations">
            <summary>
            Get default data informations configuring on the fax server.
            </summary>
            <returns>The default data informations configurating on the fax server.</returns>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.FillDefaultInformations(Cosmo.Net.Fax.FaxInformations)">
            <summary>
            Get default data informations on the fax server, and fill it on <paramref name="informations"/> parameters.
            </summary>
            <param name="informations">Informations which will be fill.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="informations"/> is null.</exception>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.FillDefaultInformations(Cosmo.Net.Fax.FaxCoverPage)">
            <summary>
            Get default cover page data informations on the fax server, and fill it on <paramref name="coverPage"/> parameters.
            </summary>
            <param name="coverPage">Cover page which will be fill.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="coverPage"/> is null.</exception>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.RefreshJobs">
            <summary>
            Refresh _jobs. This methode do automaticly :
            <list type="bullet">
            <item>Update status of existing _jobs</item>
            <item>Delete finished _jobs</item>
            <item>Add new _jobs</item>
            </list>
            </summary>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.Pause(Cosmo.Net.Fax.FaxJob)">
            <summary>
            Pause the <paramref name="job"/>. If the fax job is active, the fax service pauses the job when it returns to the queued state.
            </summary>
            <param name="job">Job to pause.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="job"/> parameter is null.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="job"/> is not on the <see cref="T:Cosmo.Net.Fax.FaxServer"/> instance.</exception>
            <example>
            <code>
            //Get the first job on the server
            FaxJob job = this.server.Jobs[0];
            
            //Pause it !
            this.server.Pause(job);
            
            //Going to bed for 1 second
            Thread.Sleep(1000);
            
            //Resume it !
            this.server.Resume(job);
            
            //Pause and restart it !
            this.server.Pause(job);
            this.server.Restart(job);
            
            //Pause and delete it !
            this.server.Pause(job);
            this.server.Delete(job);
            </code>
            </example>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.Resume(Cosmo.Net.Fax.FaxJob)">
            <summary>
            Resume the paused <paramref name="job"/>.
            </summary>
            <param name="job">Job to resume.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="job"/> parameter is null.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="job"/> is not on the <see cref="T:Cosmo.Net.Fax.FaxServer"/> instance.</exception>
            <example>
            See the example in <see cref="M:Cosmo.Net.Fax.FaxServer.Pause(Cosmo.Net.Fax.FaxJob)"/> method.
            </example>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.Delete(Cosmo.Net.Fax.FaxJob)">
            <summary>
            Cancel the specified <paramref name="job"/>. The job can be active or queued.
            </summary>
            <param name="job">Job to delete.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="job"/> parameter is null.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="job"/> is not on the <see cref="T:Cosmo.Net.Fax.FaxServer"/> instance.</exception>
            <example>
            See the example in <see cref="M:Cosmo.Net.Fax.FaxServer.Pause(Cosmo.Net.Fax.FaxJob)"/> method.
            </example>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.Restart(Cosmo.Net.Fax.FaxJob)">
            <summary>
            Restart the specified <paramref name="job"/>.
            </summary>
            <param name="job">Job to restart.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="job"/> parameter is null.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="job"/> is not on the <see cref="T:Cosmo.Net.Fax.FaxServer"/> instance.</exception>
            <example>
            See the example in <see cref="M:Cosmo.Net.Fax.FaxServer.Pause(Cosmo.Net.Fax.FaxJob)"/> method.
            </example>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.Dispose">
            <summary>
            Free the ressources using by fax server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.Finalize">
            <overloads></overloads>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.Dispose(System.Boolean)">
            <summary>
            Free the ressources using by fax server.
            </summary>
            <param name="managed">true, if managed ressources must be free.</param>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.TestConnection(System.String)">
            <summary>
            Test connection to a fax server.
            </summary>
            <param name="serverName">Server name to connect (null or empty for localhost)</param>
            <returns>true if connection is possible</returns>
            <exception cref="T:Cosmo.Net.Fax.FaxException">If Windows Fax Service is not installed on the current system.</exception>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.Connect(System.String)">
            <summary>
            Connect to a fax server.
            </summary>
            <param name="serverName">Server name to be connect.</param>
            <returns>The Windows handle of the Windows Fax Service. <see cref="F:System.IntPtr.Zero"/> if impossible.</returns>
            <remarks>
            BE CAREFUL : Free the handle ressource if the result is different of <see cref="F:System.IntPtr.Zero"/>.
            Use <see cref="M:Cosmo.Net.Fax.NativeMethods.FaxClose(System.IntPtr)"/> native method.
            </remarks>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.GetLocalHostName(System.String)">
            <summary>
            Return null if <paramref name="hostName"/> parameter is "localhost".
            </summary>
            <param name="hostName">The hostname to be tested.</param>
            <returns>null if <paramref name="hostName"/> parameter is "localhost", the value of <paramref name="hostName"/> parameter in otherwise.</returns>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.IsInstalledInRegistry">
            <summary>
            Indicate if Windows Fax Service is installed (Checked by the registry).
            </summary>
            <returns>True if Windows Fax Service is installed (Checked by the registry).</returns>
            <remarks>
            <list type="bullet">
            <item>Key : "HKLM\SOFTWARE\Microsoft\Fax\Setup"</item>
            <item>Value name : Installed</item>
            <item>Value : "1"</item>
            </list>
            </remarks>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.GetPrinter(System.String)">
            <summary>Return an PrinterSettings object of a _printer name.</summary>
            <param name="printerName">Printer name</param>
            <returns>The _printer name of fax-_printer</returns>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.FillDefaultInformations(Cosmo.Net.Fax.FaxInformations,Cosmo.Net.Fax.FaxCoverPage)">
            <summary>
            Get default data informations and the default cover page on the fax server, and fill it on differents parameters.
            </summary>
            <param name="informations">Informations which will be fill.</param>
            <param name="coverPage">Data cover page to be fill.</param>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.GetJobsID">
            <summary>
            Return a list of all current id _jobs in the <see cref="P:Cosmo.Net.Fax.FaxServer.Jobs"/> collection.
            </summary>
            <returns>A list of all current id _jobs in the <see cref="P:Cosmo.Net.Fax.FaxServer.Jobs"/> collection.</returns>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.SetJobCommand(Cosmo.Net.Fax.FaxJob,Cosmo.Net.Fax.FaxJobCommand)">
            <summary>
            Sent a command to a fax job.
            </summary>
            <param name="job">Job to be send the command.</param>
            <param name="command">Command to send.</param>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.RefreshConfiguration">
            <summary>
            Refresh fax server configuration
            </summary>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.RefreshPorts">
            <summary>
            Refresh devices _ports.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxServer.CheckIsDisposed">
            <summary>
            This methode check if <see cref="T:Cosmo.Net.Fax.FaxServer"/> object is disposed.
            </summary>
            <returns>True if <see cref="T:Cosmo.Net.Fax.FaxServer"/> object is disposed.</returns>
            <remarks>Use this method on all public method in the library.</remarks>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxServer.ServerName">
            <summary>
            Get the server name.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxServer.PrinterName">
            <summary>
            Get the fax printer name.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxServer.Jobs">
            <summary>
            Get the read-only collection of job where are in the fax server.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxServer.RetriesNumber">
            <summary>
            Get or set the number of times the fax server will attempt to retransmit an outgoing fax il the initial transmission fails.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxServer.RetryDelay">
            <summary>
            Get or set the number of minutes that will elapse between retransmission attempts by the fax server.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxServer.StartCheapTime">
            <summary>
            Get or set the hour and minute at which the discount period begins.
            </summary>
            <remarks>The discount period applies only to outgoing transmissions. Seconds and millisecondes members are ignored</remarks>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxServer.StopCheapTime">
            <summary>
            Get or set the hour and minute at which the discount period ends.
            </summary>
            <remarks>The discount period applies only to outgoing transmissions.Seconds and millisecondes members are ignored</remarks>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxServer.ArchiveDirectory">
            <summary>
            Get or set the fully qualified path of the directory in which outgoing fax transmissions will be archived.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxServer.ArchiveOutgoingFaxes">
            <summary>
            Get or set if the fax server should archive outgoing fax transmissions.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxServer.Ports">
            <summary>
            Get a read-only collection of device port in the fax server.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Fax.FaxServer.IsFaxServiceInstalled">
            <summary>
            Indicate if Windows Fax Service is installed on the current system.
            </summary>
            <remarks>This property looking for (in this order) :
            <list type="bullet">
            <item>If Windows Fax Service is intalled (Value "Installed" of "HKLM\SOFTWARE\Microsoft\Fax\Setup" key is "1")</item>
            <item>If WinFax.dll is installed on the system.</item>
            </list>
            </remarks>
        </member>
        <member name="T:Cosmo.Net.Fax.FaxTools">
            <summary>
            Class contains "lot" of static methods tools for this library.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxTools.IsNullOrEmpty(System.String)">
            <summary>
            Check if a <see cref="T:System.String"/> is null or empty by trimming his space on left and right.
            </summary>
            <param name="str">String to be check.</param>
            <returns>True if the string is null or empty, false in otherwise.</returns>
        </member>
        <member name="M:Cosmo.Net.Fax.FaxTools.CreateFaxException(System.String)">
            <summary>
            Create a fax exception with a message with a inner <see cref="T:System.ComponentModel.Win32Exception"/>.
            </summary>
            <param name="message">Message associate with the new exception.</param>
            <returns>A new <see cref="T:Cosmo.Net.Fax.FaxException"/> with the <see cref="T:System.ComponentModel.Win32Exception"/> inner exception
            if <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/> return a value different to 0.</returns>
        </member>
        <member name="T:Cosmo.Net.Fax.NativeMethods">
            <summary>
            Class for calling natives methods for Fax Service.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Ftp.FTPclient">
            <summary>
            A wrapper class for .NET 2.0 FTP protocol
            </summary>
            <remarks>
            This class does not hold open an FTP connection but
            instead is stateless: for each FTP request it
            connects, performs the request and disconnects.
            
            v1.0 - original version
            
            v1.1 - added support for EnableSSL, UsePassive and Proxy connections
            
            v1.2 - added support for downloading correct date/time from FTP server for
                   each file
                   Added FtpDirectoryExists function as FtpFileExists does not work as directory
                   exists check.
                   Amended all URI encoding to ensure special characters are encoded 
            </remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.#ctor">
            <summary>
            Blank constructor
            </summary>
            <remarks>Hostname, username and password must be set manually</remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.#ctor(System.String)">
            <summary>
            Constructor just taking the hostname
            </summary>
            <param name="Hostname">in either ftp://ftp.host.com or ftp.host.com form</param>
            <remarks></remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor taking hostname, username and password
            </summary>
            <param name="Hostname">in either ftp://ftp.host.com or ftp.host.com form</param>
            <param name="Username">Leave blank to use 'anonymous' but set password to your email</param>
            <param name="Password"></param>
            <remarks></remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Constructor taking hostname, username, password and KeepAlive property
            </summary>
            <param name="Hostname">in either ftp://ftp.host.com or ftp.host.com form</param>
            <param name="Username">Leave blank to use 'anonymous' but set password to your email</param>
            <param name="Password">Password</param>
            <param name="KeepAlive">Set True to keep connection alive after each request</param>
            <remarks></remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.ListDirectory(System.String)">
            <summary>
            Return a simple directory listing
            </summary>
            <param name="directory">Directory to list, ex.g. /pub</param>
            <returns>A list of filenames and directories as a List(of String)</returns>
            <remarks>For a detailed directory listing, use ListDirectoryDetail</remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.ListDirectoryDetail">
            <summary>
            List current directory
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.ListDirectoryDetail(System.String)">
            <summary>
            List specified directory (do not obtain datetime stamps)
            </summary>
            <param name="directory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.ListDirectoryDetail(System.String,System.Boolean)">
            <summary>
            Return a detailed directory listing, and also download datetime stamps if specified
            </summary>
            <param name="directory">Directory to list, ex.g. /pub/etc</param>
            <param name="doDateTimeStamp">Boolean: set to True to download the datetime stamp for files</param>
            <returns>An FTPDirectory object</returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.Upload(System.String,System.String)">
            <summary>
            Copy a local file to the FTP server from local filename string
            </summary>
            <param name="localFilename">Full path of the local file</param>
            <param name="targetFilename">Target filename, if required</param>
            <returns></returns>
            <remarks>If the target filename is blank, the source filename is used
            (assumes current directory). Otherwise use a filename to specify a name
            or a full path and filename if required.</remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.Upload(System.IO.FileInfo,System.String)">
            <summary>
            Upload a local file to the FTP server
            </summary>
            <param name="fi">Source file</param>
            <param name="targetFilename">Target filename (optional)</param>
            <returns>
            1.2 [HR] simplified checks on target
            </returns>
            <remarks>
            Copy the file specified to target file: target file can be full path or just filename (uses current dir)
            </remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.Upload(System.IO.Stream,System.String)">
            <summary>
            Upload a local source strean to the FTP server
            </summary>
            <param name="sourceStream">Source Stream</param>
            <param name="targetFilename">Target filename</param>
            <returns>
            1.2 [HR] added CreateURI
            </returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.Download(System.String,System.String,System.Boolean)">
            <summary>
            Copy a file from FTP server to local
            </summary>
            <param name="sourceFilename">Target filename, if required</param>
            <param name="localFilename">Full path of the local file</param>
            <param name="PermitOverwrite">Indica si debe sobreescribir el archivo descargado si este existe en el destino.</param>
            <returns></returns>
            <remarks>
            Target can be blank (use same filename), or just a filename
            (assumes current directory) or a full path and filename
            1.2 [HR] added CreateURI
            </remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.Download(Cosmo.Net.Ftp.FTPfileInfo,System.String,System.Boolean)">
            <summary>
            Version taking an FtpFileInfo
            </summary>
            <param name="file"></param>
            <param name="localFilename"></param>
            <param name="PermitOverwrite"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.Download(Cosmo.Net.Ftp.FTPfileInfo,System.IO.FileInfo,System.Boolean)">
            <summary>
            Another version taking FtpFileInfo and FileInfo
            </summary>
            <param name="file"></param>
            <param name="localFI"></param>
            <param name="PermitOverwrite"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.Download(System.String,System.IO.FileInfo,System.Boolean)">
            <summary>
            Version taking string/FileInfo
            </summary>
            <param name="sourceFilename"></param>
            <param name="targetFI"></param>
            <param name="PermitOverwrite"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.FtpDelete(System.String)">
            <summary>
            Delete remote file
            </summary>
            <param name="filename">filename or full path</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.FtpFileExists(System.String)">
            <summary>
            Determine if file exists on remote FTP site
            </summary>
            <param name="filename">Filename (for current dir) or full path</param>
            <returns></returns>
            <remarks>Note this only works for files</remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.FtpDirectoryExists(System.String)">
            <summary>
            Determine if a directory exists on remote ftp server
            </summary>
            <param name="remoteDir">Directory path, ex.g. /pub/test</param>
            <returns>True if directory exists, otherwise false</returns>
            <remarks></remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.GetFileSize(System.String)">
            <summary>
            Determine size of remote file
            </summary>
            <param name="filename"></param>
            <returns></returns>
            <remarks>Throws an exception if file does not exist</remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.FtpRename(System.String,System.String)">
            <summary>
            Rename a remote file
            </summary>
            <param name="sourceFilename">Either partial or full filename</param>
            <param name="newName">Partial or full name to rename to</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.FtpCreateDirectory(System.String)">
            <summary>
            Crea un nuevo directorio en el servidor.
            </summary>
            <param name="dirpath">Ruta del directorio a crear.</param>
            <returns>Un valor booleano indicando el resultado de la operación.</returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.FtpDeleteDirectory(System.String)">
            <summary>
            Elimina un directorio del servidor.
            </summary>
            <param name="dirpath">Ruta del directorio a eliminar.</param>
            <returns>Un valor booleano indicando el resultado de la operación.</returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.GetDateTimestamp(Cosmo.Net.Ftp.FTPfileInfo)">
            <summary>
            Obtain datetimestamp for remote file
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.GetDateTimestamp(System.String)">
            <summary>
            Obtain datetimestamp for remote file
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="F:Cosmo.Net.Ftp.FTPclient._credentials">
            <summary>
            stored credentials
            </summary>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.GetCredentials">
            <summary>
            Get the credentials from username/password
            </summary>
            <remarks>
            Amended to store credentials on first use, for re-use
            when using KeepAlive=true
            </remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.CreateURI(System.String)">
            <summary>
            Ensure the data payload for URI is properly encoded
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.GetEscapedPath(System.String)">
            <summary>
            Ensure chars in path are correctly escaped ex.g. #
            </summary>
            <param name="path">path to escape</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.GetFullPath(System.String)">
            <summary>
            returns a full path using CurrentDirectory for a relative file reference
            </summary>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.AdjustDir(System.String)">
            <summary>
            Amend an FTP path so that it always starts with /
            </summary>
            <param name="path">Path to adjust</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.GetStringResponse(System.Net.FtpWebRequest)">
            <summary>
            Obtains a response stream as a string
            </summary>
            <param name="ftp">current FTP request</param>
            <returns>String containing response</returns>
            <remarks>
            FTP servers typically return strings with CR and
            not CRLF. Use respons.Replace(vbCR, vbCRLF) to convert
            to an MSDOS string
            1.1: modified to ensure accepts UTF8 encoding
            </remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.GetSize(System.Net.FtpWebRequest)">
            <summary>
            Gets the size of an FTP request
            </summary>
            <param name="ftp"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPclient.GetLastModified(System.Net.FtpWebRequest)">
            <summary>
            Internal function to get the modified datetime stamp via FTP
            </summary>
            <param name="ftp">connection to use</param>
            <returns>
            DateTime of file, or throws exception
            </returns>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPclient.Hostname">
            <summary>
            Hostname
            </summary>
            <value></value>
            <remarks>Hostname can be in either the full URL format
            ftp://ftp.myhost.com or just ftp.myhost.com
            </remarks>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPclient.Proxy">
            <summary>
            Support for Proxy settings
            </summary>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPclient.EnableSSL">
            <summary>
            Support for EnableSSL flag on FtpWebRequest class
            </summary>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPclient.KeepAlive">
            <summary>
            KeepAlive property for permanent connections
            </summary>
            <remarks>
            KeepAlive is set False by default (no permanent connection)
            </remarks>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPclient.UsePassive">
            <summary>
            Support for Passive mode
            </summary>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPclient.Username">
            <summary>
            Username property
            </summary>
            <value></value>
            <remarks>Can be left blank, in which case 'anonymous' is returned</remarks>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPclient.Password">
            <summary>
            Password for username
            </summary>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPclient.CurrentDirectory">
            <summary>
            The CurrentDirectory value
            </summary>
            <remarks>Defaults to the root '/'</remarks>
        </member>
        <member name="T:Cosmo.Net.Ftp.DirectoryEntryTypes">
            <summary>
            Identifies entry as either File or Directory
            </summary>
        </member>
        <member name="F:Cosmo.Net.Ftp.DirectoryEntryTypes.File">
            <summary>Archivo</summary>
        </member>
        <member name="F:Cosmo.Net.Ftp.DirectoryEntryTypes.Directory">
            <summary>Directorio</summary>
        </member>
        <member name="T:Cosmo.Net.Ftp.FTPdirectory">
            <summary>
            Stores a list of files and directories from an FTP result
            </summary>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPdirectory.#ctor">
            <summary>
            Devuelve una instancia de FTPdirectory
            </summary>
            <remarks>
            Este constructor crea un listado de directorio en blanco
            </remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPdirectory.#ctor(System.String,System.String)">
            <summary>
            Constructor: create list from a (detailed) directory string
            </summary>
            <param name="dir">directory listing string</param>
            <param name="path"></param>
            <remarks></remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPdirectory.GetFiles(System.String)">
            <summary>
            Filter out only files from directory listing
            </summary>
            <param name="ext">optional file extension filter</param>
            <returns>FTPdirectory listing</returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPdirectory.GetDirectories">
            <summary>
            Returns a list of only subdirectories
            </summary>
            <returns>FTPDirectory list</returns>
            <remarks></remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPdirectory.FileExists(System.String)">
            <summary>
            Averigua si un fichero existe.
            </summary>
            <param name="filename">Nombre y ruta del archivo.</param>
            <returns>Un valor booleano indicando la existencia o no del archivo.</returns>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPdirectory.GetParentDirectory(System.String)">
            <summary>
            Devuelve el directorio superior al indicado.
            </summary>
            <param name="dir">Directorio actual.</param>
        </member>
        <member name="T:Cosmo.Net.Ftp.FTPfileInfo">
            <summary>
            Represents a file or directory entry from an FTP listing
            </summary>
            <remarks>
            This class is used to parse the results from a detailed
            directory list from FTP. It supports most formats of
            
            v1.1 fixed bug in Fullname/path
            </remarks>
        </member>
        <member name="F:Cosmo.Net.Ftp.FTPfileInfo._ParseFormats">
            <summary>
            List of REGEX formats for different FTP server listing formats
            </summary>
            <remarks>
            The first three are various UNIX/LINUX formats, fourth is for MS FTP
            in detailed mode and the last for MS FTP in 'DOS' mode.
            I wish VB.NET had support for Const arrays like C# but there you go
            </remarks>
        </member>
        <member name="M:Cosmo.Net.Ftp.FTPfileInfo.#ctor(System.String,System.String)">
            <summary>
            Devuelve una instancia de FTPfileInfo
            </summary>
            <param name="line">The line returned from the detailed directory list</param>
            <param name="path">Path of the directory</param>
            <remarks></remarks>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPfileInfo.FullName">
            <summary>
            Devuelve el nombre del archivo y la ruta.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPfileInfo.Filename">
            <summary>
            Devuelve el nombre del archivo sin la ruta.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPfileInfo.Path">
            <summary>
            Path of file (always ending in /)
            </summary>
            <remarks>
            1.1: Modifed to ensure always ends in / - with thanks to jfransella for pointing this out
            </remarks>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPfileInfo.FileType">
            <summary>
            Devuelve el tipo de archivo.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPfileInfo.Size">
            <summary>
            Devuelve el tamaño en bytes del archivo.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPfileInfo.FileDateTime">
            <summary>
            Devuelve la fecha de la útlima actualización del archivo.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPfileInfo.Permission">
            <summary>
            Devuelve una cadena descriptiva de los permisos del archivo.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPfileInfo.Extension">
            <summary>
            Devuelve la extensión del archivo.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Ftp.FTPfileInfo.NameOnly">
            <summary>
            Devuelve el nombre (sin extensión ni ruta) del archivo.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Mail.EndGetResponse">
            <summary>
            Used as call back function that is called when request is completed and get response data.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Mail.AsynchronousContext">
            <summary>
            Represent context of request and response process and provide data about context.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.AsynchronousContext.#ctor(System.Int32,System.Predicate{System.String},Cosmo.Net.Mail.EndGetResponse)">
            <summary>
            Devuelve una instancia de AsynchronousContext.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.AsynchronousContext.Parse(System.Int32)">
            <summary>
            Convert bytes data to text.It will return true when complete receiving data.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Mail.AsynchronousContext.Data">
            <summary>
            Datos del contexto.
            </summary>
        </member>
        <member name="T:Cosmo.Net.ContentDisposition">
            <summary>
            Represent Content-Disposition as class.
            </summary>
        </member>
        <member name="T:Cosmo.Net.InternetTextMessage.Field">
            <summary>
            ƒL[‚Æ’l‚ÌƒZƒbƒg‚Å\¬‚³‚ê‚éƒtƒB[ƒ‹ƒh‚ð•\‚·ƒNƒ‰ƒX‚Å‚·B
            RFC822‚Å’è‹`‚³‚ê‚Ü‚·B
            </summary>
        </member>
        <member name="T:Cosmo.Net.InternetTextMessage">
            <summary>
            Represent message defined RFC822,RFC2045-2049 as class.
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.#ctor">
            <summary>
            Devuelve una instancia de InternetTextMessage.
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.#ctor(System.String)">
            <summary>
            Devuelve una instancia de InternetTextMessage.
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.Initialize(System.String)">
            <summary>
            ‰Šú‰»ˆ—‚ðs‚¢‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.SetDefaultContentEncoding">
            <summary>
            Šù’è‚ÌContent-Encoding‚Ì’l‚ðƒZƒbƒg‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.Parse(System.String)">
            <summary>
            ƒeƒLƒXƒg‚ð‰ðÍ‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.ParseHeaderField(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            s‚Ì•¶Žš—ñ‚ð‰ðÍ‚µAƒtƒB[ƒ‹ƒh‚ÌƒCƒ“ƒXƒ^ƒ“ƒX‚ð¶¬‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.DecodeHeader(System.String)">
            <summary>
            Decode header text by RFC2047.
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.ParseContentEncoding(System.String)">
            <summary>
            Content-Encoding‚Ì‰ðÍ‚ðs‚¢‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.ParseContentType(Cosmo.Net.ContentType,System.String)">
            <summary>
            Parse content-type.
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.GetLastField(Cosmo.Net.ContentType,System.String)">
            <summary>
            Get last field when parsing content-type.
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.ParseContentDisposition(Cosmo.Net.ContentDisposition,System.String)">
            <summary>
            Parse content-disposision.
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.GetLastField(Cosmo.Net.ContentDisposition,System.String)">
            <summary>
            Content-Disposition‚Ì‰ðÍ‚ðs‚Á‚½‚Æ‚«‚ÉFileName‚ÌƒtƒB[ƒ‹ƒh‚ª‚ ‚éê‡AFileName‚ÌƒtƒB[ƒ‹ƒh‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.GetEncoding(System.String,System.Text.Encoding)">
            <summary>
            •¶Žš—ñ‚©‚çEncoding‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.Item(System.String)">
            <summary>
            Devuelve una instancia de InternetTextMessage.
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.From">
            <summary>
            Get from value.
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.ReplyTo">
            <summary>
            Reply-To‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.InReplyTo">
            <summary>
            In-Reply-To‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.Subject">
            <summary>
            Œ–¼‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.Date">
            <summary>
            Date‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.MessageID">
            <summary>
            MessageID‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.References">
            <summary>
            References‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.ContentType">
            <summary>
            ContentType‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.ContentEncoding">
            <summary>
            Encoding‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.ContentDisposition">
            <summary>
            ContentDisposition‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.MultiPartBoundary">
            <summary>
            MultiPartBoundary‚Ì•¶Žš—ñ‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.IsMultiPart">
            <summary>
            Body•”‚ªMIME‚Å\¬‚³‚ê‚Ä‚¢‚é‚©‚Ç‚¤‚©‚ðŽ¦‚·’l‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.IsBody">
            <summary>
            ‚±‚ÌƒCƒ“ƒXƒ^ƒ“ƒX‚ªƒeƒLƒXƒgŒ`Ž®‚Ìƒf[ƒ^‚ð•\‚·ê‡ATrue‚ð•Ô‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.IsHtml">
            <summary>
            ‚±‚ÌƒCƒ“ƒXƒ^ƒ“ƒX‚ªHTMLŒ`Ž®‚ÌƒeƒLƒXƒgƒf[ƒ^‚ð•\‚·ê‡ATrue‚ð•Ô‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.IsAttachment">
            <summary>
            ‚±‚ÌƒCƒ“ƒXƒ^ƒ“ƒX‚ª“Y•tƒtƒ@ƒCƒ‹ƒf[ƒ^‚Ìê‡ATrue‚ð•Ô‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.ContentDescription">
            <summary>
            ContentDisposition‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.ContentTransferEncoding">
            <summary>
            ContentTransferEncoding‚Ì’l‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.CharSet">
            <summary>
            CharSet‚Ì’l‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.Header">
            <summary>
            ƒwƒbƒ_[‚ÌƒRƒŒƒNƒVƒ‡ƒ“‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.DecodeHeaderText">
            <summary>
            ƒwƒbƒ_[•”•ª‚ÌƒtƒB[ƒ‹ƒh‚Ì’l‚ðƒfƒR[ƒh‚·‚é‚©‚Ç‚¤‚©‚ðŽ¦‚·’l‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.BodyData">
            <summary>
            Body•”•ª‚Ìƒf[ƒ^‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="T:Cosmo.Net.InternetTextMessage.Field">
            <summary>
            ƒL[‚Æ’l‚ÌƒZƒbƒg‚Å\¬‚³‚ê‚éƒtƒB[ƒ‹ƒh‚ð•\‚·ƒNƒ‰ƒX‚Å‚·B
            RFC822‚Å’è‹`‚³‚ê‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.Field.#ctor(System.String,System.String)">
            <summary>
            Devuelve una instancia de Field.
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.Field.FindField(System.Collections.Generic.List{Cosmo.Net.InternetTextMessage.Field},System.String)">
            <summary>
            Busca un campo.
            </summary>
        </member>
        <member name="M:Cosmo.Net.InternetTextMessage.Field.ToString">
            <summary>
            Devuelve una cadena de texto que representa el valor del campo.
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.Field.Key">
            <summary>
            Clave del campo.
            </summary>
        </member>
        <member name="P:Cosmo.Net.InternetTextMessage.Field.Value">
            <summary>
            Valor del campo.
            </summary>
        </member>
        <member name="M:Cosmo.Net.ContentDisposition.#ctor(System.String)">
            <summary>
            Devuelve una instancia de ContentDisposition.
            </summary>
        </member>
        <member name="M:Cosmo.Net.ContentDisposition.#ctor(System.String,Cosmo.Net.InternetTextMessage.Field[])">
            <summary>
            Devuelve una instancia de ContentDisposition.
            </summary>
        </member>
        <member name="P:Cosmo.Net.ContentDisposition.Fields">
            <summary>
            Get field collection.
            </summary>
        </member>
        <member name="P:Cosmo.Net.ContentDisposition.FileName">
            <summary>
            Get or set filename.
            </summary>
        </member>
        <member name="T:Cosmo.Net.ContentType">
            <summary>
            Represent Content-Type as class.
            </summary>
        </member>
        <member name="M:Cosmo.Net.ContentType.#ctor(System.String)">
            <summary>
            Devuelve una instancia de ContentType.
            </summary>
        </member>
        <member name="M:Cosmo.Net.ContentType.#ctor(System.String,Cosmo.Net.InternetTextMessage.Field[])">
            <summary>
            Devuelve una instancia de ContentType.
            </summary>
        </member>
        <member name="P:Cosmo.Net.ContentType.Fields">
            <summary>
            Get field collection.
            </summary>
        </member>
        <member name="P:Cosmo.Net.ContentType.Name">
            <summary>
            Get or set name.
            </summary>
        </member>
        <member name="P:Cosmo.Net.ContentType.Boundary">
            <summary>
            Get or set boundary.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Mail.MailAddress">
            <summary>
            Represent mailaddress when sending by smtp.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailAddress.#ctor(System.String)">
            <summary>
            Devuelve una instancia de MailAddress.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailAddress.#ctor(System.String,System.String)">
            <summary>
            Devuelve una instancia de MailAddress.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailAddress.ToString">
            <summary>
            Convierte la dirección de correo a una cadena.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailAddress.ToEncodeString">
            <summary>
            Convierte la dirección de correo a una cadena codificada.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailAddress.ToMailAddressText(System.String,System.String,System.Boolean)">
            <summary>
            Get mail address text encoded by specify encoding.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailAddress.ToMailAddressText(System.Text.Encoding,Cosmo.Net.Mail.TransferEncoding,System.String,System.String,System.Boolean)">
            <summary>
            Get mail address text encoded by specify encoding.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailAddress.Create(System.String)">
            <summary>
            Create MailAddress object by mail address text.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailAddress.GetMailAddressList(System.String)">
            <summary>
            Get mailaddress list from mail address list text.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailAddress.Obfuscate(System.String)">
            <summary>
            Permite codificar una dirección de _message con los equivalentes de los códigos numéricos de los carácteres.
            </summary>
            <param name="mail">Dirección de correo electrónico.</param>
            <returns>La dirección de correo electrónico (no enlace) codificado.</returns>
        </member>
        <member name="M:Cosmo.Net.Mail.MailAddress.Obfuscate(System.String,System.String)">
            <summary>
            Permite codificar una dirección de _message con los equivalentes de los códigos numéricos de los carácteres.
            </summary>
            <param name="mail">Dirección de correo electrónico.</param>
            <param name="linkText">Texto que aparece en en enlace.</param>
            <returns>El enlace al correo electrónico codificado.</returns>
        </member>
        <member name="M:Cosmo.Net.Mail.MailAddress.IsValidAddress(System.String)">
            <summary>
            Devuelve un valor que indica si una dirección es válida
            </summary>
            <param name="address">Dirección de correo electrónico a verificar</param>
            <returns>Un valor que indica si una dirección es válida</returns>
        </member>
        <member name="P:Cosmo.Net.Mail.MailAddress.Value">
            <summary>
            Get or set mailaddress value.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Mail.MailAddress.DisplayName">
            <summary>
            表示名を取得または設定します。
            </summary>
        </member>
        <member name="P:Cosmo.Net.Mail.MailAddress.IsDoubleQuote">
            <summary>
            表示名をダブルコーテーションで囲うどうかを示す値を取得または設定します。
            </summary>
        </member>
        <member name="P:Cosmo.Net.Mail.MailAddress.Encoding">
            <summary>
            表示名のエンコードに使われるEncodingを取得または設定します。
            </summary>
        </member>
        <member name="P:Cosmo.Net.Mail.MailAddress.TransferEncoding">
            <summary>
            表示名のエンコードに使われるTransferEncodingを取得または設定します。
            </summary>
        </member>
        <member name="T:Cosmo.Net.Mail.MailParser">
            <summary>
            Implementa un parser para el contenido de los mensajes de correo electrónico.
            </summary>
        </member>
        <member name="F:Cosmo.Net.Mail.MailParser.ThisIsMultiPartMessageInMIMEFormat">
            <summary>This is multi-part message in MIME format</summary>
        </member>
        <member name="F:Cosmo.Net.Mail.MailParser.NewLine">
            <summary>Cambio de línea</summary>
        </member>
        <member name="F:Cosmo.Net.Mail.MailParser.MaxCharCountPerRow">
            <summary>Número de carácteres máximo por línea.</summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.#cctor">
            <summary>
            Devuelve una instancia de MailParser.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.IsResponseOk(System.String)">
            <summary>
            レスポンスが+OKを含むかどうかを取得します。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.MailAddress(System.String)">
            <summary>
            Fromの文字列から送信先メールアドレスとして使用可能な文字列を取得します。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.Date(System.DateTime)">
            <summary>
            日付データからメールのヘッダーで使用する日付文字列を生成して取得します。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.ToTransferEncoding(System.String)">
            <summary>
            文字列からTransferEncodingの値を取得します。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.ToTransferEncoding(Cosmo.Net.Mail.TransferEncoding)">
            <summary>
            TransferEncodingから文字列を取得します。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.EncodeToMailHeaderLine(System.String,Cosmo.Net.Mail.TransferEncoding,System.Text.Encoding)">
            <summary>
            メールヘッダーの文字列をRFC2047の仕様に従ってエンコードします。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.EncodeToMailHeaderLine(System.String,Cosmo.Net.Mail.TransferEncoding,System.Text.Encoding,System.Int32)">
            <summary>
            メールヘッダーの文字列をRFC2047の仕様に従ってエンコードします。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.DecodeFromMailHeaderLine(System.String)">
            <summary>
            メールヘッダーの文字列をRFC2047の仕様に従ってデコードします。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.EncodeToMailBody(System.String,Cosmo.Net.Mail.TransferEncoding,System.Text.Encoding)">
            <summary>
            メール本文の文字列をメールの仕様に従ってエンコードします。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.DecodeFromMailBody(System.String,Cosmo.Net.Mail.TransferEncoding,System.Text.Encoding)">
            <summary>
            メール本文の文字列を解析し、デコードされたメール本文の文字列を取得します。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.GenerateBoundary">
            <summary>
            Boundary文字列を生成します。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.ToQuotedPrintable(System.String)">
            <summary>
            QuotedPrintableでデコードされた文字列をエンコードして文字列を取得します。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.FromQuotedPrintable(System.String)">
            <summary>
            QuotedPrintableでエンコードされた文字列をデコードして文字列を取得します。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.IsReceiveCompleted(System.String)">
            <summary>
            本文の終端までデータを受信したかどうかを示す値を取得します。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.ToBase64String(System.String)">
            <summary>
            文字列をBase64文字列に変更します。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.ToMd5DigestString(System.String)">
            <summary>
            MD5ダイジェストに従って文字列を変換します。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.ToCramMd5String(System.String,System.String,System.String)">
            <summary>
            Cram-MD5に従って文字列を変換します。
            </summary>
        </member>
        <member name="M:Cosmo.Net.Mail.MailParser.AsciiCharOnly(System.String)">
            <summary>
            指定した文字がASCII文字列のみで構成されているかどうかを示す値を取得します。
            </summary>
        </member>
        <member name="P:Cosmo.Net.Mail.MailParser.DateTimeFormatString">
            <summary>
            日付文字列の書式を設定する文字列です。
            </summary>
        </member>
        <member name="P:Cosmo.Net.Mail.MailParser.TimeZoneOffset">
            <summary>
            日付文字列のUTCからのオフセットをセットするための値を取得または設定します。
            この値を変更することによりDateTimeFormatStringのオフセットの値を変更可能です。
            </summary>
        </member>
        <member name="T:Cosmo.Net.Mail.MailParser.RegexList">
            <summary>
            Implementa una clase estática para la codificación hexadecimal.
            </summary>
        </member>
        <member name="T:Cosmo.Net.MimeContent">
            <summary>
            Representa el contenido MIME de un mensaje de correo.
            </summary>
        </member>
        <member name="M:Cosmo.Net.MimeContent.#ctor">
            <summary>
            Devuelve una instancia de MimeContent.
            </summary>
        </member>
        <member name="M:Cosmo.Net.MimeContent.#ctor(System.String)">
            <summary>
            Devuelve una instancia de MimeContent.
            </summary>
        </member>
        <member name="M:Cosmo.Net.MimeContent.ParseToContentTextList(System.String,System.String)">
            <summary>
            Parse body text and separate as text foe each mime content.
            </summary>
        </member>
        <member name="M:Cosmo.Net.MimeContent.DecodeData(System.String)">
            <summary>
            Decode binary data and output as file to specify file path.
            </summary>
        </member>
        <member name="M:Cosmo.Net.MimeContent.DecodeData(System.IO.Stream,System.Boolean)">
            <summary>
            Decode binary data and output to specify stream.
            </summary>
        </member>
        <member name="M:Cosmo.Net.MimeContent.Initialize(System.String)">
            <summary>
            Inicializa el objeto.
            </summary>
        </member>
        <member name="P:Cosmo.Net.MimeContent.Contents">
            <summary>
            Get mime content collection.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Mail.TransferEncoding">
            <summary>
            Enumera los tipos de codificación para la transferencia de datos
            </summary>
        </member>
        <member name="F:Cosmo.Net.Mail.TransferEncoding.SevenBit">
            <summary>Codificación mediante 7 bits</summary>
        </member>
        <member name="F:Cosmo.Net.Mail.TransferEncoding.Base64">
            <summary>Codificación mediante Base64</summary>
        </member>
        <member name="F:Cosmo.Net.Mail.TransferEncoding.QuotedPrintable">
            <summary>Codificación mediante QuoetPrintable</summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.Dele">
            <summary>
            Representa el comando DELE.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Pop3Command">
            <summary>
            Representa un comando para el servicio Pop3.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Command.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Command.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Dele.#ctor(System.Int64)">
            <summary>
            Devuelve una instancia de Dele.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Dele.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Dele.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Dele.MailIndex">
            <summary>
            Índice del correo electrónico.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.List">
            <summary>
            Representa el comando LIST.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.List.#ctor">
            <summary>
            Devuelve una instancia de List.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.List.#ctor(System.Int64)">
            <summary>
            Devuelve una instancia de List.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.List.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.List.GetMessageIndex(System.String)">
            <summary>
            Analyze response single line and get mail index.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.List.GetSize(System.String)">
            <summary>
            Analyze response single line and get mail size.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.List.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.List.MailIndex">
            <summary>
            Índice.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.List.Callback">
            <summary>
            Función de callback.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.List.Result">
            <summary>
            Represents result of list command.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.List.Result.#ctor(System.String)">
            <summary>
            Resultado.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.List.Result.MailIndex">
            <summary>
            Índice.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.List.Result.Size">
            <summary>
            Tamaño.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.Noop">
            <summary>
            Representa el comando NOOP.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Noop.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Noop.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Pop3CommandCallback">
            <summary>A Callback method which is called by Pop3Client class when pop3 request gets response.
            </summary>
            <param name="inResult"></param>
        </member>
        <member name="T:Cosmo.Net.Pop3.Pop3CommandResult">
            <summary>
            Implementa el resultado de un comando del servicio Pop3.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3CommandResult.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Pop3CommandResult.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3CommandResult.Text">
            <summary>
            Texto (mensaje).
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3CommandResult.Ok">
            <summary>
            Indica si el comando ha sido ejecutado con éxito.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.Quit">
            <summary>
            Representa el comando quit.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Quit.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Quit.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.Reset">
            <summary>
            Representa el comando RESET.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Reset.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Reset.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.Retr">
            <summary>
            Implementa el comando RETR.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Retr.#ctor(System.Int64)">
            <summary>
            Devuelve una instancia de Retr.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Retr.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Retr.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Retr.MailIndex">
            <summary>
            Índice del correo electrónico.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.Retr.Callback">
            <summary>
            Función de callback.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.Stat">
            <summary>
            Representa el comando STAT.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Stat.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Stat.GetTotalMessageCount(System.String)">
            <summary>
            Analyze response single line and get total mail count of mailbox.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Stat.GetTotalSize(System.String)">
            <summary>
            Analyze response single line and get total mail size of mailbox.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Stat.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.Stat.Callback">
            <summary>
            Función de callback.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.Stat.Result">
            <summary>
            Represents result of stat command.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Stat.Result.#ctor(System.String)">
            <summary>
            Resultado.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Stat.Result.TotalMessageCount">
            <summary>
            Número de mensajes.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Stat.Result.TotalSize">
            <summary>
            Tamaño total.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.Top">
            <summary>
            Representa el comando TOP.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Top.#ctor(System.Int64)">
            <summary>
            Devuelve una instancia de Top.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Top.#ctor(System.Int64,System.Int32)">
            <summary>
            Devuelve una instancia de Top.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Top.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Top.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Top.MailIndex">
            <summary>
            Índice del correo electrónico.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Top.LineCount">
            <summary>
            Devuelve el número de líneas del mensaje.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.Uidl">
            <summary>
            Representa el comando UIDL.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Uidl.#ctor">
            <summary>
            Devuelve una instancia de Uidl.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Uidl.#ctor(System.Int64)">
            <summary>
            Devuelve una instancia de Uidl.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Uidl.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Uidl.GetMessageIndex(System.String)">
            <summary>
            Devuelve el índice del mensaje.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Uidl.GetUid(System.String)">
            <summary>
            Devuelve el UID (identificador) del mensaje.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Uidl.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Uidl.MailIndex">
            <summary>
            Índice del correo electrónico.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.Uidl.Callback">
            <summary>
            Función de callback.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Command.Uidl.Result">
            <summary>
            Implementa el resultado de la ejecución del comando UIDL.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Uidl.Result.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Result.
            </summary>
            <param name="inText"></param>
        </member>
        <member name="M:Cosmo.Net.Pop3.Command.Uidl.Result.CheckFormat(System.String)">
            <summary>
            Verifica el formato.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Uidl.Result.MailIndex">
            <summary>
            Devuelve el índice del mensaje.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Command.Uidl.Result.Uid">
            <summary>
            Devuelve el identificador UID del mensaje.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Pop3ConnectException">
            <summary>
            The exception that is thrown when connection error occurs.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Pop3Exception">
            <summary>
            The exception that is represent pop3 exception and is thrown when pop3 error occurs.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Exception.#ctor">
            <summary>
            Devuelve una instancia de Pop3Exception.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Exception.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Pop3Exception.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3ConnectException.#ctor">
            <summary>
            Devuelve una instancia de Pop3ConnectException.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3ConnectException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Pop3ConnectException.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Pop3ReceiveException">
            <summary>
            The exception that is thrown when receive response error occurs.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3ReceiveException.#ctor">
            <summary>
            Devuelve una instancia de Pop3ReceiveException.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3ReceiveException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Pop3ReceiveException.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Pop3SendException">
            <summary>
            The exception that is thrown when send request is fail.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3SendException.#ctor">
            <summary>
            Devuelve una instancia de Pop3SendException.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3SendException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Pop3SendException.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Pop3AuthenticateMode">
            <summary>
            Specifies how to login to mail server.
            </summary>
        </member>
        <member name="F:Cosmo.Net.Pop3.Pop3AuthenticateMode.Auto">
            <summary>Automático.</summary>
        </member>
        <member name="F:Cosmo.Net.Pop3.Pop3AuthenticateMode.Pop">
            <summary>With Pop authenticate to login server.</summary>
        </member>
        <member name="F:Cosmo.Net.Pop3.Pop3AuthenticateMode.APop">
            <summary>With A-Pop authenticate to login server.</summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Pop3Client">
            <summary>
            Represent and probide functionality about pop3 command.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.#ctor">
            <summary>
            Devuelve una instancia de Pop3Client.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.#ctor(System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de Pop3Client.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.Open">
            <summary>
            Open connection to a server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.EnsureOpen">
            <summary>
            Ensure connection is opened.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.Authenticate">
            <summary>
            Log in to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.AuthenticateByPop">
            <summary>
            Log in to pop3 server by POP authenticate.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.AuthenticateByAPop">
            <summary>
            Log in to pop3 server by A-POP authenticate.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.Execute(Cosmo.Net.Pop3.Pop3Command)">
            <summary>
            Send a command with synchronous and get response data as string text if the command is a type to get response.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.BeginExecute(Cosmo.Net.Pop3.Pop3Command,Cosmo.Net.Mail.EndGetResponse)">
            <summary>
            Send a command with asynchronous and get response text by first parameter of inFunction.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteList(Cosmo.Net.Pop3.Command.List)">
            <summary>
            Send list command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteList(System.Int64)">
            <summary>
            Send list command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteList">
            <summary>
            Send list command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteUidl(System.Int64)">
            <summary>
            Send uidl command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteUidl">
            <summary>
            Send uidl command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteRetr(System.Int64)">
            <summary>
            Send retr command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteTop(System.Int64,System.Int32)">
            <summary>
            Send top command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteDele(System.Int64)">
            <summary>
            Send dele command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteStat">
            <summary>
            Send stat command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteNoop">
            <summary>
            Send noop command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteReset">
            <summary>
            Send reset command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteQuit">
            <summary>
            Send quit command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.GetTotalMessageCount">
            <summary>
            Get total mail count at mailbox.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.GetMessage(System.Int64)">
            <summary>
            Get mail data of specified mail index.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.GetMessage(System.Int64,System.Int32)">
            <summary>
            Get mail data of specified mail index with indicate body line count.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.GetMessageText(System.Int64)">
            <summary>
            Get mail text of specified mail index.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.GetMessageText(System.Int64,System.Int32)">
            <summary>
            Get mail text of specified mail index with indicate body line count.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.GetMessageText(System.Int64,Cosmo.Net.Mail.EndGetResponse)">
            <summary>
            Get mail text of specified mail index by asynchronous request.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.DeleteEMail(System.Int64)">
            <summary>
            Set delete flag to specify mail index.
            To complete delete execution,call quit command after calling dele command.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteList(System.Int64,Cosmo.Net.Pop3.Command.List.Callback)">
            <summary>
            Send asynchronous list command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteList(Cosmo.Net.Pop3.Command.List.Callback)">
            <summary>
            Send asynchronous list command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteUidl(System.Int64,Cosmo.Net.Pop3.Command.Uidl.Callback)">
            <summary>
            Send asynchronous uidl command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteUidl(Cosmo.Net.Pop3.Command.Uidl.Callback)">
            <summary>
            Send asynchronous uidl command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.GetMessage(System.Int64,Cosmo.Net.Pop3.Command.Retr.Callback)">
            <summary>
            Get mail data by asynchronous request.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteRetr(System.Int64,Cosmo.Net.Pop3.Command.Retr.Callback)">
            <summary>
            Send asynchronous retr command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteStat(Cosmo.Net.Pop3.Command.Stat.Callback)">
            <summary>
            Send asynchronous stat command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteNoop(Cosmo.Net.Pop3.Pop3CommandCallback)">
            <summary>
            Send asynchronous noop command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteReset(Cosmo.Net.Pop3.Pop3CommandCallback)">
            <summary>
            Send asynchronous reset command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ExecuteQuit(Cosmo.Net.Pop3.Pop3CommandCallback)">
            <summary>
            Send asynchronous quit command to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.Close">
            <summary>
            disconnect connection to pop3 server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.ToString">
            <summary>
            Get string about mail account information.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.Dispose">
            <summary>
            Dipose and release system resoures.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.Dispose(System.Boolean)">
            <summary>
            Dipose and release system resoures.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.Finalize">
            <summary>
            Llama al método Dispose en el caso que no se haya llamado a Dispose al destruir el objeto.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.GetTcpClient">
            <summary>
            Get TcpClient object to communicate to server.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.Execute(System.String,System.Boolean)">
            <summary>
            Send a command with synchronous and get response data as string text if the command is a type to get response.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Client.BeginExecuteCallBack(System.IAsyncResult)">
            <summary>
            Send a command with asynchronous and get response text by first parameter of inFunction.
            If there is more data to receive,continously call BeginExecuteCallback method and get response data.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Client.AuthenticateMode">
            <summary>
            Get or set how authenticate to server.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Client.UserName">
            <summary>
            Get or set UserName.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Client.Password">
            <summary>
            Get or set password.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Client.ServerName">
            <summary>
            Get or set server.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Client.Port">
            <summary>
            Get or set port.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Client.Ssl">
            <summary>
            Get or set use ssl protocol.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Client.ReceiveTimeout">
            <summary>
            Get or set timeout milliseconds.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Client.ReceiveBufferSize">
            <summary>
            Get or set buffer size to receive.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Client.ThreadSleepMilliseconds">
            <summary>
            Get or set milliseconds to wait response data from server.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Client.State">
            <summary>
            Get connection state.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Client.Available">
            <summary>
            Get connection is ready.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Client.Commnicating">
            <summary>
            Get specify value whether communicating to server or not.
            Between send command and finish get all response data,this property get true.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Pop3ConnectionState">
            <summary>
            Specifies whether server and client is connected,or disconnected or authenticated.
            </summary>
        </member>
        <member name="F:Cosmo.Net.Pop3.Pop3ConnectionState.Disconnected">
            <summary>Server and client does not connected.</summary>
        </member>
        <member name="F:Cosmo.Net.Pop3.Pop3ConnectionState.Connected">
            <summary>Server and client communicate with tcp/ip.</summary>
        </member>
        <member name="F:Cosmo.Net.Pop3.Pop3ConnectionState.Authenticated">
            <summary>Server and client authenticate success.</summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Pop3Content">
            <summary>
            Impelmenta un fragmento de contenido de un mensaje de correo Pop3.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Content.#ctor(Cosmo.Net.Pop3.Pop3Message,System.String)">
            <summary>
            Devuelve una instancia de Pop3Content.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Content.Initialize(Cosmo.Net.Pop3.Pop3Message,System.String)">
            <summary>
            Inicializa el objeto.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Content.EnsureBodyText">
            <summary>
            Body•”‚ÌƒeƒLƒXƒg‚ªƒZƒbƒg‚³‚ê‚Ä‚¢‚é‚©Šm”F‚µAƒZƒbƒg‚³‚ê‚Ä‚È‚¢ê‡‚ÍBody•”‚Ì•¶Žš—ñ‚ðƒZƒbƒg‚µ‚Ü‚·B
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Content.CreateSmtpContent">
            <summary>
            Create SmtpContent instance with this instance value.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Content.ParentContent">
            <summary>
            Get or set parent content object.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Content.Name">
            <summary>
            Get name value.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Content.FileName">
            <summary>
            Get filename value.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Content.BodyText">
            <summary>
            Get body text of this mail.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Content.Data">
            <summary>
            Get text data used to create this instance.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Content.Contents">
            <summary>
            Get pop3 content collection of this mail.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Content.BodyTextCreated">
            <summary>
            Get value that indicate body text is created or not.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Pop3.Pop3Message">
            <summary>
            Implementa un mensaje de correo para el servicio Pop3.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Message.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Pop3Message.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Message.#ctor(System.String,System.Int64)">
            <summary>
            Devuelve una instancia de Pop3Message.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Message.Initialize(System.String)">
            <summary>
            Inicializa erl objeto.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Message.EnsureBodyContent(System.Collections.Generic.List{Cosmo.Net.Pop3.Pop3Content})">
            <summary>
            Ensure that body data is set or not,and set body data if body data is not set.
            </summary>
            <param name="inContents"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Message.GetAllContents(Cosmo.Net.Pop3.Pop3Message)">
            <summary>
            Get all pop3 content collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Message.GetAttachedContents(Cosmo.Net.Pop3.Pop3Message)">
            <summary>
            Get pop3 content collection that IsAttachment property is true.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Message.GetAttachedContents(System.Collections.Generic.List{Cosmo.Net.Pop3.Pop3Content},System.Predicate{Cosmo.Net.Pop3.Pop3Content})">
            <summary>
            Get pop3 content collection that specify predicate is true.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Message.EnsureBodyText">
            <summary>
            Ensure that body text is set or not,and set body text if body text is not set.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Pop3.Pop3Message.CreateSmtpMessage">
            <summary>
            Create SmtpMessage instance with this instance value.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Message.Index">
            <summary>
            Get mail index of this mailbox.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Message.Data">
            <summary>
            Get text data used to create this instance.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Message.To">
            <summary>
            Get TO value of this mail.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Message.Cc">
            <summary>
            Get CC value of this mail.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Message.Bcc">
            <summary>
            Get BCC value of this mail.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Message.BodyText">
            <summary>
            Get body text of this mail.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Message.Size">
            <summary>
            Get mail size of this mail.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Message.BodyContent">
            <summary>
            Get content of this mail message.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Message.Contents">
            <summary>
            Get pop3 content collection of this mail.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Message.InvalidFormat">
            <summary>
            Get a value that specify this mail format is valid or invalid.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Pop3.Pop3Message.BodyTextCreated">
            <summary>
            Get value that indicate body text is created or not.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.Command.Data">
            <summary>
            Representa el comando DATA.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.SmtpCommand">
            <summary>
            Implementa un interface para los comandos del servicio Smtp.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpCommand.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpCommand.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Data.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Data.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.Command.Ehlo">
            <summary>
            Representa el comando EHLO.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Ehlo.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Ehlo.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Ehlo.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Ehlo.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Ehlo.Domain">
            <summary>
            Dominio.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.Command.Ehlo.Result">
            <summary>
            Implementa el resultado de la ejecución del comando.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Ehlo.Result.#ctor">
            <summary>
            Devuelve una instancia de Result.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Ehlo.Result.Keyword">
            <summary>
            Keyword.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Ehlo.Result.Parameters">
            <summary>
            Parámetros.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.Command.Expn">
            <summary>
            Representa el comando EXPN.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Expn.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Expn.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Expn.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Expn.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Expn.MailingList">
            <summary>
            MailingList.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.Command.Helo">
            <summary>
            Representa el comando HELO.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Helo.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Helo.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Helo.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Helo.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Helo.Domain">
            <summary>
            Dominio.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.Command.Help">
            <summary>
            Representa el ocmando HELP.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Help.#ctor">
            <summary>
            Devuelve una instancia de Help.
            </summary> 
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Help.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Help.
            </summary> 
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Help.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Help.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Help.CommandName">
            <summary>
            Nombre del comando para el que se desea obtener ayuda.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.Command.Mail">
            <summary>
            Representa el ocmando MAIL.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Mail.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Mail.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Mail.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Mail.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Mail.ReversePath">
            <summary>
            ReversePath.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.Command.Noop">
            <summary>
            Representa el comando NOOP.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Noop.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Noop.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.Command.Quit">
            <summary>
            Representa el comando QUIT.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Quit.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Quit.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.Command.Rcpt">
            <summary>
            Representa el comando RCPT.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Rcpt.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Rcpt.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Rcpt.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Rcpt.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Rcpt.ForwardPath">
            <summary>
            ForwardPath.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.Command.Reset">
            <summary>
            Representa el comando RESET.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Reset.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Reset.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.SmtpCommandResult">
            <summary>
            Implementa una clase que representa el resultado de un comando Smtp.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpCommandResult.#ctor(Cosmo.Net.Smtp.SmtpCommandResultLine[])">
            <summary>
            Devuelve una instancia de SmtpCommandResult.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpCommandResult.StatusCode">
            <summary>
            Devuelve el código de estado.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpCommandResult.Message">
            <summary>
            Devuelve el mensaje.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.SmtpCommandResultLine">
            <summary>
            Implementa el resultado de un comando Smtp.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpCommandResultLine.#ctor(System.String)">
            <summary>
            Devuelve una instancia de SmtpCommandResultLine.
            </summary>
            <param name="inLine"></param>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpCommandResultLine.CheckFormat(System.String)">
            <summary>
            SMTPƒT[ƒo[‚©‚ç‚ÌƒŒƒXƒ|ƒ“ƒX‚ÌŒ‹‰Ê‚ðŽ¦‚·ƒRƒ}ƒ“ƒh‚Ì‘Ž®‚ª³‚µ‚¢‚©‚Ç‚¤‚©‚ðŽ¦‚·’l‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
            <param name="inLine"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpCommandResultLine.InvalidFormat">
            <summary>
            Indica si el formato no es válido.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpCommandResultLine.CodeNumber">
            <summary>
            Código del resultado del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpCommandResultLine.StatusCode">
            <summary>
            Código de estado del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpCommandResultLine.HasNextLine">
            <summary>
            Indica si exista otra línea de comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpCommandResultLine.Message">
            <summary>
            Mensaje.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.Command.Vrfy">
            <summary>
            Representa el comando VRFY.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Vrfy.#ctor(System.String)">
            <summary>
            Devuelve una instancia de Vrfy.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.Command.Vrfy.GetCommandString">
            <summary>
            Obtiene el texto de ejecución del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Vrfy.Name">
            <summary>
            Nombre del comando.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.Command.Vrfy.UserName">
            <summary>
            Nombre del usuario que se desea verificar.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.SmtpConnectException">
            <summary>
            Implementa una excepción para la conexión del servicio Smtp.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.SmtpException">
            <summary>
            Implementa una excepción para el servicio SMTP.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpException.#ctor">
            <summary>
            Devuelve una instancia de SmtpException.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de SmtpException.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpConnectException.#ctor">
            <summary>
            Devuelve una instancia de SmtpConnectException.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpConnectException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de SmtpConnectException.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.SmtpReceiveException">
            <summary>
            Implementa una excepción para la recepción de mensajes del servicio Smtp.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpReceiveException.#ctor">
            <summary>
            Devuelve una instancia de SmtpReceiveException.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpReceiveException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de SmtpReceiveException.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.SmtpSendException">
            <summary>
            Implementa una excepción para el envio de mensajes del servicio Smtp.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpSendException.#ctor">
            <summary>
            Devuelve una instancia de SmtpSendException.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpSendException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de SmtpSendException.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.SendMailResult">
            <summary>
            Implementa la respuesta de un envio de correo.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SendMailResult.#ctor">
            <summary>
            Devuelve una instancia de SendMailResult.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SendMailResult.#ctor(System.Boolean)">
            <summary>
            Devuelve una instancia de SendMailResult.
            </summary>
            <param name="inSendSuccessful">Indica si el envío ha sido satisfactório.</param>
        </member>
        <member name="P:Cosmo.Net.Smtp.SendMailResult.SendSuccessful">
            <summary>
            Indica si el envío ha sido satisfactório.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SendMailResult.InvalidMailAddressList">
            <summary>
            Contiene la lista de direcciones no válidas.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.SmtpAuthenticateMode">
            <summary>
            Enumera los tipos de autenticación soportados por el servicio Smtp.
            </summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpAuthenticateMode.Auto">
            <summary>Automático</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpAuthenticateMode.None">
            <summary>Sin autenticación</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpAuthenticateMode.Plain">
            <summary>Plain</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpAuthenticateMode.Login">
            <summary>Login</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpAuthenticateMode.Cram_MD5">
            <summary>Cram_MD5</summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.SmtpClient">
            <summary>
            Implementa el cliente Smtp.
            </summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpClient.DefaultPort">
            <summary>Puerto por defecto para el servicio Smtp.</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpClient.DefaultSslPort">
            <summary>Puerto por defecto para el servicio Smtp usando SSL.</summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.#ctor">
            <summary>
            Devuelve una instancia de SmtpClient.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.Open">
            <summary>
            ƒT[ƒo[‚Ö‚ÌÚ‘±‚ðŠJ‚«‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.EnsureOpen">
            <summary>
            ƒT[ƒo[‚Ö‚ÌÚ‘±‚ªŠJ‚©‚ê‚Ä‚¢‚È‚¢ê‡AƒT[ƒo[‚Ö‚ÌÚ‘±‚ðŠJ‚«‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.Authenticate">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖƒƒOƒCƒ“‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.AuthenticateByPlain">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖPlain”FØ‚ÅƒƒOƒCƒ“‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.AuthenticateByLogin">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖLogin”FØ‚ÅƒƒOƒCƒ“‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.AuthenticateByCramMD5">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖCRAM-MD5”FØ‚ÅƒƒOƒCƒ“‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.Execute(Cosmo.Net.Smtp.SmtpCommand)">
            <summary>
            “¯Šú‚ÅSMTPƒ[ƒ‹ƒT[ƒo[‚ÖƒRƒ}ƒ“ƒh‚ð‘—M‚µAƒRƒ}ƒ“ƒh‚ÌŽí—Þ‚É‚æ‚Á‚Ä‚ÍƒŒƒXƒ|ƒ“ƒXƒf[ƒ^‚ðŽóM‚µ‚Ä•Ô‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.ExecuteHelo">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖHELOƒRƒ}ƒ“ƒh‚ð‘—M‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.ExecuteEhlo">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖEHLOƒRƒ}ƒ“ƒh‚ð‘—M‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.ExecuteMail(System.String)">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖMAILƒRƒ}ƒ“ƒh‚ð‘—M‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.ExecuteRcpt(System.String)">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖRCPTƒRƒ}ƒ“ƒh‚ð‘—M‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.ExecuteData">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖDATAƒRƒ}ƒ“ƒh‚ð‘—M‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.ExecuteReset">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖRESETƒRƒ}ƒ“ƒh‚ð‘—M‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.ExecuteVrfy(System.String)">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖVRFYƒRƒ}ƒ“ƒh‚ð‘—M‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.ExecuteExpn(System.String)">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖEXPNƒRƒ}ƒ“ƒh‚ð‘—M‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.ExecuteHelp">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖHELPƒRƒ}ƒ“ƒh‚ð‘—M‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.ExecuteNoop">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖNOOPƒRƒ}ƒ“ƒh‚ð‘—M‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.ExecuteQuit">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÖQUITƒRƒ}ƒ“ƒh‚ð‘—M‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.SendMail(Cosmo.Net.Smtp.SmtpMessage)">
            <summary>
            Envia un mensaje de correo.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.SendMail(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            ƒ[ƒ‹‚ð‘—M‚µA‘—MŒ‹‰Ê‚Æ‚È‚éSendMailResult‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.SendMail(System.String,System.Collections.Generic.List{Cosmo.Net.Mail.MailAddress},System.Collections.Generic.List{Cosmo.Net.Mail.MailAddress},System.Collections.Generic.List{Cosmo.Net.Mail.MailAddress},System.String)">
            <summary>
            ƒ[ƒ‹‚ð‘—M‚µA‘—MŒ‹‰Ê‚Æ‚È‚éSendMailResult‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.Dispose">
            <summary>
            I—¹ˆ—‚ðŽÀs‚µAƒVƒXƒeƒ€ƒŠƒ\[ƒX‚ð‰ð•ú‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.Dispose(System.Boolean)">
            <summary>
            Libera los recursos usados por esta clase.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.Finalize">
            <summary>
            Libera los recursos usados por esta clase en el caso de que no se haya hecho usando Dispose().
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.GetTcpClient">
            <summary>
            Ú‘±æ‚ÌƒT[ƒo[‚Æ’ÊM‚ðs‚¤‚½‚ß‚ÌTcpClientƒIƒuƒWƒFƒNƒg‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.SetSmtpCommandState(Cosmo.Net.Smtp.SmtpCommand)">
            <summary>
            SMTPƒRƒ}ƒ“ƒh‚ÌŽí—Þ‚ÉŠî‚Ã‚¢‚Äó‘Ô‚ð•Ï‰»‚³‚¹‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.SetSmtpCommandState">
            <summary>
            ƒT[ƒo[‚©‚ç‚ÌƒŒƒXƒ|ƒ“ƒX‚ÌŽóMŽž‚ÉŒ»Ý‚Ìó‘Ô‚ÉŠî‚Ã‚¢‚Äó‘Ô‚ð•Ï‰»‚³‚¹‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.NeedAuthenticate(System.String)">
            <summary>
            SMTPƒT[ƒo[‚É”FØ‚ª•K—v‚©‚Ç‚¤‚©‚ðŽ¦‚·’l‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.StartTls">
            <summary>
            StartTLSƒRƒ}ƒ“ƒh‚ðƒT[ƒo[‚É‘Î‚µ‚Ä‘—M‚µAˆÃ†‰»‚³‚ê‚½’ÊM‚ðŠJŽn‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpClient.Execute(System.String)">
            <summary>
            “¯Šú‚ÅSMTPƒ[ƒ‹ƒT[ƒo[‚ÖƒRƒ}ƒ“ƒh‚ð‘—M‚µAƒRƒ}ƒ“ƒh‚ÌŽí—Þ‚É‚æ‚Á‚Ä‚ÍƒŒƒXƒ|ƒ“ƒXƒf[ƒ^‚ðŽóM‚µ‚Ä•Ô‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.AuthenticateMode">
            <summary>
            ”FØ‚Ì•û–@‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.UserName">
            <summary>
            ”FØ‚ÉŽg—p‚·‚éƒ†[ƒU[–¼‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.Password">
            <summary>
            ”FØ‚ÉŽg—p‚·‚éƒpƒXƒ[ƒh‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.ServerName">
            <summary>
            SMTPƒ[ƒ‹ƒT[ƒo[‚ÌƒT[ƒo[–¼‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.Port">
            <summary>
            ’ÊM‚ÉŽg—p‚·‚éPort”Ô†‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.HostName">
            <summary>
            ‘—MŒ³ƒ}ƒVƒ“‚ÌƒzƒXƒg–¼‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.Ssl">
            <summary>
            ’ÊM‚ðSSL‚ÅˆÃ†‰»‚·‚é‚©‚Ç‚¤‚©‚ðŽ¦‚·’l‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.Tls">
            <summary>
            ’ÊM‚ÉTLS‚ðŽg—p‚·‚é‚©‚Ç‚¤‚©‚ðŽ¦‚·’l‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.ReceiveTimeout">
            <summary>
            ŽóMˆ—‚Ìƒ^ƒCƒ€ƒAƒEƒg‚Ì•b”‚ðƒ~ƒŠ•b’PˆÊ‚ÅŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.ReceiveBufferSize">
            <summary>
            ŽóMƒf[ƒ^‚Ìƒoƒbƒtƒ@ƒTƒCƒY‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.ThreadSleepMilliseconds">
            <summary>
            ŽóMƒf[ƒ^‚ðŽæ“¾‚·‚éÛ‚ÉƒT[ƒo[‚©‚ç‚ÌƒŒƒXƒ|ƒ“ƒXƒf[ƒ^‚ð‘Ò‹@‚·‚é•b”‚ðƒ~ƒŠ•b’PˆÊ‚ÅŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.State">
            <summary>
            Ú‘±‚Ìó‘Ô‚ðŽ¦‚·’l‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.Available">
            <summary>
            ƒT[ƒo[‚ÖÚ‘±Ï‚Ý‚©‚Ç‚¤‚©‚ðŽ¦‚·’l‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.Commnicating">
            <summary>
            ƒT[ƒo[‚Æ’ÊM’†‚©‚Ç‚¤‚©‚ðŽ¦‚·’l‚ðŽæ“¾‚µ‚Ü‚·B
            ƒT[ƒo[‚ÉCommand‚ð‘—M‚µ‚Ä‚©‚çŽóMƒf[ƒ^‚ð‘S‚ÄŽóM‚µI‚í‚é‚Ü‚Å‚ÌŠÔAtrue‚ð•Ô‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.PopBeforeSmtp">
            <summary>
            PopBeforeSmtp”FØ‚ðs‚¤‚©‚Ç‚¤‚©‚ðŽ¦‚·’l‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpClient.Pop3Client">
            <summary>
            PopBeforeSmtp”FØ‚ðs‚¤ê‡‚ÉŽg—p‚³‚ê‚éPop3Client‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.SmtpConnectionState">
            <summary>
            Enumera los estados posibles de una conexión Smtp.
            </summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpConnectionState.Disconnected">
            <summary>Disconnected</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpConnectionState.Connected">
            <summary>Connected</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpConnectionState.Authenticated">
            <summary>Authenticated</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpConnectionState.MailFromCommandExecuting">
            <summary>MailFromCommandExecuting</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpConnectionState.MailFromCommandExecuted">
            <summary>MailFromCommandExecuted</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpConnectionState.RcptToCommandExecuting">
            <summary>RcptToCommandExecuting</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpConnectionState.RcptToCommandExecuted">
            <summary>RcptToCommandExecuted</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpConnectionState.DataCommandExecuting">
            <summary>DataCommandExecuting</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpConnectionState.DataCommandExecuted">
            <summary>DataCommandExecuted</summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.SmtpContent">
            <summary>
            Implementa un fragmento de contenido Mime del mensaje de correo para el servicio Smtp.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpContent.#cctor">
            <summary>
            Devuelve una instancia de SmtpContent.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpContent.#ctor">
            <summary>
            Devuelve una instancia de SmtpContent.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpContent.InitializeFileExtenstionContentType">
            <summary>
            Inicializa el objeto.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpContent.GetContentType(System.String)">
            <summary>
            Obtiene el tipo de contenido.
            </summary>
            <param name="inExtension"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpContent.LoadData(System.String)">
            <summary>
            Carga los datos.
            </summary>
            <param name="inFilePath"></param>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpContent.LoadData(System.Byte[])">
            <summary>
            Carga los datos.
            </summary>
            <param name="inByte"></param>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpContent.GetDataText">
            <summary>
            ŽÀÛ‚É‘—M‚³‚ê‚é•¶Žš—ñ‚Ìƒf[ƒ^‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
            <returns></returns>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpContent.Name">
            <summary>
            Name‚Ì’l‚ðŽæ“¾‚Ü‚½‚ÍÝ’è‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpContent.FileName">
            <summary>
            Nombre del archivo.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpContent.BodyText">
            <summary>
            Texto del cuerpo.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpContent.Contents">
            <summary>
            Una lista de las partes del mensaje que conforman la actual.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.SmtpMessage">
            <summary>
            Implementa un mensaje de correo electrónico para el servicio Smtp.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpMessage.#ctor">
            <summary>
            Devuelve una instancia de SmtpMessage.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpMessage.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de SmtpMessage.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpMessage.Initialize">
            <summary>
            Inicializa el mensaje de correo.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpMessage.GetDataText">
            <summary>
            ŽÀÛ‚É‘—M‚³‚ê‚é•¶Žš—ñ‚Ìƒf[ƒ^‚ðŽæ“¾‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpMessage.SetFromMailAddress(System.String,System.String)">
            <summary>
            ƒ†[ƒU[–¼‚Æƒ[ƒ‹ƒAƒhƒŒƒX‚ðFrom‚ÉƒZƒbƒg‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpMessage.CreateFromMailAddress(System.String,System.String)">
            <summary>
            ƒ†[ƒU[–¼‚Æƒ[ƒ‹ƒAƒhƒŒƒX‚ðŽ¦‚·•¶Žš—ñ‚ð¶¬‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Cosmo.Net.Smtp.SmtpMessage.CreateMailAddressListText(System.Collections.Generic.List{Cosmo.Net.Mail.MailAddress})">
            <summary>
            ƒ[ƒ‹ƒAƒhƒŒƒX‚Ìˆê——ƒf[ƒ^‚©‚çƒ[ƒ‹ƒAƒhƒŒƒX‚Ì•¶Žš—ñ‚ð¶¬‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpMessage.To">
            <summary>
            Contiene la lista de direcciones de correo de destino.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpMessage.Cc">
            <summary>
            Contiene la lista de direcciones de correo para recepción de copia.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpMessage.Bcc">
            <summary>
            Contiene la lista de direcciones de correo para recepción de copia oculta.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpMessage.HeaderEncoding">
            <summary>
            Contiene el tipo de codificación del encabezado del mensaje.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpMessage.HeaderTransferEncoding">
            <summary>
            Contiene el tipo de codificación usada para la transmisión del encabezado del mensaje.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpMessage.BodyText">
            <summary>
            Texto del cuerpo del mensaje.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Smtp.SmtpMessage.Contents">
            <summary>
            Contiene las distintas partes que conforman el contenido del mensaje.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Smtp.SmtpCommandResultCode">
            <summary>
            Enumera los códigos de resultado de un comando Smtp.
            </summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.None">
            <summary>Ningún código devuelto.</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.SystemStatus_OrSystemHelpReply">
            <summary>211:ƒVƒXƒeƒ€‚Ìó‘ÔBƒVƒXƒeƒ€ƒwƒ‹ƒv€”õŠ®—¹B</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.HelpMessage">
            <summary>214:ƒwƒ‹ƒvƒƒbƒZ[ƒWB</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.ServiceReady">
            <summary>220:€”õŠ®—¹B</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.ServiceClosingTransmissionChannel">
            <summary>221:Ú‘±‚ð•Â‚¶‚éB</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.AuthenticationSuccessful">
            <summary>235:”FØ‚Í¬Œ÷B</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.RequestedMailActionOkay_Completed">
            <summary>250:—v‹‚³‚ê‚½ˆ—‚ÍŽÀs‰Â”\BŠ®—¹B</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.UserNotLocal_WillForwardTo">
            <summary>251:ŽóMŽÒ‚ª‘¶Ý‚µ‚È‚¢‚Ì‚Å[forward-path]‚É“]‘—‚·‚éB</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.CannotVerifyUser_ButWillAcceptMessageAndAttemptDelivery">
            <summary>252:ƒ†[ƒU[‚ÌŠm”F‚ÉŽ¸”sB‚µ‚©‚µƒƒbƒZ[ƒWŽóM‚³‚ê”z‘—‚³‚ê‚éB</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.WaitingForAuthentication">
            <summary>334:”FØˆ—‚ð‘Ò‹@’†</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.StartMailInput">
            <summary>354:ƒ[ƒ‹‚Ì“ü—ÍŠJŽnB“ü—ÍI—¹‚Íu.v‚Ì‚Ý‚Ìs‚ð‘—MB</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.ServiceNotAvailable_ClosingTransmissionChannel">
            <summary>421:ƒT[ƒrƒX‚Í—˜—p•s”\BÚ‘±‚ð•Â‚¶‚éB</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.APasswordTransitionIsNeeded">
            <summary>432:ƒpƒXƒ[ƒh‚Ì•ÏX‚ª•K—vB</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.RequestedMailActionNotTaken_MailboxUnavailable">
            <summary>450:ƒ[ƒ‹ƒ{ƒbƒNƒX‚ª—˜—p‚Å‚«‚È‚¢‚½‚ßA—v‹‚³‚ê‚½ˆ—‚ÍŽÀs•s”\B</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.RequestedActionAborted_ErrorInProcessing">
            <summary>451:ˆ—’†‚ÉƒGƒ‰[‚ª”­¶B—v‹‚³‚ê‚½ˆ—‚ÍŽ¸”sB</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.TemporaryAuthenticationFailure">
            <summary>454:ˆêŽž“I‚È”FØŽ¸”sB</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.SyntaxError_CommandUnrecognized">
            <summary>500:•¶–@‚ÉŠÔˆá‚¢‚ª‚ ‚é‚½‚ßAƒRƒ}ƒ“ƒh‚ª—‰ð‚Å‚«‚È‚¢B</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.SyntaxErrorInParametersOrArguments">
            <summary>501:ˆø”‚Ì•¶–@‚ÉŠÔˆá‚¢‚ª‚ ‚éB</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.CommandNotImplemented">
            <summary>502:ŽwŽ¦‚³‚ê‚½ƒRƒ}ƒ“ƒh‚Í‚±‚ÌƒVƒXƒeƒ€‚É‚ÍŽÀ‘•‚³‚ê‚Ä‚¢‚È‚¢B</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.BadSequenceOfCommands">
            <summary>503:ƒRƒ}ƒ“ƒh‚Ì”­s‡˜‚ªŠÔˆá‚Á‚Ä‚¢‚éB</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.CommandParameterNotImplemented">
            <summary>504:ƒRƒ}ƒ“ƒh‚Ìˆø”‚ª–¢’è‹`B</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.AuthenticationRequired">
            <summary>530:”FØ‚ª•K—vB</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.EncryptionRequiredForRequestedAuthenticationMechanism">
            <summary>538:—v‹‚³‚ê‚½”FØˆ—‚É‚ÍˆÃ†‰»‚ª•K—vB</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.RequestedActionNotTaken_MailboxUnavailable">
            <summary>550:ƒ[ƒ‹ƒ{ƒbƒNƒX‚ª—˜—p‚Å‚«‚È‚¢‚½‚ßA—v‹‚³‚ê‚½ˆ—‚ÍŽÀs•s”\B</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.UserNotLocal_PleaseTry">
            <summary>551:ŽóMŽÒ‚ª‘¶Ý‚µ‚È‚¢B[forward-path]‚É‘—M‚¹‚æB</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.RequestedMailActionAborted_ExceededStorageAllocation">
            <summary>552:ƒfƒBƒXƒN•s‘«‚Ì‚½‚ßA—v‹‚³‚ê‚½ˆ—‚ÍŽÀs•s”\B</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.RequestedActionNotTaken_MailboxNameNotAllowed">
            <summary>553:ƒfƒBƒXƒN•s‘«‚Ì‚½‚ßA—v‹‚³‚ê‚½ˆ—‚ÍŽÀs•s”\B</summary>
        </member>
        <member name="F:Cosmo.Net.Smtp.SmtpCommandResultCode.TransactionFailed">
            <summary>554:ˆ—Ž¸”sB</summary>
        </member>
        <member name="T:Cosmo.Net.Url">
            <summary>
            Implementa una clase para la gestión de URLs.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Url.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Net.Url"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Url.#ctor(System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Net.Url"/>.
            </summary>
            <param name="url">La dirección URL.</param>
        </member>
        <member name="M:Cosmo.Net.Url.#ctor(System.String,System.String)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Net.Url"/>.
            </summary>
            <param name="url">La dirección URL.</param>
            <param name="anchorName">Nombre del enlace interno.</param>
        </member>
        <member name="M:Cosmo.Net.Url.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Net.Url"/>.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Url.ContainsKey(System.String)">
            <summary>
            Indica si una clave existe entre los parámetros recibidos.
            </summary>
            <param name="key">Una cadena de texto que representa la clave a comprobar.</param>
            <returns><c>true</c> si la colección contiene la clave o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetString(System.String,System.String)">
            <summary>
            Obtiene el valor en formato texto de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <param name="defaultvalue">Valor que devolverá en caso de no existir o no podre interpretarlo</param>
            <returns>El contenido String del parámetro</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetString(System.String)">
            <summary>
            Obtiene el valor en formato texto de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <returns>El contenido String del parámetro</returns>
            <remarks>En caso de no existir el parámetro, devuelve una cadena vacía</remarks>
        </member>
        <member name="M:Cosmo.Net.Url.GetInteger(System.String,System.Int32)">
            <summary>
            Obtiene el valor entero (int) de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <param name="defaultvalue">Valor que devolverá en caso de no existir o no podre interpretarlo</param>
            <returns>El valor numérico entero del parámetro</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetInteger(System.String)">
            <summary>
            Obtiene el valor entero (int) de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <returns>El valor numérico entero del parámetro</returns>
            <remarks>En caso de no existir el parámetro, devuelve una valor 0</remarks>
        </member>
        <member name="M:Cosmo.Net.Url.GetBoolean(System.String,System.Boolean)">
            <summary>
            Obtiene el valor booleano de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <param name="defaultvalue">Valor que devolverá en caso de no existir o no podre interpretarlo</param>
            <returns>El valor booleano del parámetro</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetBoolean(System.String)">
            <summary>
            Obtiene el valor booleano de un parámetro
            </summary>
            <param name="name">Nombre del parámetro</param>
            <returns>El valor booleano del parámetro</returns>
            <remarks>En caso de no existir el parámetro, devuelve una valor false</remarks>
        </member>
        <member name="M:Cosmo.Net.Url.ClearParameters">
            <summary>
            Elimina los parámetros de la Url.
            </summary>
        </member>
        <member name="M:Cosmo.Net.Url.ClearParameters(System.String)">
            <summary>
            Elimina los parámetros de la Url.
            </summary>
            <param name="except">Nombre del parámetro a mantener.</param>
        </member>
        <member name="M:Cosmo.Net.Url.ClearParameters(System.String[])">
            <summary>
            Elimina los parámetros de la Url.
            </summary>
            <param name="except">Un array con los nombres de los parámetros a mantener.</param>
        </member>
        <member name="M:Cosmo.Net.Url.AddParameter(System.String,System.String)">
            <summary>
            Agrega un nuevo parámetro a la Url.
            </summary>
            <param name="name">Nombre del parámetro.</param>
            <param name="value">Valor del parámetro.</param>
        </member>
        <member name="M:Cosmo.Net.Url.AddParameter(System.String,System.Int32)">
            <summary>
            Agrega un nuevo parámetro numérico (entero) a la Url.
            </summary>
            <param name="name">Nombre del parámetro.</param>
            <param name="value">Valor del parámetro.</param>
        </member>
        <member name="M:Cosmo.Net.Url.AddParameter(System.String,System.Boolean)">
            <summary>
            Agrega un nuevo parámetro booleano a la Url.
            </summary>
            <param name="name">Nombre del parámetro.</param>
            <param name="value">Valor del parámetro.</param>
        </member>
        <member name="M:Cosmo.Net.Url.ToLink(System.String)">
            <summary>
            Convierte una URL o un eMail en un enlace Html.
            </summary>
            <param name="text">Texto que aparecerá en el enlace.</param>
            <returns>Un enlace XHTML.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.ToLink">
            <summary>
            Convierte una URL o un eMail en un enlace Html.
            </summary>
            <returns>Un enlace XHTML.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.IsValid">
            <summary>
            Indica si la Url es válida.
            </summary>
            <returns><c>true</c> si la Url es válida o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetEncodedURL(System.String)">
            <summary>
            Obtiene la URL resultante con los parámetros codificados.
            </summary>
            <param name="script">Nombre del script.</param>
            <returns>Una cadena de texto que representa la URL.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetEncodedURL(System.String,System.Boolean)">
            <summary>
            Obtiene la URL resultante con los parámetros codificados.
            </summary>
            <param name="script">Nombre del script.</param>
            <param name="clearAfetr">Indica si debe eliminar los parámetros después de devolver la URL.</param>
            <returns>Una cadena de texto que representa la URL.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.ToString">
            <summary>
            Transforma la Url a una cadena de texto.
            </summary>
            <returns>La cadena de texto.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.ToString(System.Boolean)">
            <summary>
            Transforma la Url a una cadena de texto.
            </summary>
            <param name="includeUrl">Indica si debe incluir el nombre del archivo o sólo devolver los parámetros.</param>
            <returns>La cadena de texto.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.ToString(System.Boolean,System.Boolean)">
            <summary>
            Transforma la Url a una cadena de texto.
            </summary>
            <param name="includeUrl">Indica si debe incluir el nombre del archivo o sólo devolver los parámetros.</param>
            <param name="htmlEncoded">Indica si debe codificar la URL para su uso en XHTML.</param>
            <returns>La cadena de texto.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetString(System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            Permite recuperar un parámetro String del QueryString
            </summary>
            <param name="parameters">Parámetros (Request.Params).</param>
            <param name="name">Nombre del parámetro a recuperar.</param>
            <param name="defaultvalue">Valor por defecto en caso de no poder obtener dicho valor.</param>
            <returns>El valor resultante.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetString(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Permite recuperar un parámetro String del QueryString
            </summary>
            <param name="parameters">Parámetros (Request.Params).</param>
            <param name="name">Nombre del parámetro a recuperar.</param>
            <returns>El valor resultante.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetInteger(System.Collections.Specialized.NameValueCollection,System.String,System.Int32)">
            <summary>
            Permite recuperar un parámetro Integer del QueryString
            </summary>
            <param name="parameters">Parámetros (Request.Params).</param>
            <param name="name">Nombre del parámetro a recuperar.</param>
            <param name="defaultvalue">Valor por defecto en caso de no poder obtener dicho valor.</param>
            <returns>El valor resultante.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetInteger(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Permite recuperar un parámetro Integer del QueryString
            </summary>
            <param name="parameters">Parámetros (Request.Params).</param>
            <param name="name">Nombre del parámetro a recuperar.</param>
            <returns>El valor resultante.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetBoolean(System.Collections.Specialized.NameValueCollection,System.String,System.Boolean)">
            <summary>
            Obtiene el valor booleano de un parámetro
            </summary>
            <param name="parameters">La colección de parámetros recibidos.</param>
            <param name="name">Nombre del parámetro</param>
            <param name="defaultvalue">Valor que devolverá en caso de no existir o no podre interpretarlo</param>
            <returns>El valor booleano del parámetro</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetBoolean(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Obtiene el valor booleano de un parámetro.
            </summary>
            <param name="parameters">La colección de parámetros recibidos.</param>
            <param name="name">Nombre del parámetro.</param>
            <returns>El valor booleano del parámetro.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetDateTime(System.Collections.Specialized.NameValueCollection,System.String,System.DateTime)">
            <summary>
            Obtiene la fecha/hora de un parámetro.
            </summary>
            <param name="parameters">La colección de parámetros recibidos.</param>
            <param name="name">Nombre del parámetro</param>
            <param name="defaultvalue">Valor que devolverá en caso de no existir o no podre interpretarlo</param>
            <returns>El valor <see cref="T:System.DateTime"/> del parámetro.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.GetDateTime(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Obtiene la fecha/hora de un parámetro.
            </summary>
            <param name="parameters">La colección de parámetros recibidos.</param>
            <param name="name">Nombre del parámetro.</param>
            <returns>El valor <see cref="T:System.DateTime"/> del parámetro.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.FromUrl(System.String)">
            <summary>
            Obtiene los parámetros desde una URL (con o sin el nombre de archivo).
            </summary>
            <param name="url">URL a tratar.</param>
            <returns>Una instancia de <see cref="T:Cosmo.Net.Url"/>.</returns>
            <remarks>Para recojer la URL actual: Request.Url.AbsoluteUri</remarks>
        </member>
        <member name="M:Cosmo.Net.Url.Combine(System.String,System.String)">
            <summary>
            Compina dos fragmentos de URL
            </summary>
            <returns>Los fragmentos combinados.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.Combine(System.String[])">
            <summary>
            Compina dos o más fragmentos de URL
            </summary>
            <returns>Los fragmentos combinados.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.IsValid(System.String)">
            <summary>
            Permite verificar si una URL es válida.
            </summary>
            <param name="url">URL a verificar.</param>
            <returns>Un valor booleano indicando la validez.</returns>
        </member>
        <member name="M:Cosmo.Net.Url.ConvertToLink(System.String,System.String)">
            <summary>
            Convierte una URL o un ex-Mail en un enlace Html
            </summary>
            <param name="address">Dirección de mail o URL</param>
            <param name="text">Texto que se mostrará en el enlace.</param>
            <returns>Un enlace XHTML</returns>
        </member>
        <member name="M:Cosmo.Net.Url.ConvertToLink(System.String)">
            <summary>
            Convierte una URL o un ex-Mail en un enlace Html
            </summary>
            <param name="address">Dirección de mail o URL</param>
            <returns>Un enlace XHTML</returns>
        </member>
        <member name="M:Cosmo.Net.Url.Browse(System.String)">
            <summary>
            Navega hacia una determinada URL usando el navegador por defecto.
            </summary>
            <param name="url">URL de destino.</param>
        </member>
        <member name="P:Cosmo.Net.Url.AnchorName">
            <summary>
            Devuelve o establece el nombre del ancla.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Url.Filename">
            <summary>
            Devuelve o establece el nombre del archivo.
            </summary>
        </member>
        <member name="P:Cosmo.Net.Url.Parameters">
            <summary>
            Contiene la lista de parámetros de la Url.
            </summary>
        </member>
        <member name="T:Cosmo.Net.Url.Encryption">
            <summary>
            Clase privada para encriptación/desencriptación del QueryString
            </summary>
        </member>
        <member name="T:Cosmo.Platform.Account">
            <summary>
            Implementa una cuenta de usuario del entorno Cosmo.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Account.#ctor">
            <summary>
            Devuelve una instancia de Account.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Account.Login">
            <summary>
            Login del usuario.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Account.Password">
            <summary>
            Contraseña de acceso.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Account.Name">
            <summary>
            Nombre completo del usuario.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Account.Description">
            <summary>
            Descripción del usuario.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Account.Mail">
            <summary>
            Cuenta de correo de contacto.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Account.RoleID">
            <summary>
            Identificador del rol al que pertenece.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Account.RoleName">
            <summary>
            Nombre del rol de usuario
            </summary>
            <remarks>
            Esta propiedad sólo se rellena al recuperar la información de un usuario 
            de un modo meramente informativo. Para asignar un rol se debe usar la
            propiedad MWUser.RoleID
            </remarks>
        </member>
        <member name="P:Cosmo.Platform.Account.IsAdministrator">
            <summary>
            Indica si la cuenta es administrativa.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Account.Enabled">
            <summary>
            Indica si la cuenta está habilitada.
            </summary>
        </member>
        <member name="T:Cosmo.Platform.Accounts">
            <summary>
            Implementa una clase de servicio para la gestión de usuarios del entorno
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Accounts.#ctor(Cosmo.Platform.Server)">
            <summary>
            Constructor de la clase MWUsers.
            </summary>
            <param name="connection">Una instáncia de MWConnection para manejar las conexiones a la BBDD.</param>
        </member>
        <member name="M:Cosmo.Platform.Accounts.List">
            <summary>
            Devuelve una lista de todos los usuarios
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Accounts.Item(System.String)">
            <summary>
            Obtiene las propiedades de un usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <returns>Una instáncia de MWUser.</returns>
        </member>
        <member name="M:Cosmo.Platform.Accounts.Update(Cosmo.Platform.Account)">
            <summary>
            Actualiza los datos de un usuario editor.
            </summary>
            <param name="user">Una instáncia MWUser que contiene los datos aqctualizados.</param>
            <remarks>
            Este método no permite establecer una nueva contraseña. Para cambiar la contraseña,
            use el método SetPassword().
            </remarks>
        </member>
        <member name="M:Cosmo.Platform.Accounts.Add(Cosmo.Platform.Account)">
            <summary>
            Crea una nueva cuenta de usuario editor.
            </summary>
            <param name="user">Una instáncia de MWUser que contiene las propiedades de la cuenta.</param>
        </member>
        <member name="M:Cosmo.Platform.Accounts.Delete(System.String)">
            <summary>
            Elimina una cuenta de usuario
            </summary>
            <param name="login">Login de la cuenta a eliminar.</param>
        </member>
        <member name="M:Cosmo.Platform.Accounts.Login(System.String,System.String)">
            <summary>
            Verifica una acción de Login.
            </summary>
            <param name="login">Nombre del usuario.</param>
            <param name="password">Contraseña del usuario.</param>
            <returns>Una instáncia MWUser del usuario validado. En caso de error, genera una excepción.</returns>
        </member>
        <member name="M:Cosmo.Platform.Accounts.SetPassword(System.String,System.String,System.String)">
            <summary>
            Permite modificar la contraseña de un usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <param name="currentpassword">Contraseña original.</param>
            <param name="newPassword">Nueva contraseña.</param>
        </member>
        <member name="M:Cosmo.Platform.Accounts.SetPassword(System.String,System.String)">
            <summary>
            Permite modificar la contraseña de un usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <param name="newPassword">Nueva contraseña.</param>
        </member>
        <member name="M:Cosmo.Platform.Accounts.IsValidLogin(System.String)">
            <summary>
            Testea si el formato de un Login es válido.
            </summary>
            <param name="login">Texto a testear.</param>
            <returns>Un valor booleano indicando el resultado del test.</returns>
        </member>
        <member name="T:Cosmo.Platform.AccountSession">
            <summary>
            Implementa una sesión de trabajo con un workspace
            </summary>
        </member>
        <member name="M:Cosmo.Platform.AccountSession.#ctor">
            <summary>
            Devuelve una instancia de AccountSession
            </summary>
        </member>
        <member name="P:Cosmo.Platform.AccountSession.User">
            <summary>
            Cuenta de usuario propietario de la sesión
            </summary>
        </member>
        <member name="P:Cosmo.Platform.AccountSession.WorkspaceID">
            <summary>
            Identificador del workspace
            </summary>
        </member>
        <member name="T:Cosmo.Platform.Applications.Command">
            <summary>
            Implementa un comando asociado a un módulo de aplicación
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Applications.Command.#ctor">
            <summary>
            Dev uelve una instancia de MWCommand.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Command.ID">
            <summary>
            Identificador único del comando
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Command.ModuleID">
            <summary>
            Identificador del módulo al que pertenece
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Command.Name">
            <summary>
            Nombre del comando
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Command.Description">
            <summary>
            Descripción extendida del comando
            </summary>
            <remarks>
            Acepta TAGs HTML.
            </remarks>
        </member>
        <member name="P:Cosmo.Platform.Applications.Command.Type">
            <summary>
            Tipo de comando
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Command.ComVBScript">
            <summary>
            Script VBS que se ejecuta (sólo para objetos COM)
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Command.NetMethodName">
            <summary>
            Nombre del método a ejecutar (sólo para objetos .NET)
            </summary>
        </member>
        <member name="T:Cosmo.Platform.Applications.Command.CommandTypes">
            <summary>
            Tipos de comandos
            </summary>
        </member>
        <member name="F:Cosmo.Platform.Applications.Command.CommandTypes.Treeview">
            <summary>Se añade como una carpeta del árbol</summary>
        </member>
        <member name="F:Cosmo.Platform.Applications.Command.CommandTypes.Menuitem">
            <summary>Se añade como una herramienta en la barar de herramientas</summary>
        </member>
        <member name="T:Cosmo.Platform.Applications.Module">
            <summary>
            Implementa un módulo de una aplicación
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Applications.Module.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Applications.Module.CreateInstance(Cosmo.Platform.Account,Cosmo.Workspace.Workspace)">
            <summary>
            Obtiene la instáncia del objeto.
            </summary>
            <returns>La instáncia.</returns>
        </member>
        <member name="M:Cosmo.Platform.Applications.Module.GetCommand(System.String)">
            <summary>
            Obtiene un comando del módulo.
            </summary>
            <param name="id">Identificador del módulo.</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Module.GetContainerTypeName(Cosmo.Platform.Applications.Module.ContainerTypes)">
            <summary>
            Devuelve un nombre para un tipo de contenedor.
            </summary>
            <param name="type">Tipo de contenedor.</param>
        </member>
        <member name="P:Cosmo.Platform.Applications.Module.ID">
            <summary>
            Devuelve o establece el identificador único del módulo
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Module.Name">
            <summary>
            Devuelve o establece el nombre del módulo
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Module.Description">
            <summary>
            Devuelve o establece la descripción del módulo
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Module.ClassName">
            <summary>
            Devuelve o establece el nombre de la clase
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Module.HelpContextID">
            <summary>
            Devuelve o establece el identificador de la ayuda
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Module.ApplicationID">
            <summary>
            Devuelve o establece el identificador de la aplicación a la que pertenece
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Module.ApplicationName">
            <summary>
            Devuelve el nombre de la aplicación a la que pertenece
            </summary>
            <remarks>Al recuperar el elemento se actualiza con el nombre de la aplicación. Sólo a efectos informativos.</remarks>
        </member>
        <member name="P:Cosmo.Platform.Applications.Module.File">
            <summary>
            Devuelve o establece el nombre (sin ruta) del archivo que contiene la clase (usualmente una DLL)
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Module.Version">
            <summary>
            Devuelve o establece la versión del módulo
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Module.ContainerType">
            <summary>
            Devuelve o establece el tipo de módulo
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Module.Commands">
            <summary>
            Lista de comandos associados al módulo
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Module.Instance">
            <summary>
            La instancia del módulo
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Module.InstanceError">
            <summary>
            Si se produjo un error al crear la instáncia mediante el método CreateInstance() este valor
            será cierto, de lo contrario, será falso.
            </summary>
        </member>
        <member name="T:Cosmo.Platform.Applications.Module.ContainerTypes">
            <summary>
            Define los tipos de componente (COM+ o .NET)
            </summary>
        </member>
        <member name="F:Cosmo.Platform.Applications.Module.ContainerTypes.Explorer">
            <summary>Módulos que usan el contenedor de tipo Explorer</summary>
        </member>
        <member name="F:Cosmo.Platform.Applications.Module.ContainerTypes.Http">
            <summary>Módulos de acceso por internet</summary>
        </member>
        <member name="F:Cosmo.Platform.Applications.Module.ContainerTypes.Custom">
            <summary>Módulos que usan un control propietario</summary>
        </member>
        <member name="T:Cosmo.Platform.Applications.Program">
            <summary>
            Implementa una aplicación
            </summary>
        </member>
        <member name="F:Cosmo.Platform.Applications.Program.OBJECT_ID">
            <summary>Identificador del tipo de objeto.</summary>
        </member>
        <member name="F:Cosmo.Platform.Applications.Program.OBJECT_VER">
            <summary>Versión del paquete Cosmo.</summary>
        </member>
        <member name="F:Cosmo.Platform.Applications.Program.OBJECT_FILEEXTENSION">
            <summary>Extensión de los paquetes Cosmo.</summary>
            <remarks>Sin punto separador.</remarks>
        </member>
        <member name="M:Cosmo.Platform.Applications.Program.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Applications.Program.#ctor(System.Int32)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Applications.Program.GetIndex(System.String)">
            <summary>
            Devuelve el índice de un determinado módulo dentro de la propiedad Modules.
            </summary>
            <param name="id">Identioficador del módulo.</param>
            <returns>El índice del módulo dentro del array Modules.</returns>
        </member>
        <member name="M:Cosmo.Platform.Applications.Program.GetLibraries">
            <summary>
            Devuelve una lista de los archivos (DLL) que implementas los módulos de la aplicación.
            </summary>
            <remarks>
            Esta lista coincide con la lista de archivos requeridos por una aplicación.
            </remarks>
        </member>
        <member name="P:Cosmo.Platform.Applications.Program.ID">
            <summary>
            Identificador único de la aplicación en la base de datos.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Program.Name">
            <summary>
            Nombre de la aplicación.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Program.Description">
            <summary>
            Descripción de la aplicación.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Program.Author">
            <summary>
            Autor/Copyright de la aplicación.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Program.Version">
            <summary>
            Versión de la aplicación.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Program.LicenceKey">
            <summary>
            Clave de la licencia.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Program.Licences">
            <summary>
            Número de licencias (usuarios concurrentes).
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Program.SQLScript">
            <summary>
            Script T/SQL que genera la estructura de datos própia de la aplicación.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Program.PackageFile">
            <summary>
            Nombre del archivo MWP dónde está empaquetada la aplicación (sin path).
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Program.FileName">
            <summary>
            Nombre y ruta del archivo MWP usado para cargar la aplicación usando el método Load().
            </summary>
            <remarks>Actualiza el contenido de la propiedad PackageFile.</remarks>
        </member>
        <member name="P:Cosmo.Platform.Applications.Program.Modules">
            <summary>
            Módulos que forman la aplicación.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Program.Files">
            <summary>
            Lista de archivos que componen la aplicación.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Program.Enabled">
            <summary>
            Indica si la aplicación está habilitada o deshabilitada.
            </summary>
        </member>
        <member name="T:Cosmo.Platform.Applications.ProgramFile">
            <summary>
            Implementa un archivo adjunto a una aplicación.
            </summary>
            <remarks>
            Clase usada para la instalación y/o generación de paquetes de instalación Cosmo.
            </remarks>
        </member>
        <member name="M:Cosmo.Platform.Applications.ProgramFile.#ctor">
            <summary>
            Devuelve una instancia de MWApplicationFile.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Applications.ProgramFile.#ctor(System.String,Cosmo.Workspace.WorkspaceFolders)">
            <summary>
            Devuelve una instancia de MWApplicationFile.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Applications.ProgramFile.Save(System.String)">
            <summary>
            Guarda el archivo en una carpeta específica.
            </summary>
            <param name="path">Ruta dónde se debe almacenar el archivo.</param>
            <remarks>Si el archivo existe, lo sobreescribe.</remarks>
        </member>
        <member name="P:Cosmo.Platform.Applications.ProgramFile.FileName">
            <summary>
            Contiene de forma temporal el nombre y ruta del archivo.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.ProgramFile.Name">
            <summary>
            Nombre del archivo.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.ProgramFile.Destination">
            <summary>
            Carpeta de destino dónde se debe almacenar el archivo.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.ProgramFile.Length">
            <summary>
            Contiene la longitud (en bytes) del archivo (en el buffer).
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.ProgramFile.Buffer">
            <summary>
            Buffer que contiene el archivo.
            </summary>
        </member>
        <member name="T:Cosmo.Platform.Applications.ProgramLibrary">
            <summary>
            Implementa un archivo DLL que contiene uno o más módulos implementados.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Applications.ProgramLibrary.#ctor(System.String,System.String)">
            <summary>
            Devuelve una instancia de ProgramLibrary.
            </summary>
            <param name="filename">Nombre del archivo (sin ruta).</param>
            <param name="version">Versión de la libreria.</param>
        </member>
        <member name="P:Cosmo.Platform.Applications.ProgramLibrary.Filename">
            <summary>
            Nombre del archivo (sin ruta).
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.ProgramLibrary.Version">
            <summary>
            Versión de la libreria.
            </summary>
        </member>
        <member name="T:Cosmo.Platform.CommonSettingsKey">
            <summary>
            Implementa una clave de condifuración para el registro común del servidor.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.CommonSettingsKey.#ctor">
            <summary>
            Devuelve una instancia de CommonSettingsKey
            </summary>
        </member>
        <member name="M:Cosmo.Platform.CommonSettingsKey.#ctor(System.String,System.String)">
            <summary>
            Devuelve una instancia de CommonSettingsKey
            </summary>
        </member>
        <member name="P:Cosmo.Platform.CommonSettingsKey.Key">
            <summary>
            Devuelve o establece la clave de acceso al valor de configuración
            </summary>
        </member>
        <member name="P:Cosmo.Platform.CommonSettingsKey.Value">
            <summary>
            Devuelve o establece el valor de configuración
            </summary>
        </member>
        <member name="T:Cosmo.Platform.CommonSettingsKeys">
            <summary>
            Claves comunes de configuración para el entorno Cosmo.
            </summary>
        </member>
        <member name="F:Cosmo.Platform.CommonSettingsKeys.BackupDefaultPath">
            <summary>Ruta por defecto para gusrdar las copias de seguridad</summary>
        </member>
        <member name="F:Cosmo.Platform.CommonSettingsKeys.WorkspacesFSRootFolderName">
            <summary>Nombre de la carpeta que contiene los archivos de datos dentro de un workspace</summary>
        </member>
        <member name="F:Cosmo.Platform.CommonSettingsKeys.WebServerRoot">
            <summary>Ruta a la raíz del servidor web que contiene los workspaces</summary>
        </member>
        <member name="T:Cosmo.Platform.DigitalSignature">
            <summary>
            Implementa una firma digital HTML
            </summary>
            <remarks>NOTA: No confundir con firma digital certificada</remarks>
        </member>
        <member name="M:Cosmo.Platform.DigitalSignature.#ctor">
            <summary>
            Constructora de la clase
            </summary>
        </member>
        <member name="M:Cosmo.Platform.DigitalSignature.#ctor(System.String)">
            <summary>
            Constructora de la clase
            </summary>
            <param name="signature">Firma en formato HTML</param>
        </member>
        <member name="M:Cosmo.Platform.DigitalSignature.CreateHtml">
            <summary>
            Genera la firma en formato XHTML.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.DigitalSignature.ID">
            <summary>
            Identificador de la firma digital
            </summary>
        </member>
        <member name="P:Cosmo.Platform.DigitalSignature.Name">
            <summary>
            Nombre
            </summary>
        </member>
        <member name="P:Cosmo.Platform.DigitalSignature.Address">
            <summary>
            Dirección de mail o web
            </summary>
        </member>
        <member name="P:Cosmo.Platform.DigitalSignature.Copyright">
            <summary>
            Indica si la firma especifica Copyright
            </summary>
        </member>
        <member name="P:Cosmo.Platform.DigitalSignature.Type">
            <summary>
            Tipo de firma
            </summary>
        </member>
        <member name="P:Cosmo.Platform.DigitalSignature.Html">
            <summary>
            Contenido HTML de la firma
            </summary>
        </member>
        <member name="T:Cosmo.Platform.DigitalSignature.SignatureAddressType">
            <summary>
            Tipos de firma digital
            </summary>
        </member>
        <member name="F:Cosmo.Platform.DigitalSignature.SignatureAddressType.None">
            <summary>Sin enlace</summary>
        </member>
        <member name="F:Cosmo.Platform.DigitalSignature.SignatureAddressType.URL">
            <summary>Enlace web</summary>
        </member>
        <member name="F:Cosmo.Platform.DigitalSignature.SignatureAddressType.Mail">
            <summary>Enlace a email</summary>
        </member>
        <member name="T:Cosmo.Platform.Profile">
            <summary>
            Implementa un perfil de usuario
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Profile.#ctor">
            <summary>
            Devuelve una instancia de Profile
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Profile.ID">
            <summary>
            Identificador único del perfil
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Profile.Name">
            <summary>
            Nombre del perfil
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Profile.Description">
            <summary>
            Derscripción del perfil
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Profile.IsAdministrative">
            <summary>
            Indica si es un grupo de administradores (con derecho sobre cualquier objeto)
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Profile.Enabled">
            <summary>
            Indica si el perfil está activo
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Profile.Permissions">
            <summary>
            Contiene una lista de los permisos asignados a los usuarios de este grupo
            </summary>
        </member>
        <member name="T:Cosmo.Platform.ProfilePermission">
            <summary>
            Implementa un permiso asignado a un perfil de usuario
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ProfilePermission.RoleID">
            <summary>
            Identificador del rol
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ProfilePermission.ModuleID">
            <summary>
            Identificador del módulo
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ProfilePermission.ModuleName">
            <summary>Devuelve el nombre del módulo</summary>
            <remarks>Este campoi es sólo para funciones informativas</remarks>
        </member>
        <member name="P:Cosmo.Platform.ProfilePermission.ApplicationName">
            <summary>Devuelve el nombre de la aplicación</summary>
            <remarks>Este campoi es sólo para funciones informativas</remarks>
        </member>
        <member name="T:Cosmo.Platform.ServerNotDefinedException">
            <summary>
            Implementa una excepción que se lanza cuando no hay conexión al servidor definida
            </summary>
        </member>
        <member name="M:Cosmo.Platform.ServerNotDefinedException.#ctor">
            <summary>
            Devuelve una instancia de ServerConnectionNotDefinedException
            </summary>
        </member>
        <member name="M:Cosmo.Platform.ServerNotDefinedException.#ctor(System.Exception)">
            <summary>
            Devuelve una instancia de ServerConnectionNotDefinedException
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerNotDefinedException.Message">
            <summary>
            Mensaje descriptivo de la excepción
            </summary>
        </member>
        <member name="T:Cosmo.Platform.DigitalSignatures">
            <summary>
            Implementa una clase para la gestión de firmas digitales.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.DigitalSignatures.#ctor(Cosmo.Platform.Server)">
            <summary>
            Devuelve una instancia de DigitalSignatures
            </summary>
            <param name="connection">Conexión al servidor</param>
        </member>
        <member name="M:Cosmo.Platform.DigitalSignatures.List">
            <summary>
            Devuelve una lista de firmas
            </summary>
        </member>
        <member name="M:Cosmo.Platform.DigitalSignatures.Item(System.Int32)">
            <summary>
            Recupera una firma electrónica.
            </summary>
            <param name="signatureid">Identificador de la firma electrónica.</param>
        </member>
        <member name="M:Cosmo.Platform.DigitalSignatures.Create(Cosmo.Platform.DigitalSignature@)">
            <summary>
            Guarda una firma electrónica.
            </summary>
            <param name="signature">Firma a guardar.</param>
        </member>
        <member name="M:Cosmo.Platform.DigitalSignatures.Update(Cosmo.Platform.DigitalSignature)">
            <summary>
            Actualiza una firma electrónica.
            </summary>
            <param name="signature">Firma a actualizar.</param>
        </member>
        <member name="M:Cosmo.Platform.DigitalSignatures.Delete(System.Int32)">
            <summary>
            Elimina una firma electrónica.
            </summary>
            <param name="signatureid">Identificador de la firma a eliminar.</param>
        </member>
        <member name="T:Cosmo.Platform.ServerTemplate">
            <summary>
            Implementa una plantilla de servidor.
            </summary>
            <remarks>
            Las plantillas de servidor son plantillas de presentación Cosmo registradas en el servidor que posteriormente se pueden
            propoagar a los workspaces.
            </remarks>
        </member>
        <member name="F:Cosmo.Platform.ServerTemplate.OBJECT_ID">
            <summary>Identificador del objeto para empaquetado (archivos MWT)</summary>
        </member>
        <member name="F:Cosmo.Platform.ServerTemplate.OBJECT_VER">
            <summary>Versión del objeto para empaquetado (archivos MWT)</summary>
        </member>
        <member name="F:Cosmo.Platform.ServerTemplate.OBJECT_FILEEXTENSION">
            <summary>Extensión del archivo de empaquetado</summary>
        </member>
        <member name="M:Cosmo.Platform.ServerTemplate.#ctor">
            <summary>
            Devuelve una instancia de ServerTemplate.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplate.ID">
            <summary>
            Identificador de la plantilla en la base de datos.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplate.Name">
            <summary>
            Nombre de la plantilla.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplate.Description">
            <summary>
            Descripción de la plantilla.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplate.Author">
            <summary>
            Autor/Copyright de la plantilla.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplate.Version">
            <summary>
            Versión de la plantilla.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplate.FileName">
            <summary>
            Nombre y ruta del archivo cargado.
            </summary>
            <remarks>
            Al establecer esta propiedad de actualiza la propiedad PackageFile con el nombre del
            archivo sin la ruta.
            </remarks>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplate.PackageFile">
            <summary>
            Nombre (sin ruta) del paquete de instalación.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplate.PlatformType">
            <summary>
            Tipo de plataforma para la que ha sido diseñada la plantilla.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplate.Parts">
            <summary>
            Contiene los fragmentos de la plantilla.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplate.Files">
            <summary>
            Contiene los fragmentos de la plantilla.
            </summary>
        </member>
        <member name="T:Cosmo.Platform.ServerTemplateFile">
            <summary>
            Implementa un archivo adjunto de la plantilla.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplateFile.FileName">
            <summary>
            Nombre del archivo (sin ruta).
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplateFile.Name">
            <summary>
            Nombre.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplateFile.Destination">
            <summary>
            Carpeta de destino.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplateFile.Length">
            <summary>
            Tamaño.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplateFile.Buffer">
            <summary>
            Buffer que contiene los bytes del archivo.
            </summary>
        </member>
        <member name="T:Cosmo.Platform.ServerTemplateFile.DestinationFolder">
            <summary>
            Carpetas de destino para las plantillas
            </summary>
        </member>
        <member name="F:Cosmo.Platform.ServerTemplateFile.DestinationFolder.Root">
            <summary>Raíz</summary>
        </member>
        <member name="F:Cosmo.Platform.ServerTemplateFile.DestinationFolder.Images">
            <summary>Imágen</summary>
        </member>
        <member name="F:Cosmo.Platform.ServerTemplateFile.DestinationFolder.Includes">
            <summary>Estilos, Scripts JS, etc.</summary>
        </member>
        <member name="F:Cosmo.Platform.ServerTemplateFile.DestinationFolder.Unknown">
            <summary>Desconocida</summary>
        </member>
        <member name="T:Cosmo.Platform.ServerTemplatePart">
            <summary>
            Implementa un fragmento de una plantilla.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.ServerTemplatePart.#ctor">
            <summary>
            Devuelve una instancia de ServerTemplatePart.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.ServerTemplatePart.#ctor(System.Int32,System.String)">
            <summary>
            Devuelve una instancia de ServerTemplatePart.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplatePart.ID">
            <summary>
            Identificador del fragmento de la plantilla.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.ServerTemplatePart.Contents">
            <summary>
            Contenido (código HTML/XHTML) del fragmento de la plantilla.
            </summary>
        </member>
        <member name="T:Cosmo.Platform.Viewer">
            <summary>
            Implementa una plantilla de visualización de objetos
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Viewer.ID">
            <summary>
            Identificador único del visor de objetos.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Viewer.Name">
            <summary>
            Nombre del visor de objetos.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Viewer.ModuleID">
            <summary>
            Identificador del módulo al que pertenecen.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Viewer.ModuleName">
            <summary>
            Nombre del módulo al que pertenece
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Viewer.Description">
            <summary>
            Descripción del visor de objetos.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Viewer.FileName">
            <summary>
            Nombre del script que implementa el visor de objetos.
            </summary>
        </member>
        <member name="T:Cosmo.Platform.WorkspacePrograms">
            <summary>
            Implementa una colección de aplicaciones instaladas en un workspace.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.WorkspacePrograms.#ctor(Cosmo.Platform.Server,System.Int32)">
            <summary>
            Devuelve una instancia de WorkspacePrograms.
            </summary>
            <param name="connection">Conexión al servidor Cosmo.</param>
            <param name="workspaceId">Identificador del workspace.</param>
        </member>
        <member name="M:Cosmo.Platform.WorkspacePrograms.Add(Cosmo.Platform.Applications.Program)">
            <summary>
            Registra la instalación de una aplicación en el workspace.
            </summary>
            <param name="program">Una instancia de la aplicación.</param>
        </member>
        <member name="P:Cosmo.Platform.WorkspacePrograms.WorkspaceId">
            <summary>
            Identificador del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.WorkspacePrograms.Programs">
            <summary>
            Contiene la lista de aplicaciones instaladas en el workspace.
            </summary>
        </member>
        <member name="T:Cosmo.Calendar">
            <summary>
            Summary description for CSUtils
            </summary>
        </member>
        <member name="M:Cosmo.Calendar.DateDiff(Cosmo.Calendar.DateInterval,System.DateTime,System.DateTime)">
            <summary>
            Permite quantificar la diferencia entre dos fechas/horas
            </summary>
            <param name="Interval">Medida de la diferencia entre las dos fechas</param>
            <param name="StartDate">Fecha/hora inicial</param>
            <param name="EndDate">Fecha/hora final</param>
            <returns>El número de unidades (determinado por el parámetro Interval) que marcan la diferencia</returns>
        </member>
        <member name="T:Cosmo.Calendar.DateInterval">
            <summary>
            Enumera los tipos de intervalo soportados por la clase Calendar.
            </summary>
        </member>
        <member name="F:Cosmo.Calendar.DateInterval.Second">
            <summary>Segundos</summary>
        </member>
        <member name="F:Cosmo.Calendar.DateInterval.Minute">
            <summary>Minutos</summary>
        </member>
        <member name="F:Cosmo.Calendar.DateInterval.Hour">
            <summary>Horas</summary>
        </member>
        <member name="F:Cosmo.Calendar.DateInterval.Day">
            <summary>Dias</summary>
        </member>
        <member name="F:Cosmo.Calendar.DateInterval.Week">
            <summary>Semanas</summary>
        </member>
        <member name="F:Cosmo.Calendar.DateInterval.Month">
            <summary>Meses</summary>
        </member>
        <member name="F:Cosmo.Calendar.DateInterval.Quarter">
            <summary>Trimestres</summary>
        </member>
        <member name="F:Cosmo.Calendar.DateInterval.Year">
            <summary>Años</summary>
        </member>
        <member name="T:Cosmo.Drawing.Thumbnail">
            <summary>
            Implementa una clase que permite el manejo básico de imágenes.
            </summary>
        </member>
        <member name="M:Cosmo.Drawing.Thumbnail.Create(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Genera una imagen miniatura a partir de una imagen original
            </summary>
            <param name="filename">Nombre del archivo que contiene la imagen</param>
            <param name="maxWidth">Ancho máximo de la imagen resultante</param>
            <param name="maxHeight">Altura máxima de la imagen resultante</param>
            <param name="save">Indica si se debe guardar la imagen resultante</param>
            <returns>Una instancia Bitmap que contiene la imagen miniatura</returns>
            <remarks>
            Al guardar la imagen miniatura se renombra añadiendo el prefijo "th_" delante del nombre 
            y se mantiene la misma ruta.
            </remarks>
        </member>
        <member name="T:Cosmo.IO.EncodedStringWriter">
            <summary>
            Implementa una clase StringBuilder que permite especificar la codificación de sus carácteres
            </summary>
        </member>
        <member name="M:Cosmo.IO.EncodedStringWriter.#ctor(System.Text.StringBuilder,System.Text.Encoding)">
            <summary>
            Devuelve una instancia de EncodedStringWriter.
            </summary>
            <param name="builder"></param>
            <param name="encoding"></param>
        </member>
        <member name="P:Cosmo.IO.EncodedStringWriter.Encoding">
            <summary>
            Devuelve la codificación.
            </summary>
        </member>
        <member name="T:Cosmo.Reflection.AssemblyInfo">
            <summary>
            Assembly info helper class.
            </summary>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Title">
            <summary>
            Gets the title of the current assembly.
            </summary>
            <returns>Title.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Title(System.String)">
            <summary>
            Gets the title of a specific assembly.
            </summary>
            <param name="path">Path of the assembly.</param>
            <returns>Title.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Version">
            <summary>
            Gets the version of the current assembly.
            </summary>
            <returns>Version.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Version(System.Int32)">
            <summary>
            Gets the version of the current assembly with a separator count.
            </summary>
            <param name="separatorCount">Number that determines how many version numbers should be returned.</param>
            <returns>Version.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Version(System.String)">
            <summary>
            Gets the version of a specific assembly.
            </summary>
            <param name="path">Path of the assembly.</param>
            <returns>Version.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Version(System.String,System.Int32)">
            <summary>
            Gets the version of a specific assembly with a separator count.
            </summary>
            <param name="path">Path of the assembly.</param>
            <param name="separatorCount">Number that determines how many version numbers should be returned.</param>
            <returns>Version.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Description">
            <summary>
            Gets the description of the current assembly.
            </summary>
            <returns>Description.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Description(System.String)">
            <summary>
            Gets the description of a specific assembly.
            </summary>
            <param name="path">Path of the assembly.</param>
            <returns>Description.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Product">
            <summary>
            Gets the product of the current assembly.
            </summary>
            <returns>Product.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Product(System.String)">
            <summary>
            Gets the product of a specific assembly.
            </summary>
            <param name="path">Path of the assembly.</param>
            <returns>Product.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Copyright">
            <summary>
            Gets the copyright of the current assembly.
            </summary>
            <returns>Copyright.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Copyright(System.String)">
            <summary>
            Gets the copyright of a specific assembly.
            </summary>
            <param name="path">Path of the assembly.</param>
            <returns>Copyright.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Company">
            <summary>
            Gets the company of a specific assembly.
            </summary>
            <returns>Company.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Company(System.String)">
            <summary>
            Gets the company of a specific assembly
            </summary>
            <param name="path">Path of the assembly</param>
            <returns>Company</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Path">
            <summary>
            Gets a path of the current assembly.
            </summary>
            <returns>Path.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.Path(System.String)">
            <summary>
            Gets the path of a specific assembly.
            </summary>
            <param name="path">Path of the assembly.</param>
            <returns>Path.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.GetAssembly(System.String)">
            <summary>
            Loads a specific assembly. If the failing of a specific assembly fails, the entry assembly is returned.
            </summary>
            <param name="path">Path of the assembly to load or null if the entry assembly should be loaded.</param>
            <returns>Assembly.</returns>
        </member>
        <member name="M:Cosmo.Reflection.AssemblyInfo.GetAssemblyAttributeValue(System.Reflection.Assembly,System.Type,System.String)">
            <summary>
            Gets the specific <see cref="T:System.Attribute"/> value of the attribute type in the specified assembly.
            </summary>
            <param name="assembly">Assembly to read the information from.</param>
            <param name="attribute">Attribute to read.</param>
            <param name="property">Property to read from the attribute.</param>
            <returns>Value of the attribute or empty if the attribute is not found.</returns>
        </member>
        <member name="T:Cosmo.Security.Cryptography.UriCryptography">
            <summary>
            Implementa una clase para encriptar/desencriptar cadenas de texto correspondientes a URLs.
            </summary>
        </member>
        <member name="M:Cosmo.Security.Cryptography.UriCryptography.Encrypt(System.String,System.String)">
            <summary>
            Encrypts any string using the Rijndael algorithm.
            </summary>
            <param name="originalText">The string to encrypt.</param>
            <param name="key">Clave de encriptación que se usará para encriptar el texto.</param>
            <returns>A Base64 encrypted string.</returns>
        </member>
        <member name="M:Cosmo.Security.Cryptography.UriCryptography.Decrypt(System.String,System.String)">
            <summary>
            Decrypts a previously encrypted string.
            </summary>
            <param name="encryptedText">The encrypted string to decrypt.</param>
            <param name="key">Clave de encriptación usada para encriptar el texto.</param>
            <returns>A decrypted string.</returns>
        </member>
        <member name="T:Cosmo.IO.Compression.ZipStorer">
            <summary>
            Implementa una clase para la gestión de archivos comprimidos en formato ZIP.
            </summary>
            <remarks>
            ZipStorer, by Jaime Olivares
            Website: zipstorer.codeplex.com
            Version: 2.20 (Sep.29, 2009)
            </remarks>
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.EncodeUTF8">
            <summary>True if UTF8 encoding for filename and comments, false if default (CP 437)</summary>
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.ForceDeflating">
            <summary>Force deflate algotithm even if it inflates the stored file. Off by default.</summary>
        </member>
        <member name="M:Cosmo.IO.Compression.ZipStorer.Create(System.String,System.String)">
            <summary>
            Method to create a new storage file
            </summary>
            <param name="_filename">Full path of Zip file to create</param>
            <param name="_comment">General comment for Zip file</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:Cosmo.IO.Compression.ZipStorer.Create(System.IO.Stream,System.String)">
            <summary>
            Method to create a new zip storage in a stream
            </summary>
            <param name="_stream"></param>
            <param name="_comment"></param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:Cosmo.IO.Compression.ZipStorer.Open(System.String,System.IO.FileAccess)">
            <summary>
            Method to open an existing storage file
            </summary>
            <param name="_filename">Full path of Zip file to open</param>
            <param name="_access">File access mode as used in FileStream constructor</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:Cosmo.IO.Compression.ZipStorer.Open(System.IO.Stream,System.IO.FileAccess)">
            <summary>
            Method to open an existing storage from stream
            </summary>
            <param name="_stream">Already opened stream with zip contents</param>
            <param name="_access">File access mode for stream operations</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:Cosmo.IO.Compression.ZipStorer.AddFile(Cosmo.IO.Compression.ZipStorer.Compression,System.String,System.String,System.String)">
            <summary>
            Add full contents of a file into the Zip storage
            </summary>
            <param name="_method">Compression method</param>
            <param name="_pathname">Full path of file to add to Zip storage</param>
            <param name="_filenameInZip">Filename and path as desired in Zip directory</param>
            <param name="_comment">Comment for stored file</param>        
        </member>
        <member name="M:Cosmo.IO.Compression.ZipStorer.AddStream(Cosmo.IO.Compression.ZipStorer.Compression,System.String,System.IO.Stream,System.DateTime,System.String)">
            <summary>
            Add full contents of a stream into the Zip storage
            </summary>
            <param name="_method">Compression method</param>
            <param name="_filenameInZip">Filename and path as desired in Zip directory</param>
            <param name="_source">Stream object containing the data to store in Zip</param>
            <param name="_modTime">Modification time of the data to store</param>
            <param name="_comment">Comment for stored file</param>
        </member>
        <member name="M:Cosmo.IO.Compression.ZipStorer.Close">
            <summary>
            Updates central directory (if pertinent) and close the Zip storage
            </summary>
            <remarks>This is a required step, unless automatic dispose is used</remarks>
        </member>
        <member name="M:Cosmo.IO.Compression.ZipStorer.ReadCentralDir">
            <summary>
            Read all the file records in the central directory 
            </summary>
            <returns>List of all entries in directory</returns>
        </member>
        <member name="M:Cosmo.IO.Compression.ZipStorer.ExtractFile(Cosmo.IO.Compression.ZipStorer.ZipFileEntry,System.String)">
            <summary>
            Copy the contents of a stored file into a physical file
            </summary>
            <param name="_zfe">Entry information of file to extract</param>
            <param name="_filename">Name of file to store uncompressed data</param>
            <returns>True if success, false if not.</returns>
            <remarks>Unique compression methods are Store and Deflate</remarks>
        </member>
        <member name="M:Cosmo.IO.Compression.ZipStorer.ExtractFile(Cosmo.IO.Compression.ZipStorer.ZipFileEntry,System.IO.Stream)">
            <summary>
            Copy the contents of a stored file into an opened stream
            </summary>
            <param name="_zfe">Entry information of file to extract</param>
            <param name="_stream">Stream to store the uncompressed data</param>
            <returns>True if success, false if not.</returns>
            <remarks>Unique compression methods are Store and Deflate</remarks>
        </member>
        <member name="M:Cosmo.IO.Compression.ZipStorer.RemoveEntries(Cosmo.IO.Compression.ZipStorer@,System.Collections.Generic.List{Cosmo.IO.Compression.ZipStorer.ZipFileEntry})">
            <summary>
            Removes one of many files in storage. It creates a new Zip file.
            </summary>
            <param name="_zip">Reference to the current Zip object</param>
            <param name="_zfes">List of Entries to remove from storage</param>
            <returns>True if success, false if not</returns>
            <remarks>This method only works for storage of type FileStream</remarks>
        </member>
        <member name="M:Cosmo.IO.Compression.ZipStorer.Dispose">
            <summary>
            Closes the Zip file stream
            </summary>
        </member>
        <member name="T:Cosmo.IO.Compression.ZipStorer.Compression">
            <summary>
            Compression method enumeration
            </summary>
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.Compression.Store">
            <summary>Uncompressed storage</summary> 
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.Compression.Deflate">
            <summary>Deflate compression method</summary>
        </member>
        <member name="T:Cosmo.IO.Compression.ZipStorer.ZipFileEntry">
            <summary>
            Represents an entry in Zip file directory
            </summary>
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.ZipFileEntry.Method">
            <summary>Compression method</summary>
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.ZipFileEntry.FilenameInZip">
            <summary>Full path and filename as stored in Zip</summary>
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.ZipFileEntry.FileSize">
            <summary>Original file size</summary>
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.ZipFileEntry.CompressedSize">
            <summary>Compressed file size</summary>
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.ZipFileEntry.HeaderOffset">
            <summary>Offset of header information inside Zip storage</summary>
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.ZipFileEntry.FileOffset">
            <summary>Offset of file inside Zip storage</summary>
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.ZipFileEntry.HeaderSize">
            <summary>Size of header information</summary>
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.ZipFileEntry.Crc32">
            <summary>32-bit checksum of entire file</summary>
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.ZipFileEntry.ModifyTime">
            <summary>Last modification time of file</summary>
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.ZipFileEntry.Comment">
            <summary>User comment for file</summary>
        </member>
        <member name="F:Cosmo.IO.Compression.ZipStorer.ZipFileEntry.EncodeUTF8">
            <summary>True if UTF8 encoding for filename and comments, false if default (CP 437)</summary>
        </member>
        <member name="M:Cosmo.IO.Compression.ZipStorer.ZipFileEntry.ToString">
            <summary>Overriden method</summary>
            <returns>Filename in Zip</returns>
        </member>
        <member name="T:Cosmo.Security.Impersonator">
            <summary>
            Impersonation of a user. Allows to execute code under another user context.
            Please note that the account that instantiates the Impersonator class needs to have the 'Act as part of operating system' privilege set.
            </summary>
            <remarks>	
            This class is based on the information in the Microsoft knowledge base article http://support.microsoft.com/default.aspx?scid=kb;en-us;Q306158
            Encapsulate an instance into a using-directive like e.g.:
            
            	...
            	using ( new Impersonator( "myUsername", "myDomainname", "myPassword" ) )
            	{
            		...
            		[code that executes under the new context]
            		...
            	}
            	...
            
            Please contact the author Uwe Keim (mailto:uwe.keim@zeta-software.de) for questions regarding this class.
            </remarks>
        </member>
        <member name="M:Cosmo.Security.Impersonator.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor. Starts the impersonation with the given credentials.
            Please note that the account that instantiates the Impersonator class needs to have the 'Act as part of operating system' privilege set.
            </summary>
            <param name="userName">The name of the user to act as.</param>
            <param name="domainName">The domain name of the user to act as.</param>
            <param name="password">The password of the user to act as.</param>
        </member>
        <member name="M:Cosmo.Security.Impersonator.Dispose">
            <summary>
            Libera los recursos usados por la instancia.
            </summary>
        </member>
        <member name="M:Cosmo.Security.Impersonator.ImpersonateValidUser(System.String,System.String,System.String)">
            <summary>
            Does the actual impersonation.
            </summary>
            <param name="userName">The name of the user to act as.</param>
            <param name="domain">The domain name of the user to act as.</param>
            <param name="password">The password of the user to act as.</param>
        </member>
        <member name="M:Cosmo.Security.Impersonator.UndoImpersonation">
            <summary>
            Reverts the impersonation.
            </summary>
        </member>
        <member name="T:Cosmo.Windows.Configuration.ClientSettingsKey">
            <summary>
            Implementa una clave del registro del cliente (PC).
            </summary>
        </member>
        <member name="M:Cosmo.Windows.Configuration.ClientSettingsKey.#ctor">
            <summary>
            Devuelve una instancia de ClientSettingsKey.
            </summary>
        </member>
        <member name="M:Cosmo.Windows.Configuration.ClientSettingsKey.#ctor(System.String,System.String)">
            <summary>
            Devuelve una instancia de ClientSettingsKey.
            </summary>
        </member>
        <member name="P:Cosmo.Windows.Configuration.ClientSettingsKey.Key">
            <summary>
            Nombre de la clave (identificador).
            </summary>
        </member>
        <member name="P:Cosmo.Windows.Configuration.ClientSettingsKey.Value">
            <summary>
            Valor asociado.
            </summary>
        </member>
        <member name="T:Cosmo.Windows.Configuration.ClientSettings">
            <summary>
            Implementa una clase para el acceso y gestión de la configuración del cliente desktop.
            </summary>
        </member>
        <member name="F:Cosmo.Windows.Configuration.ClientSettings.DEFAULT_FILENAME">
            <summary>Nombre por defecto que usará la classe para generar/abrir el archivo de configuración.</summary>
        </member>
        <member name="M:Cosmo.Windows.Configuration.ClientSettings.#ctor">
            <summary>
            Constructor de la clase. Carga los valores.
            </summary>
        </member>
        <member name="M:Cosmo.Windows.Configuration.ClientSettings.Save">
            <summary>
            Guarda los valores en el archivo XML.
            </summary>
        </member>
        <member name="M:Cosmo.Windows.Configuration.ClientSettings.SaveSetting(System.String,System.String)">
            <summary>
            Agrega/actualiza un valor general.
            </summary>
            <param name="key">Nombre de la clave.</param>
            <param name="value">Valor de la clave.</param>
        </member>
        <member name="M:Cosmo.Windows.Configuration.ClientSettings.SaveSetting(System.String,System.String,System.String)">
            <summary>
            Agrega/actualiza un valor específico de una aplicación.
            </summary>
            <param name="appname">Nombre de la aplicación propietaria.</param>
            <param name="key">Nombre de la clave.</param>
            <param name="value">Valor de la clave.</param>
        </member>
        <member name="M:Cosmo.Windows.Configuration.ClientSettings.RemoveSetting(System.String)">
            <summary>
            Elimina una clave de configuración del registro local.
            </summary>
            <param name="key">Nombre de la clave.</param>
        </member>
        <member name="M:Cosmo.Windows.Configuration.ClientSettings.GetSetting(System.String,System.String)">
            <summary>
            Obtiene un valor de la configuración local.
            </summary>
            <param name="key">Nombre de la clave.</param>
            <param name="defaultvalue">Valor por defecto cuando el valor no está establecido.</param>
        </member>
        <member name="M:Cosmo.Windows.Configuration.ClientSettings.GetSetting(System.String)">
            <summary>
            Obtiene un valor de la configuración local.
            </summary>
            <param name="key">Nombre de la clave.</param>
        </member>
        <member name="P:Cosmo.Windows.Configuration.ClientSettings.FileName">
            <summary>
            Devuelve el nombre y la ruta del archivo correspondiente a la configuración.
            </summary>
        </member>
        <member name="P:Cosmo.Windows.Configuration.ClientSettings.Settings">
            <summary>
            Permite acceder a la colección de valores de configuración
            </summary>
        </member>
        <member name="P:Cosmo.Windows.Configuration.ClientSettings.RegistryDSN">
            <summary>
            Cadena de conexió a la BBDD del registro.
            </summary>
        </member>
        <member name="P:Cosmo.Windows.Configuration.ClientSettings.LastWorkspaceSelected">
            <summary>
            Identificador del último Workspace conectado.
            </summary>
        </member>
        <member name="P:Cosmo.Windows.Configuration.ClientSettings.ViewGridLines">
            <summary>
            Ver líneas separadoras en listados.
            </summary>
        </member>
        <member name="P:Cosmo.Windows.Configuration.ClientSettings.ViewLargeIcons">
            <summary>
            Ver iconos grandes en controles NavBar
            </summary>
        </member>
        <member name="T:Cosmo.IO.Shell">
            <summary>
            Implementa una classe con utilidades relacionadas con el sistema de archivos
            </summary>
        </member>
        <member name="M:Cosmo.IO.Shell.FolderExists(System.String)">
            <summary>
            Averigua si una carpeta existe.
            </summary>
            <param name="path">Ruta a la carpeta.</param>
            <returns>Un valor que indica si la carpeta existe o no.</returns>
        </member>
        <member name="M:Cosmo.IO.Shell.FileExists(System.String)">
            <summary>
            Averigua si un archivo existe.
            </summary>
            <param name="path">Ruta del archivo.</param>
            <returns>Un valor que indica si el archivo existe o no.</returns>
        </member>
        <member name="T:Cosmo.Number">
            <summary>
            Implementa una clase con utilidades para tratar números
            </summary>
        </member>
        <member name="M:Cosmo.Number.IsNumeric(System.String)">
            <summary>
            Indica si una cadena de texto es numérica.
            </summary>
            <param name="number">Cadena a comprobar.</param>
            <returns>True/False dependiendo del tipo de cadena.</returns>
        </member>
        <member name="M:Cosmo.Number.Val(System.String)">
            <summary>
            Retorna la parte numérica de una cadena de texto.
            </summary>
            <param name="text">Cadena a transformar.</param>
            <returns>Un valor entero.</returns>
        </member>
        <member name="T:Cosmo.Platform.Applications.Programs">
            <summary>
            Implementa una clase de servicio para gestionar las aplicaciones
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.#ctor(Cosmo.Platform.Server,Cosmo.Workspace.Workspace,System.String)">
            <summary>
            Constructor de la clase. Carga todas las aplicaciones y sus módulos y genera una instáncia dentro 
            del entorno definido por el Workspace.
            </summary>
            <param name="connection">Una instáncia de MWConnection.</param>
            <param name="workspace">Una instáncia del Workspace para el que se desean usar las aplicaciones.</param>
            <param name="userlogin">Login del usuario para el que se desea crear el entorno.</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.#ctor(Cosmo.Platform.Server)">
            <summary>
            Constructor de la clase. Carga todas las aplicaciones y sus módulos sin generar ninguna instáncia.
            Este método es usado para la gestión de las aplicaciones, no para su uso.
            </summary>
            <param name="connection">Una instáncia de MWConnection.</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.List">
            <summary>
            Rellena un control List con una lista de aplicaciones.
            </summary>
            <returns>Una lista de objetos MWApplication</returns>
            <remarks>Los objetos MWApplication tienen asociadas las listas de módulos</remarks>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.Item(System.Int32)">
            <summary>
            Obtiene una aplicación.
            </summary>
            <param name="id">Identificación de la aplicación.</param>
            <returns>Una instáncia MWApplication.</returns>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.Add(Cosmo.Platform.Applications.Program)">
            <summary>
            Agrega una aplicación. Si están inicializados los arrays Modules y Commands también se añaden
            a la base de datos del registro.
            </summary>
            <param name="app">Una instancia de MWApplication.</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.Update(Cosmo.Platform.Applications.Program)">
            <summary>
            Actualiza los datos de una aplicación.
            </summary>
            <param name="application">Una instáncia de MWApplication que contiene los datos de la aplicación.</param>
            <remarks>No afecta a los módulos y comandos que contiene la aplicación.</remarks>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.Delete(System.Int32,System.Boolean)">
            <summary>
            Desinstala una aplicación 
            </summary>
            <param name="applicationid">Identificador de la aplicación a desinstalar.</param>
            <param name="deletePackage">Indica si se debe eliminar el paquete de instalación.</param>
            <remarks>
            Este método no quita las aplicaciones ya instaladas en los workspaces, simplemente
            quita el registro de la aplicación en el entorno.
            </remarks>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.GetIndex(System.Int32)">
            <summary>
            Permite ontener el índice de una determinada aplicación dentro del array de aplicaciones.
            </summary>
            <param name="id">Identificador de la aplicación.</param>
            <returns>Índice de dicha aplicación dentro del array.</returns>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.GetCommand(System.String)">
            <summary>
            Obtiene la acción especificada.
            </summary>
            <param name="id">Identificador de la acción.</param>
            <returns>Una instáncia de MWCommand con los datos.</returns>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.Load">
            <summary>
            Carga todas las aplicaciones, módulos y comandos del entorno.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.Load(System.Boolean)">
            <summary>
            Carga todas las aplicaciones, módulos y comandos del entorno.
            </summary>
            <param name="enabled">Indica el estado de las aplicaciones a cargar.</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.Install(System.String)">
            <summary>
            Instala un paquete en el entorno actual.
            </summary>
            <param name="filename">Nombre y ruta del paquete de instalación.</param>
            <remarks>Se puede usar el método LoadFromFile() para cargar un paquete desde un archivo.</remarks>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.Install(Cosmo.Platform.Applications.Program)">
            <summary>
            Instala un paquete en el entorno actual.
            </summary>
            <param name="application">Una instáncia de MWApplication inicializada.</param>
            <remarks>Se puede usar el método LoadFromFile() para cargar un paquete desde un archivo.</remarks>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.AutoUpdateDLL(System.Boolean,System.String)">
            <summary>
            Ejecuta el proceso de AutoUpdate de forma que la estación local disponga de las versiones
            más recientes de todos los módulos de gestión de las aplicaciones instaladas.
            </summary>
            <param name="continueOnError">
            Si es <code>True</code> el proceso no para ante los errores (aunque los registra en el LOG de
            MW. Si es <code>False</code> se lanza el error al proceso que llama al método.
            </param>
            <param name="localpath">Path dónde se encuentra instalada la aplicación (se puede obtener usando: Application.StartupPath)</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.GetApplicationIndex(System.Collections.Generic.List{Cosmo.Platform.Applications.Program},System.Int32)">
            <summary>
            Obtiene el índice de una determinada aplicación en una lista de aplicaciones
            </summary>
            <param name="applications">Lista de aplicaciones</param>
            <param name="id">Identificador de la aplicación</param>
            <returns>El índice dónde se encuentra la aplicación</returns>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.GetDLLVersion(System.String,System.String)">
            <summary>
            Obtiene la versión de una compilación a partir del nombre de archivo (DLL)
            </summary>
            <param name="filename">Nombre /y ruta) del archivo DLL</param>
            <param name="className">Nombre de la clase</param>
            <returns>La versión de la compilación</returns>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.LoadFromFile(System.String)">
            <summary>
            Carga un paquete de instalación desde un archivo.
            </summary>
            <param name="filename">Archivo a cargar.</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Programs.SaveToFile(Cosmo.Platform.Applications.Program,System.String)">
            <summary>
            Empaqueta una aplicación en un archivo MWP (XML).
            </summary>
            <param name="app">Una instancia de MWApplication.</param>
            <param name="filename">Nombre y ruta del archivo de destino.</param>
            <remarks>Si el archivo existe, lo reescribe.</remarks>
        </member>
        <member name="P:Cosmo.Platform.Applications.Programs.Applications">
            <summary>
            Array de aplicaciones cargadas.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Applications.Programs.Loaded">
            <summary>
            Devuelve un valor indicando si se han cargado las aplicaciones mediante el método LoadApplicationPackage().
            </summary>
        </member>
        <member name="T:Cosmo.Platform.Applications.Commands">
            <summary>
            Implementa una clase de servicio que permite gestionar los comandos de una aplicación
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Applications.Commands.#ctor(Cosmo.Platform.Server)">
            <summary>
            Constructor de la clase.
            </summary>
            <param name="connection">Una instancia de MWConnection.</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Commands.List(System.String)">
            <summary>
            Devuelve una lista de comandos de un módulo.
            </summary>
            <param name="moduleId">Identificador del módulo.</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Commands.Item(System.String)">
            <summary>
            Devuelve una acción.
            </summary>
            <param name="commandId">Identificador único de la acción.</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Commands.Add(Cosmo.Platform.Applications.Command)">
            <summary>
            Agrega una nueva acción.
            </summary>
            <param name="command">Una instancia de MWCommand.</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Commands.Update(Cosmo.Platform.Applications.Command)">
            <summary>
            Actualiza los datos de una acción.
            </summary>
            <param name="command">Una instancia de MWCommand.</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Commands.Delete(System.String)">
            <summary>
            Elimina un comando asociado a un módulo.
            </summary>
            <param name="commandid">Identificador único del comando.</param>
        </member>
        <member name="T:Cosmo.Platform.Applications.Modules">
            <summary>
            Implementa una clase de servicio que permite gestionar los módulos de las aplicaciones
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Applications.Modules.#ctor(Cosmo.Platform.Server)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="connection">Una conexión a la base de datos del registro</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Modules.List(System.Int32)">
            <summary>
            Devuelve una lista de modulos de una aplicación
            </summary>
            <param name="appid">Identificador de la aplicación para la que se desea obtener la lista</param>
            <returns>Una lista de objetos MWModule</returns>
        </member>
        <member name="M:Cosmo.Platform.Applications.Modules.List">
            <summary>
            Rellena un control List con una lista de modulos de una aplicación.
            </summary>
            <returns>Una lista de objetos MWModule</returns>
        </member>
        <member name="M:Cosmo.Platform.Applications.Modules.Item(System.String,System.Boolean)">
            <summary>
            Recupera un módulo.
            </summary>
            <param name="moduleId">Identificador del módulo.</param>
            <param name="loadCommands">Indica si se deben cargar también los comandos asociados.</param>
            <returns>Una instáncia MWModule con los datos.</returns>
        </member>
        <member name="M:Cosmo.Platform.Applications.Modules.Item(System.String)">
            <summary>
            Recupera un módulo sin cargar los comandos asociados.
            </summary>
            <param name="moduleId">Identificador del módulo.</param>
            <returns>Una instáncia MWModule con los datos.</returns>
        </member>
        <member name="M:Cosmo.Platform.Applications.Modules.ItemByCommand(System.String,System.Boolean)">
            <summary>
            Recupera el módulo al que pertenece un dterminado comando.
            </summary>
            <param name="commandId">Identificador del módulo.</param>
            <param name="loadCommands">Indica si se deben cargar también los comandos asociados.</param>
            <returns>Una instáncia MWModule con los datos.</returns>
        </member>
        <member name="M:Cosmo.Platform.Applications.Modules.Add(Cosmo.Platform.Applications.Module)">
            <summary>
            Agrega un módulo. Si esta inicializado el array Commands también se añaden a la base de datos 
            del registro.
            </summary>
            <param name="module">Una instancia de MWModule.</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Modules.Update(Cosmo.Platform.Applications.Module)">
            <summary>
            Agrega un módulo. Si esta inicializado el array Commands también se añaden a la base de datos 
            del registro.
            </summary>
            <param name="module">La instancia de MWModule con los datos a actualizar.</param>
        </member>
        <member name="M:Cosmo.Platform.Applications.Modules.Delete(System.String)">
            <summary>
            Elimina un comando asociado a un módulo.
            </summary>
            <param name="moduleid">Identificador único del comando.</param>
        </member>
        <member name="T:Cosmo.Platform.Server">
            <summary>
            Implementa un servidor Cosmo.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Server.#ctor(System.Boolean)">
            <summary>
            Devuelve una instancia de ServerConnectionsEx
            </summary>
            <param name="autoconnect">Si es True indica que se debe autoconectar al generar la instancia</param>
        </member>
        <member name="M:Cosmo.Platform.Server.#ctor(System.String)">
            <summary>
            Devuelve una instancia de ServerConnectionsEx
            </summary>
            <param name="dsn">cadena de conexión a datos</param>
        </member>
        <member name="M:Cosmo.Platform.Server.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Devuelve una instancia de ServerConnectionsEx
            </summary>
            <param name="ServerName">Nombre del servidor de datos</param>
            <param name="DBName">Nombre de la base de datos</param>
            <param name="UserLogin">Cuenta de acceso al servidor de datos</param>
            <param name="UserPassword">Contraseña</param>
        </member>
        <member name="M:Cosmo.Platform.Server.Connect">
            <summary>
            Abre una conexión a la base de datos.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Server.Disconnect">
            <summary>
            Cierra la conexión a la BBDD y destruye la conexión.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Server.CreateDSN">
            <summary>
            Devuelve una cadena de conexión a la BBDD a partir de las propiedades de la clase.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Server.TestConnection">
            <summary>
            Testea una conexión a base de datos.
            </summary>
            <returns>Un valor booleano indicando el resultado del test.</returns>
        </member>
        <member name="M:Cosmo.Platform.Server.Initialize(System.String,System.String,System.String,System.String)">
            <summary>
            Crea la base de datos del registro.
            </summary>
            <param name="sqlScript">Script SQL de creación de la base de datos.</param>
            <param name="folderPackages">Carpeta central compartida.</param>
            <param name="webServerRoot">Carpeta raíz del servidor web.</param>
            <param name="defaultPackage">Paquete de creación y gestión de workspaces.</param>
        </member>
        <member name="M:Cosmo.Platform.Server.CreateDSN(System.String,System.String,System.String,System.String)">
            <summary>
            Genera un string de conexión a BBDD.
            </summary>
            <param name="dbserver">Nombre del servidor SQL Server.</param>
            <param name="dbdatabase">Nombre de la base de datos.</param>
            <param name="dbuser">Login del usuario de acceso.</param>
            <param name="dbpassword">Contraseña del usuario de acceso.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Platform.Server.TestConnection(System.String)">
            <summary>
            Testea una conexión a base de datos.
            </summary>
            <param name="dsn">Cadena de conexión a testear.</param>
            <returns>Un valor booleano indicando el resultado del test.</returns>
        </member>
        <member name="M:Cosmo.Platform.Server.TranslateDSN(System.String)">
            <summary>
            Convierte una cadena de conexión ADO.NET a otra ADO (COM+)
            </summary>
            <param name="original">Cadena de conexión .NET</param>
            <returns>Una cadena de conexión válida para usarse en COM (ADODB, VB6)</returns>
        </member>
        <member name="P:Cosmo.Platform.Server.ConnectionString">
            <summary>
            Cadena de conexión.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Server.ServerName">
            <summary>
            Nombre del servidor de bases de datos.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Server.DatabaseName">
            <summary>
            Nombre de la base de datos.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Server.UserLogin">
            <summary>
            Login de la cuenta de usuario de acceso a los datos.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Server.UserPassword">
            <summary>
            Contraseña de la cuenta de usuario de acceso a los datos.
            </summary>
        </member>
        <member name="P:Cosmo.Platform.Server.Connection">
            <summary>
            Conexión SqlConnection
            </summary>
        </member>
        <member name="T:Cosmo.Platform.CommonSettings">
            <summary>
            Implementa un modo de acceso a los datos del registro de Cosmo. El registro de Cosmo
            permite almacenar datos persistentes del entorno Cosmo y puede ser usado por cualquier 
            aplicación del entorno (por ejemplo Workspace Manager o Enterprise Manager).
            </summary>
        </member>
        <member name="F:Cosmo.Platform.CommonSettings.REGKEY_PACKAGES_PATH">
            <summary>
            Ruta a la carpeta que contiene los paquetes de instalación.
            </summary>
        </member>
        <member name="F:Cosmo.Platform.CommonSettings.REGKEY_WS_DEFAULTPACKAGE">
            <summary>
            Nombre del paquete (archivo MWP) que se debe instalar por defecto al crear un nuevo
            workspace.
            </summary>
        </member>
        <member name="F:Cosmo.Platform.CommonSettings.REGKEY_WS_SQLSCRIPT">
            <summary>
            Script SQL para crear un nuevo workspace.
            </summary>
        </member>
        <member name="F:Cosmo.Platform.CommonSettings.REGKEY_WS_FSROOT">
            <summary>
            Nombre de la carpeta raíz a partir de la cual se monta el sistema de archivos particular 
            de cada módulo de gestión. Por defecto, este valor es "docs".
            </summary>
        </member>
        <member name="F:Cosmo.Platform.CommonSettings.REGKEY_WS_BACKUPROOT">
            <summary>
            Ruta a la carpeta dónde por defecto se guardarán las copias de seguridad.
            </summary>
        </member>
        <member name="F:Cosmo.Platform.CommonSettings.REGKEY_WS_WEBSERVERROOT">
            <summary>
            Ruta a la raíz del servidor web que se usará por defecto en la creación de nuevos
            workspaces. Usualmente: \\MACHINENAME\INETPUB\WWWROOT\
            </summary>
        </member>
        <member name="M:Cosmo.Platform.CommonSettings.#ctor(Cosmo.Platform.Server)">
            <summary>
            Devuelve una instancia de CommonSettings.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.CommonSettings.List">
            <summary>
            Rellena un control ListView con una lista de los valores del registro.
            </summary>
        </member>
        <member name="M:Cosmo.Platform.CommonSettings.GetRegistrySetting(System.String,System.String)">
            <summary>
            Obtiene un valor del registro.
            </summary>
            <param name="sKey">Clave del registro.</param>
            <param name="sDefaultValue">Valor por defecto.</param>
            <returns>Si lo encuentra, el valor del registro, sinó el valor por defecto.</returns>
        </member>
        <member name="M:Cosmo.Platform.CommonSettings.GetRegistrySetting(System.String)">
            <summary>
            Obtiene un valor del registro.
            </summary>
            <param name="sKey">Clave del registro.</param>
            <returns>Si lo encuentra, el valor del registro, sinó una cadena vacía.</returns>
        </member>
        <member name="M:Cosmo.Platform.CommonSettings.GetRegistryKey(System.String)">
            <summary>
            Obtiene una clave del registro.
            </summary>
            <param name="sKey">Clave del registro.</param>
            <returns>Una instancia MWRegistryKey con los datos de la clave.</returns>
        </member>
        <member name="M:Cosmo.Platform.CommonSettings.GetRegistryKey(System.String,System.String)">
            <summary>
            Obtiene una clave del registro.
            </summary>
            <param name="sKey">Clave del registro.</param>
            <param name="sDefaultValue">Valor por defecto si la clave no existe.</param>
            <returns>Una instancia MWRegistryKey con los datos de la clave.</returns>
        </member>
        <member name="M:Cosmo.Platform.CommonSettings.DeleteKey(System.String)">
            <summary>
            Elimina una clave del registro.
            </summary>
            <param name="key">Clave del registro.</param>
        </member>
        <member name="M:Cosmo.Platform.CommonSettings.SaveRegistrySetting(System.String,System.String)">
            <summary>
            Guarda un valor en el registro.
            </summary>
            <param name="sKey">Clave del registro.</param>
            <param name="vValue">Valor que adoptará la clave.</param>
        </member>
        <member name="M:Cosmo.Platform.CommonSettings.SaveRegistrySetting(Cosmo.Platform.CommonSettingsKey)">
            <summary>
            Guarda un valor en el registro.
            </summary>
            <param name="key">Clave del registro.</param>
        </member>
        <member name="T:Cosmo.Platform.ServerTemplates">
            <summary>
            Implementa una clase de servicio para la gestión del repositorio de plantillas del servidor
            </summary>
        </member>
        <member name="M:Cosmo.Platform.ServerTemplates.#ctor(Cosmo.Platform.Server)">
            <summary>
            Constructor de la clase.
            </summary>
            <param name="connection">Una instancia de MWConnection para el acceso a datos.</param>
        </member>
        <member name="M:Cosmo.Platform.ServerTemplates.List">
            <summary>
            Devuelve una lista de las plantillas instaladas en el entorno actual
            </summary>
            <returns>Una lista de objetos ServerTemplate</returns>
        </member>
        <member name="M:Cosmo.Platform.ServerTemplates.List(Cosmo.Workspace.PresentationRule.DeviceTypes)">
            <summary>
            Devuelve una lista de las plantillas instaladas en el entorno actual
            </summary>
            <param name="type">Tipo de dispositivo por el que se filtrará la lista</param>
            <returns>Una lista de objetos ServerTemplate</returns>
        </member>
        <member name="M:Cosmo.Platform.ServerTemplates.Item(System.Int32)">
            <summary>
            Obtiene las propiedades de una plantilla de presentación.
            </summary>
            <param name="templateid">Identificador de la plantilla.</param>
            <returns>Una instáncia de MWTemplate con los datos.</returns>
        </member>
        <member name="M:Cosmo.Platform.ServerTemplates.Add(Cosmo.Platform.ServerTemplate)">
            <summary>
            Agrega una nueva plantilla al entorno.
            </summary>
            <param name="template">Una instáncia de <see cref="T:Cosmo.Platform.ServerTemplate"/> que contenga los datos.</param>
        </member>
        <member name="M:Cosmo.Platform.ServerTemplates.Update(Cosmo.Platform.ServerTemplate)">
            <summary>
            Modifica los datos de na plantilla.
            </summary>
            <param name="template">Una instáncia de <see cref="T:Cosmo.Platform.ServerTemplate"/> que contenga los datos.</param>
        </member>
        <member name="M:Cosmo.Platform.ServerTemplates.Delete(System.Int32,System.Boolean)">
            <summary>
            Elimina una plantilla del entorno.
            </summary>
            <param name="templateid">Identificador de la plantilla.</param>
            <param name="deletePackageFile">Especifica si también se debe eliminar el paquete de instalación.</param>
            <remarks>
            El hecho de eliminar una plantilla del entorno no la elimina de los workspaces en los que
            se halle instalada.
            </remarks>
        </member>
        <member name="M:Cosmo.Platform.ServerTemplates.Install(System.String,System.Boolean)">
            <summary>
            Instala una plantilla en el entorno Cosmo actual
            </summary>
            <param name="filename">Nombre del paquete de instalación (archivo MWT).</param>
            <param name="overwrite">Indica si se debe sobreescribir el archivo si ya existe una versión anterior</param>
        </member>
        <member name="M:Cosmo.Platform.ServerTemplates.Install(Cosmo.Platform.ServerTemplate,System.Boolean)">
            <summary>
            Instala una plantilla en el entorno Cosmo actual
            </summary>
            <param name="template">Una instáncia de <see cref="T:Cosmo.Platform.ServerTemplate"/> que contiene la plantilla.</param>
            <param name="overwrite">Indica si se debe sobreescribir el archivo si ya existe una versión anterior</param>
        </member>
        <member name="M:Cosmo.Platform.ServerTemplates.LoadFromFile(System.String)">
            <summary>
            Carga un paquete de instalación desde un archivo.
            </summary>
            <param name="filename">Archivo a cargar.</param>
        </member>
        <member name="T:Cosmo.Platform.Profiles">
            <summary>
            Implementa una clase de servicio para la gestión de roles de usuario
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Profiles.#ctor(Cosmo.Platform.Server)">
            <summary>
            Devuelve una instancia de Profiles
            </summary>
            <param name="connection">Una conexión al servidor</param>
        </member>
        <member name="M:Cosmo.Platform.Profiles.List">
            <summary>
            Devuelve una lista de todos los usuarios
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Profiles.ObjectList">
            <summary>
            Devuelve una lista de objetos sujetos a permisos a nivel de rol
            </summary>
            <returns>Una lista de objetos MWProfilePermission</returns>
        </member>
        <member name="M:Cosmo.Platform.Profiles.Item(System.Int32)">
            <summary>
            Obtiene las propiedades de un rol de usuario.
            </summary>
            <param name="profileid">Identificador del rol.</param>
            <returns>Una instáncia de MWProfile que contiene las propiedades del rol.</returns>
        </member>
        <member name="M:Cosmo.Platform.Profiles.Add(Cosmo.Platform.Profile@)">
            <summary>
            Crea un nuevo rol de usuario.
            </summary>
            <param name="profile">Una instáncia de MWProfile que contiene todos los datos.</param>
        </member>
        <member name="M:Cosmo.Platform.Profiles.Update(Cosmo.Platform.Profile)">
            <summary>
            Actualiza la información de un rol de usuario.
            </summary>
            <param name="profile">Una instáncia de MWProfile que contiene todos los datos.</param>
        </member>
        <member name="M:Cosmo.Platform.Profiles.Delete(System.Int32)">
            <summary>
            Elimina un rol de usuario.
            </summary>
            <param name="roleid">Identificador del rol.</param>
            <remarks>Sólo se puede eliminar un rol si este no está asignado a ningún usuario.</remarks>
        </member>
        <member name="T:Cosmo.Security.Cryptography.Cryptography">
            <summary>
            Implementa una clase para la encriptación/desecriptación de datos seguros
            </summary>
        </member>
        <member name="M:Cosmo.Security.Cryptography.Cryptography.Encrypt(System.String,System.String,System.Boolean)">
            <summary>
            Cifra (encripta) una cadena de texto.
            </summary>
            <param name="toEncrypt">Cadena de texto a cifrar.</param>
            <param name="key">Clave usada para encriptar los datos</param>
            <param name="useHashing">Activa un cifrado más fuerte (seguro).</param>
            <returns>El texto original cifrado.</returns>
        </member>
        <member name="M:Cosmo.Security.Cryptography.Cryptography.Decrypt(System.String,System.String,System.Boolean)">
            <summary>
            Descifra (desencripta) una cadena cifrada anteriormente con el método Encrypt().
            </summary>
            <param name="cipherString">Cadena cifrada.</param>
            <param name="key">Clave usada para desencriptar los datos</param>
            <param name="useHashing">Activar si para el cifrado se usó Hashing.</param>
            <returns>La cadena original descrifrada.</returns>
        </member>
        <member name="T:Cosmo.Platform.Viewers">
            <summary>
            Implementa una clase de servicio para la gestión de plantillas de visualización de objetos
            </summary>
        </member>
        <member name="M:Cosmo.Platform.Viewers.#ctor(Cosmo.Platform.Server)">
            <summary>
            Constructor de la clase MWViewers.
            </summary>
            <param name="connection">Una instáncia de MWConnection para acceso a la BBDD.</param>
        </member>
        <member name="M:Cosmo.Platform.Viewers.List(System.String)">
            <summary>
            Devuelve una lista de las plantillas registradas en el servidor
            </summary>
            <param name="moduleId">Identificador del módulo por el que se filtrarán los visores de objetos</param>
            <returns>Una lista de objetos MWViewer</returns>
        </member>
        <member name="M:Cosmo.Platform.Viewers.List">
            <summary>
            Devuelve una lista de las plantillas registradas en el servidor
            </summary>
            <returns>Una lista de objetos MWViewer</returns>
        </member>
        <member name="M:Cosmo.Platform.Viewers.Item(System.Int32)">
            <summary>
            Recupera los datos de un visor de objetos.
            </summary>
            <param name="viewerid">Identificador único del visor.</param>
            <returns>Una instáncia de MWViewer con los datos solicitados.</returns>
        </member>
        <member name="M:Cosmo.Platform.Viewers.Create(Cosmo.Platform.Viewer@)">
            <summary>
            Guarda los datos de un visor de objetos.
            </summary>
            <param name="viewer">Una instáncia de MWViewer con los datos a guardar.</param>
        </member>
        <member name="M:Cosmo.Platform.Viewers.Update(Cosmo.Platform.Viewer)">
            <summary>
            Actualiza los datos del visor de objetos.
            </summary>
            <param name="viewer">Una instáncia de MWViewer con los datos actualizados.</param>
        </member>
        <member name="M:Cosmo.Platform.Viewers.Delete(System.Int32)">
            <summary>
            Elimina un visor de objetos.
            </summary>
            <param name="viewerid">Identificador del visor de objetos a eliminar.</param>
        </member>
        <member name="T:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider">
            <summary>
            Proveedor de autenticación contra el grupo de usuarios del servidor Cosmo.
            </summary>
            <remarks>
            Este proveedor usa para la autenticación de usuario la base de datos del servidor.
            </remarks>
        </member>
        <member name="T:Cosmo.Workspace.Authentication.IAutheticationProvider">
            <summary>
            Interface para los proveedores de seguridad de los usuarios del workspace.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.Autenticate(System.String,System.String)">
            <summary>
            Autentica al usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <param name="password">Contraseña.</param>
            <returns>Si ha tenido exito, devuelve </returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.GetUsersList">
            <summary>
            Obtiene una lista de usuarios.
            </summary>
            <returns>Una lista de usuarios.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.GetUsersList(Cosmo.Workspace.User.UserStatus)">
            <summary>
            Obtiene una lista de usuarios de un determinado estado.
            </summary>
            <param name="status">Estado para el que se desea filtrar.</param>
            <returns>Una lista de usuarios.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.GetUser(System.String)">
            <summary>
            Obtiene las propiedades de un usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <returns>Una instancia de User con los datos del usuario.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.GetUser(System.Int32)">
            <summary>
            Obtiene las propiedades de un usuario.
            </summary>
            <param name="uid">Identificador único del usuario.</param>
            <returns>Una instancia de User con los datos del usuario.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.Create(Cosmo.Workspace.User)">
            <summary>
            Crea una nueva cuenta de usuario.
            </summary>
            <param name="user">Una instancia de User con los datos de la cuenta a crear.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.Create(Cosmo.Workspace.User,System.Boolean)">
            <summary>
            Crea una nueva cuenta de usuario.
            </summary>
            <param name="user">Una instancia de User con los datos de la cuenta a crear.</param>
            <param name="confirm">Indica si se desea confirmar la cuenta de correo electrónico vía correo electrónico.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.Update(Cosmo.Workspace.User)">
            <summary>
            Actualiza los datos de una cuenta de usuario.
            </summary>
            <param name="user">Una instancia de User con los datos actualizados de la cuenta.</param>
            <remarks>
            Para actualizar la contraseña debe usar el método SetPassword() ya que éste método no actualiza la contraseña.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.Delete(System.Int32)">
            <summary>
            Elimina una cuenta de usuario.
            </summary>
            <param name="uid">Identificador de la cuenta a eliminar.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.Cancel(System.Int32)">
            <summary>
            Cancela una cuenta de usuario.
            </summary>
            <param name="uid">Identificador de la cuenta a cancelar.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.Verify(System.Int32,System.String)">
            <summary>
            Verifica una cuenta de usuario (pendiente de verificación por correo electrónico).
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="mail">Correo electrónico asociado a la cuenta.</param>
            <returns>Una instancia de User con los datos del usuario verificado.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.Verify(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Verifica una cuenta de usuario (pendiente de verificación por correo electrónico).
            </summary>
            <param name="QueryString">Una instancia de NameValueCollection que puede ser Server.Params.</param>
            <returns>Una instancia de User con los datos del usuario verificado.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.SendData(System.String)">
            <summary>
            Envia los datos de un usuario a su cuenta de correo para el acceso al Workspace
            </summary>
            <param name="address">Dirección de correo a la que se mandarán los datos. Debe coincidir con la dirección de una cuenta de usuario.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.SetPassword(System.Int32,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.SetPassword(System.Int32,System.String,System.String,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="oldPassword">Contraseña actual.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
            <param name="newPasswordVerification">Verificación de la nueva contraseña.</param>
            <remarks>
            Los parámetros newPassword y newPasswordVerification deben coincidir o de lo contrario se lanzará la excepción <see cref="T:Cosmo.Workspace.CosmoSecurityException"/>.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.GetUserRoles(System.Int32)">
            <summary>
            Obtiene una lista de los roles de un usuario.
            </summary>
            <param name="uid">Identificador único del usuario.</param>
            <returns>Una instancia de <see cref="T:System.Collections.Generic.List`1"/> rellenada con la lista de roles.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.GetUserRoles(System.String)">
            <summary>
            Obtiene una lista de los roles de un usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <returns>Una instancia de <see cref="T:System.Collections.Generic.List`1"/> rellenada con la lista de roles.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.GetRoleUsers(System.Int32)">
            <summary>
            Obtiene una lista de usuarios para un determinado rol.
            </summary>
            <param name="roleId">Identificador del rol.</param>
            <returns>Una instancia de <see cref="T:System.Collections.Generic.List`1"/> rellenada con la lista de usuarios.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.Search(Cosmo.Workspace.UserSearchCriteria)">
            <summary>
            Selecciona un grupo de usuarios
            </summary>
            <param name="selector">Selector que contiene los critérios de búsqueda</param>
            <returns>La lista de usuarios seleccioandos</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.Search(System.String,System.String,System.Int32)">
            <summary>
            Busca usuarios del workspace.
            </summary>
            <param name="login">Login o fracción a buscar</param>
            <param name="city">Ciudad o fracción a buscar</param>
            <param name="countryId">Identificador del pais a buscar</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.IAutheticationProvider.ListCountry">
            <summary>
            Devuelve una lista de paises
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Authentication.IAutheticationProvider.Workspace">
            <summary>
            Establece el workspace para el que se está autenticando.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.#ctor">
            <summary>
            Devuelve una instancia de Users
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve una instancia de Users
            </summary>
            <param name="workspace">Workspace</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.GetUsersList(Cosmo.Workspace.User.UserStatus)">
            <summary>
            Devuelve una lista de todos los usuarios
            </summary>
            <param name="status">Filtra por el estado de la cuenta</param>
            <returns>Una lista de objetos <see cref="T:Cosmo.Workspace.User"/>.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.GetUsersList">
            <summary>
            Devuelve una lista de todos los usuarios
            </summary>
            <returns>Una lista de objetos WSUser</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.GetUser(System.String)">
            <summary>
            Obtiene los datos de una cuenta del workspace.
            </summary>
            <param name="login">Login de la cuenta de usuario.</param>
            <returns>Una instáncia MWUser.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.GetUser(System.Int32)">
            <summary>
            Obtiene los datos de una cuenta del workspace.
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <returns>Una instáncia MWUser.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.Create(Cosmo.Workspace.User,System.Boolean)">
            <summary>
            Crea una nueva cuenta de usuario del workspace
            </summary>
            <param name="user">Instáncia de WSUser que contiene los datos de la nueva cuenta</param>
            <param name="confirm">Indica que al agregar el usuario se le mandará un correo electrónico para la confirmación de su cuenta de correo y mientras no se confirme, la cuenta estará en estado pendiente de verificación.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.Create(Cosmo.Workspace.User)">
            <summary>
            Crea una nueva cuenta de usuario del workspace
            </summary>
            <param name="user">Instáncia de WSUser que contiene los datos de la nueva cuenta</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.Update(Cosmo.Workspace.User)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="user">Instáncia de MWUser que contiene los datos actualizados de la cuenta.</param>
            <remarks>
            Para actualizar la contraseña debe usar el método SetPassword() ya que éste método no
            actualiza la contraseña.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.Delete(System.Int32)">
            <summary>
            Elimina una cuenta de usuario del workspace.
            </summary>
            <param name="id">Identificador de la cuenta a eliminar</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.Cancel(System.Int32)">
            <summary>
            Cancela una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta a cancelar</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.Verify(System.Int32,System.String)">
            <summary>
            Verifica una cuenta de usuario (pasa del estado 'No verificada' a 'Activa'). Este método permite implementar
            un sistema de generación de cuentas por parte de los usuarios (registro de usuarios).
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <param name="mail">Cuenta de correo del usuario</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.Verify(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Verifica una cuenta de usuario (pasa del estado 'No verificada' a 'Activa'). Este método permite implementar
            un sistema de generación de cuentas por parte de los usuarios (registro de usuarios).
            </summary>
            <param name="QueryString">Colección de parámetros del enlace de verificación mandado por correo electrónico al usuario (Request.QueryString).</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.SendData(System.String)">
            <summary>
            Envia los datos de un usuario a su cuenta de correo para el acceso al Workspace
            </summary>
            <param name="address">Dirección de correo a la que se mandarán los datos. Debe coincidir con la dirección de una cuenta de usuario.</param>
            <returns>La instáncia de <see cref="T:Cosmo.Workspace.User"/> con los datos del usuario que realiza la petición.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.Autenticate(System.String,System.String)">
            <summary>
            Permite verificar las credenciales de acceso a una cuenta de usuario (login).
            </summary>
            <param name="login">Login del usuario.</param>
            <param name="password">Contraseña del usuario.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.SetPassword(System.Int32,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.SetPassword(System.Int32,System.String,System.String,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="oldPassword">Contraseña actual.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
            <param name="newPasswordVerification">Verificación de la nueva contraseña.</param>
            <remarks>
            Los parámetros newPassword y newPasswordVerification deben coincidir o de lo contrario se lanzará la excepción <see cref="T:Cosmo.Workspace.CosmoSecurityException"/>.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.CheckPassword(System.Int32,System.String)">
            <summary>
            Verifica una contraseña de usuario.
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <param name="password">Contraseña a verificar.</param>
            <returns>Devuelve <c>true</c> si la contraseña coincide o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.GetUserRoles(System.Int32)">
            <summary>
            Obtiene una lista de los roles de un usuario.
            </summary>
            <param name="uid">Identificador único del usuario.</param>
            <returns>Una instancia de <see cref="T:System.Collections.Generic.List`1"/> rellenada con la lista de roles.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.GetUserRoles(System.String)">
            <summary>
            Obtiene una lista de los roles de un usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <returns>Una instancia de <see cref="T:System.Collections.Generic.List`1"/> rellenada con la lista de roles.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.GetRoleUsers(System.Int32)">
            <summary>
            Devuelve una lista de usuarios que tienen un rol específico.
            </summary>
            <param name="roleId">Identificador del rol.</param>
            <returns>
            Una inatsnacia de <see cref="T:System.Collections.Generic.List`1"/> que contiene las inatancias de <see cref="T:Cosmo.Workspace.User"/> que 
            pretenecen al rol solicitado.
            </returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.Search(Cosmo.Workspace.UserSearchCriteria)">
            <summary>
            Selecciona un grupo de usuarios
            </summary>
            <param name="selector">Selector que contiene los critérios de búsqueda</param>
            <returns>La lista de usuarios seleccioandos</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.Search(System.String,System.String,System.Int32)">
            <summary>
            Busca usuarios del workspace.
            </summary>
            <param name="login">Login o fracción a buscar</param>
            <param name="city">Ciudad o fracción a buscar</param>
            <param name="countryId">Identificador del pais a buscar</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.ListCountry">
            <summary>
            Devuelve una lista de paises
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.ReadUserFields(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Devuelve una instancia de MWUser con los datos recuperados de un objeto SqlDataReader que apunte a un registro de la tabla USERS
            </summary>
            <param name="reader">Objeto SqlDataReader que apunte a un registro válido</param>
            <returns>Una instancia de WSUser</returns>
            <remarks>
            Para usar este método la senténcia SQL debe contener los campos indicados en la constante USER_FIELDS
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.SelectorSQL(Cosmo.Workspace.UserSearchCriteria)">
            <summary>
            Genera la clausula WHERE correspondiente a un filtro para seleccionar usuarios
            </summary>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmo.Workspace.Authentication.CosmoServerAuthenticationProvider.Workspace">
            <summary>
            Establece el workspace para el que se está autenticando.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.WorkspaceFolders">
            <summary>
            Carpetas de un workspace
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ClientRoot">
            <summary>Directorio raíz de instalación en las estaciones cliente.</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerRoot">
            <summary>Carpeta raíz del servidor web.</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerAppBrowsers">
            <summary>Carpeta \App_Browsers (.NET).</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerAppCode">
            <summary>Carpeta \App_Code (.NET).</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerAppData">
            <summary>Carpeta \App_Data (.NET).</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerAppLocalResources">
            <summary>Carpeta \App_LocalResources (.NET).</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerAppGlobalResources">
            <summary>Carpeta \App_GlobalResources (.NET).</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerAppThemes">
            <summary>Carpeta \App_Themes (.NET).</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerAppWebReferences">
            <summary>Carpeta \App_WebReferences (.NET).</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerBin">
            <summary>Carpeta \bin (.NET).</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerImages">
            <summary>Carpeta \images usada para poner las imágenes que no forman parte de ninguna plantilla.</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerInclude">
            <summary>Carpeta \includes.</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerWorkspaceFileStorageRoot">
            <summary>Carpeta raíz del sistema de archivos del workspace (usualmente \docs).</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerTemporaryStorage">
            <summary>Carpeta para ubicar archivos temporales.</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerTemplatesPrivate">
            <summary>Carpeta para una plantilla de presentación \webserver\Templates\%TEMPLATE_ID%.</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerTemplatesShared">
            <summary>Carpeta de recursos compartidos para plantillas de presentación.</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.ServerTemplatesRoot">
            <summary>Carpeta raíz para las plantillas (en teoria, nunca deberá haber ningún archivo aquí).</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceFolders.Unknown">
            <summary>
            Carpeta indfefinida
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.FileSystem">
            <summary>
            Implementa una clase para la gestión del sistema de archivos del workspace.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.FileSystem.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Workspace.FileSystem"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace.Workspace"/>.</param>
        </member>
        <member name="M:Cosmo.Workspace.FileSystem.FileExist(System.String,System.String[])">
            <summary>
            Averigua si existe un determinado archivo.
            </summary>
            <param name="filename">Nombre del archivo sin ruta.</param>
            <param name="folders">Carpetas de acceso.</param>
            <returns><c>True</c> si existe el archivo o <c>False</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Workspace.FileSystem.FileInformation(System.String,System.String[])">
            <summary>
            Obtiene las propiedades de un archivo.
            </summary>
            <param name="filename">Nombre del archivo sin ruta.</param>
            <param name="folders">Carpetas de acceso.</param>
            <returns>Una instancia de <see cref="T:System.IO.FileInfo"/> que contiene las priopiedades del archivo.</returns>
        </member>
        <member name="M:Cosmo.Workspace.FileSystem.FileCopy(System.String)">
            <summary>
            Crea una carpeta en el sistema de archivos del workspace.
            </summary>
            <param name="filename">Archivo que se desea copiar en el sistema de archivos.</param>
            <remarks>
            Si la carpeta existe no hace nada.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.FileSystem.FileCopy(System.String,System.String)">
            <summary>
            Crea una carpeta en el sistema de archivos del workspace.
            </summary>
            <param name="filename">Archivo que se desea copiar al sistema de archivos.</param>
            <param name="destinationFolderName">Nombre de la carpeta dónde se desea incorporar el archivo.</param>
            <remarks>
            Si la carpeta existe no hace nada.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.FileSystem.DirectoryCreate(System.String)">
            <summary>
            Crea una carpeta en el sistema de archivos del workspace.
            </summary>
            <param name="name">Nombre de la carpeta a crear.</param>
            <remarks>
            Si la carpeta existe no hace nada.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.FileSystem.GetTemporaryFolder">
            <summary>
            Devuelve una instancia de <see cref="T:System.IO.DirectoryInfo"/> que representa la carpeta temporal.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.FileSystem.GetFolderName(Cosmo.Workspace.WorkspaceFolders)">
            <summary>
            Devuelve el nombre de una carpeta Cosmo
            </summary>
            <param name="folder">Identificador de la carpeta</param>
            <returns>Una cadena que representa el nombre de la carpeta</returns>
        </member>
        <member name="T:Cosmo.Workspace.Role">
            <summary>
            Implementa una clase que representa un rol de usuario.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Role.#ctor">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Workspace.Role"/>.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Role.Id">
            <summary>
            Devuelve el identificador único del rol.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Role.Name">
            <summary>
            Devuelve o establece el nombre del rol.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Role.Description">
            <summary>
            Devuelve o establece la descripción del rol.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.UserAuthenticationException">
            <summary>
            Excepción que se lanza cuando la cuenta de usuario está inhabilitada.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthenticationException.#ctor">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthenticationException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Workspace.Log.Logger">
            <summary>
            Genera una clase de servicio para la gestión del registro de eventos
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Log.Logger.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve una instancia de Logger
            </summary>
            <param name="workspace">Workspace actual</param>
        </member>
        <member name="M:Cosmo.Workspace.Log.Logger.Add(Cosmo.Workspace.Workspace,Cosmo.Workspace.Log.LogEntry)">
            <summary>
            Agrega una entrada en el registro de eventos.
            </summary>
            <param name="workspace">Workspace actual.</param>
            <param name="logentry">Registro a agregar.</param>
        </member>
        <member name="M:Cosmo.Workspace.Log.Logger.Add(Cosmo.Workspace.Log.LogEntry)">
            <summary>
            Registra una entrada en el archivo de LOG del Workspace.
            </summary>
            <param name="entry">Una entrada descrita por una instancia de LogEntry.</param>
        </member>
        <member name="M:Cosmo.Workspace.Log.Logger.Add(System.String,System.String,Cosmo.Workspace.Log.LogEntry.LogEntryType,System.String,System.Int32)">
            <summary>
            Registra una entrada en el archivo de LOG del Workspace.
            </summary>
            <param name="message">Descripción del evento.</param>
            <param name="appName">Nombre de la aplicación.</param>
            <param name="type">Tipo de evento.</param>
            <param name="module">Módulo dónde se produce el evento.</param>
            <param name="code">Código del evento.</param>
            <returns>Un valor booleano indicando el resultado de la operación.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Log.Logger.Add(System.String,System.String,Cosmo.Workspace.Log.LogEntry.LogEntryType,System.String)">
            <summary>
            Registra una entrada en el archivo de LOG del Workspace.
            </summary>
            <param name="message">Descripción del evento.</param>
            <param name="appName">Nombre de la aplicación.</param>
            <param name="type">Tipo de evento.</param>
            <param name="module">Módulo dónde se produce el evento.</param>
            <returns>Un valor booleano indicando el resultado de la operación.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Log.Logger.Add(System.String,Cosmo.Workspace.Log.LogEntry.LogEntryType,System.String)">
            <summary>
            Registra una entrada en el archivo de LOG del Workspace.
            </summary>
            <param name="message">Descripción del evento.</param>
            <param name="type">Tipo de evento.</param>
            <param name="module">Módulo dónde se produce el evento.</param>
            <returns>Un valor booleano indicando el resultado de la operación.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Log.Logger.List(System.Int32)">
            <summary>
            Genera una lista de los objetos contenidos en una carpeta.
            </summary>
            <param name="status">Identificador de la carpeta que contiene los objetos.</param>
        </member>
        <member name="M:Cosmo.Workspace.Log.Logger.Item(System.Int32)">
            <summary>
            Permite recuperar los datos de un evento.
            </summary>
            <param name="id">Identificador de la entrada del registro.</param>
            <returns>Una instáncia de <see cref="T:Cosmo.Workspace.Log.LogEntry"/>.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Log.Logger.Delete(System.Int32)">
            <summary>
            Elimina un evento del workspace.
            </summary>
            <param name="id">Identificador de la entrada al registro</param>
        </member>
        <member name="T:Cosmo.Workspace.Net.NetFaxServer">
            <summary>
            Implementa el servidor de FAX para los workspaces.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetFaxServer.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Workspace.Net.NetFaxServer"/>.
            </summary>
            <param name="workspace">una instancia de <see cref="T:Cosmo.Workspace.Workspace"/>.</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetFaxServer.Send(Cosmo.Workspace.Net.NetFaxMessage)">
            <summary>
            Envia el FAX directamente sin pasar por la cola de envios de Cosmo
            </summary>
            <param name="message">Una instancia de <see cref="T:Cosmo.Workspace.Net.NetFaxMessage"/> que contiene el FAX a enviar.</param>
            <remarks>
            Importante: 
            No está implementada la posibilidad de enviar texto ubicado en la propiedad BODY. Esta función será implementada
            en futuras versiones.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetFaxServer.SendQueued(Cosmo.Workspace.Net.NetFaxMessage)">
            <summary>
            Envia el correo usando la cola de salida del Workspace
            </summary>
            <param name="message">Mensaje de FAX a enviar.</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetFaxServer.Initialize">
            <summary>
            Inicializa el servidor de FAX.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetFaxServer.Workspace">
            <summary>
            Devuelve o establece el workspace al que está asociado el servidor de Fax.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetFaxServer.IsServerAvailable">
            <summary>
            Indica si el servicio de Fax está habilitado.
            </summary>
            <remarks>
            El servicio de FAX (Windows Fax) está sólo disponible en versiones de Windows Business o superiores.
            </remarks>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetFaxServer.ServerName">
            <summary>
            Devuelve el nombre del servidor.
            </summary>
            <remarks>
            Una cadena vacía indica que el servidor es el propio equipo (localhost).
            </remarks>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetFaxServer.PrinterName">
            <summary>
            Devuelve el nombre de la impresora de Fax.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.Net.NetMailServer">
            <summary>
            Implementa un servidor de correo de workspaces.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetMailServer.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve una instancia de NetMailServer.
            </summary>
            <param name="workspace">Una instancia de Workspace que representa el workspace asociado al servidor de correo electrónico.</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetMailServer.Initialize">
            <summary>
            Inicializa el servidor de correo electrónico.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetMailServer.Send(Cosmo.Workspace.Net.NetMailMessage)">
            <summary>
            Envia un mensaje usando el servidor de correo del workspace.
            </summary>
            <param name="message">Mensaje a enviar.</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetMailServer.Send(Cosmo.Workspace.Net.NetMailMessage[])">
            <summary>
            Envia los mensajes contenidos en un array.
            </summary>
            <param name="messages">Array de mensajes.</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetMailServer.Send(System.Collections.Generic.List{Cosmo.Workspace.Net.NetMailMessage})">
            <summary>
            Envia los mensajes contenidos en un array.
            </summary>
            <param name="messages">Lista de mensajes.</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetMailServer.SendQueued(Cosmo.Workspace.Net.NetMailMessage,Cosmo.Workspace.User)">
            <summary>
            Envia el correo usando la cola de salida (Workspace Outer Queue).
            </summary>
            <param name="message">Usuario del workspace que genera el envio.</param>
            <param name="user">Usuario que provocó el envio.</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetMailServer.SendQueued(Cosmo.Workspace.Net.NetMailMessage[],Cosmo.Workspace.User)">
            <summary>
            Envia los mensajes contenidos en un array.
            </summary>
            <param name="messages">Array de mensajes.</param>
            <param name="user">Usuario que provocó el envio.</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetMailServer.SendQueued(System.Collections.Generic.List{Cosmo.Workspace.Net.NetMailMessage},Cosmo.Workspace.User)">
            <summary>
            Envia los mensajes contenidos en un array.
            </summary>
            <param name="messages">Lista de mensajes.</param>
            <param name="user">Usuario que provocó el envio.</param>
        </member>
        <member name="T:Cosmo.Workspace.Net.NetQueueJob">
            <summary>
            Representa un trabajo de cola de salida del workspace.
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetQueueJob.QUEUE_FILE_EXTENSION">
            <summary>Extensión de los objetos en cola (archivos).</summary>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetQueueJob.#ctor">
            <summary>
            Devuelve una instancia de NetQueueJob
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetQueueJob.ID">
            <summary>
            Identificador del elemento de la cola de salida
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetQueueJob.TimeStamp">
            <summary>
            Fecha/hora en la que se añadió en trabajo a la cola
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetQueueJob.Retry">
            <summary>
            Intento de salida (0 al insertar el elemento a la cola)
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetQueueJob.LastRetry">
            <summary>
            Fecha/hora en la que se intentó el envio por última vez
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetQueueJob.Priority">
            <summary>
            Prioridad del elemento en la cola de salida
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetQueueJob.Type">
            <summary>
            Tipo de elemento
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetQueueJob.Owner">
            <summary>
            Usuario remoto (login) que ha insertado el elemento en la cola
            Si no procede (trabajo de distema), se informa SYS.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.Net.MWQueueService">
            <summary>
            Implementa una clase que gestiona la cola de trabajos de Cosmo
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Net.MWQueueService.#ctor">
            <summary>
            Devuelve una instancia de MWQueueService.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Net.MWQueueService.Start">
            <summary>
            Inicia el servicio
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Net.MWQueueService.Start(System.Double)">
            <summary>
            Inicia el servicio
            </summary>
            <param name="interval">Intervalo (en milisegundos) entre ejecuciones del servicio.</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.MWQueueService.Stop">
            <summary>
            Detiene el servicio
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.MWQueueService.Interval">
            <summary>
            Intervalo (en milisegundos) entre ejecuciones del servicio.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.MWQueueService.WorkspacesID">
            <summary>
            Array de identificadores de los workspaces a los que dará salida el servicio.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.MWQueueService.Status">
            <summary>
            Indica si el servicio está iniciado o parado
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.Net.MWQueueService.ServiceStatus">
            <summary>
            Enumera los estados del servicio.
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.MWQueueService.ServiceStatus.Stopped">
            <summary>Parado</summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.MWQueueService.ServiceStatus.Started">
            <summary>Activo</summary>
        </member>
        <member name="T:Cosmo.Workspace.CosmoSecurityException">
            <summary>
            Excepción de error de sesión
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.CosmoSecurityException.#ctor">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.CosmoSecurityException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.Workspace.CosmoSecurityException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Workspace.UserAuthentication">
            <summary>
            Implementa una clase para la autenticación y gestión de las cuentas de usuario.
            </summary>
            <remarks>
            Esta clase hace uso de los proveedores de autenticación.
            </remarks>
        </member>
        <member name="F:Cosmo.Workspace.UserAuthentication.PROVIDER_DEFAULT">
            <summary>Proveedor de autenticación por defecto (Cosmo Workspace Authentication provider).</summary>
        </member>
        <member name="F:Cosmo.Workspace.UserAuthentication.ACCOUNT_SUPER">
            <summary>Login del usuario super</summary>
        </member>
        <member name="F:Cosmo.Workspace.UserAuthentication.TAG_USER_LOGIN">
            <summary>TAG para insertar el login del usuario en el texto del mensaje.</summary>
        </member>
        <member name="F:Cosmo.Workspace.UserAuthentication.TAG_USER_MAIL">
            <summary>TAG para insertar el correo electrónico del usuario en el texto del mensaje.</summary>
        </member>
        <member name="F:Cosmo.Workspace.UserAuthentication.TAG_USER_NAME">
            <summary>TAG para insertar el nombre real del usuario en el texto del mensaje.</summary>
        </member>
        <member name="F:Cosmo.Workspace.UserAuthentication.TAG_USER_PASSWORD">
            <summary>TAG para insertar la contraseña del usuario en el texto del mensaje.</summary>
        </member>
        <member name="F:Cosmo.Workspace.UserAuthentication.TAG_USER_VERIFYLINK">
            <summary>TAG para insertar el link que da acceso a la verificación de la cuenta de correo.</summary>
        </member>
        <member name="F:Cosmo.Workspace.UserAuthentication.TAG_WORKSPACE_MAIL">
            <summary>TAG para insertar el mail de contacto del responsable del workspace en el texto del mensaje.</summary>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve una instancia de UserAuthentication
            </summary>
            <param name="workspace">Workspace</param>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.#ctor(Cosmo.Workspace.Workspace,System.String)">
            <summary>
            Devuelve una instancia de UserAuthentication
            </summary>
            <param name="workspace">Workspace</param>
            <param name="provider">Nombre de la clase que implementa el proveedor de seguridad.</param>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.Autenticate(System.String,System.String)">
            <summary>
            Autentica al usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <param name="password">Contraseña.</param>
            <returns>Si ha tenido exito, devuelve </returns>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.GetUsersList">
            <summary>
            Obtiene una lista de usuarios.
            </summary>
            <returns>Una lista de usuarios.</returns>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.GetUsersList(Cosmo.Workspace.User.UserStatus)">
            <summary>
            Obtiene una lista de usuarios.
            </summary>
            <returns>Una lista de usuarios.</returns>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.GetUser(System.String)">
            <summary>
            Obtiene las propiedades de un usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <returns>Una instancia de User con los datos del usuario.</returns>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.GetUser(System.Int32)">
            <summary>
            Obtiene las propiedades de un usuario.
            </summary>
            <param name="uid">Identificador único del usuario.</param>
            <returns>Una instancia de User con los datos del usuario.</returns>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.Create(Cosmo.Workspace.User)">
            <summary>
            Crea una nueva cuenta de usuario.
            </summary>
            <param name="user">Una instancia de User con los datos de la cuenta a crear.</param>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.Create(Cosmo.Workspace.User,System.Boolean)">
            <summary>
            Crea una nueva cuenta de usuario.
            </summary>
            <param name="user">Una instancia de User con los datos de la cuenta a crear.</param>
            <param name="confirm">Indica si se desea confirmar la cuenta de correo electrónico vía correo electrónico.</param>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.Update(Cosmo.Workspace.User)">
            <summary>
            Actualiza los datos de una cuenta de usuario.
            </summary>
            <param name="user">Una instancia de User con los datos actualizados de la cuenta.</param>
            <remarks>
            Para actualizar la contraseña debe usar el método SetPassword() ya que éste método no actualiza la contraseña.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.Delete(System.Int32)">
            <summary>
            Elimina una cuenta de usuario.
            </summary>
            <param name="id">Identificador de la cuenta a eliminar.</param>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.Cancel(System.Int32)">
            <summary>
            Cancela una cuenta de usuario.
            </summary>
            <param name="uid">Identificador de la cuenta a cancelar.</param>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.Verify(System.Int32,System.String)">
            <summary>
            Verifica una cuenta de usuario (pendiente de verificación por correo electrónico).
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="mail">Correo electrónico asociado a la cuenta.</param>
            <returns>Una instancia de User con los datos del usuario verificado.</returns>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.Verify(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Verifica una cuenta de usuario (pendiente de verificación por correo electrónico).
            </summary>
            <param name="QueryString">Una instancia de NameValueCollection que puede ser Server.Params.</param>
            <returns>Una instancia de User con los datos del usuario verificado.</returns>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.SendData(System.String)">
            <summary>
            Envia los datos de un usuario a su cuenta de correo para el acceso al Workspace
            </summary>
            <param name="address">Dirección de correo a la que se mandarán los datos. Debe coincidir con la dirección de una cuenta de usuario.</param>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.SetPassword(System.Int32,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.SetPassword(System.Int32,System.String,System.String,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="oldPassword">Contraseña actual.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
            <param name="newPasswordVerification">Verificación de la nueva contraseña.</param>
            <remarks>
            Los parámetros newPassword y newPasswordVerification deben coincidir o de lo contrario se lanzará la excepción <see cref="T:Cosmo.Workspace.CosmoSecurityException"/>.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.GetUserRoles(System.Int32)">
            <summary>
            Obtiene una lista de los roles de un usuario.
            </summary>
            <param name="uid">Identificador único del usuario.</param>
            <returns>Una instancia de <see cref="T:System.Collections.Generic.List`1"/> rellenada con la lista de roles.</returns>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.GetUserRoles(System.String)">
            <summary>
            Obtiene una lista de los roles de un usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <returns>Una instancia de <see cref="T:System.Collections.Generic.List`1"/> rellenada con la lista de roles.</returns>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.GetRoleUsers(System.Int32)">
            <summary>
            Devuelve una lista de usuarios que tienen un rol específico.
            </summary>
            <param name="roleId">Identificador del rol.</param>
            <returns>
            Una inatsnacia de <see cref="T:System.Collections.Generic.List`1"/> que contiene las inatancias de <see cref="T:Cosmo.Workspace.User"/> que 
            pretenecen al rol solicitado.
            </returns>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.Search(Cosmo.Workspace.UserSearchCriteria)">
            <summary>
            Obtiene una lista de usuarios que cumplen los criterios de selección.
            </summary>
            <param name="selector">Criterio de selección de usuarios.</param>
            <returns>Una lista de usuarios que cumnplen con los criterios establecidos.</returns>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.Search(System.String,System.String,System.Int32)">
            <summary>
            Busca usuarios del workspace.
            </summary>
            <param name="login">Login o fracción a buscar</param>
            <param name="city">Ciudad o fracción a buscar</param>
            <param name="countryId">Identificador del pais a buscar</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.ListCountry">
            <summary>
            Devuelve una lista de paises.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.IsValidLogin(System.String)">
            <summary>
            Permite verificar si un Login es válido o no. EL login debe tener como mínimo 5 carácteres y 35 como máximo.
            </summary>
            <param name="login">Login a testear.</param>
            <returns>Un valor booleano que indica si es válido o no.</returns>
            <remarks>
            Regular Expression obtenida de:
            http://immike.net/blog/2007/04/06/5-regular-expressions-every-web-programmer-should-know/
            (Usar "[a-zA-Z0-9]" para verificar sólo si admite letras y números)
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.GetVerificationMail(Cosmo.Workspace.User)">
            <summary>
            Genera el correo de verificación de cuenta de correo.
            </summary>
            <param name="user">Una instancia de <see cref="T:Cosmo.Workspace.User"/>.</param>
            <returns>Una instancia de <see cref="T:Cosmo.Workspace.Net.NetMailMessage"/> que contiene el correo de verificación de cuentas de eMail.</returns>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.GetVerificationMail(System.Int32)">
            <summary>
            Genera el correo de verificación de cuenta de correo.
            </summary>
            <param name="uid">Identificador del usuario.</param>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.GetUserDataMail(Cosmo.Workspace.User)">
            <summary>
            Genera el correo de envío de datos de connexión.
            </summary>
            <param name="user">Una instancia de <see cref="T:Cosmo.Workspace.User"/>.</param>
            <returns>Una instancia de <see cref="T:Cosmo.Workspace.Net.NetMailMessage"/> que contiene los datos de conexión de un usuario.</returns>
        </member>
        <member name="M:Cosmo.Workspace.UserAuthentication.GetUserDataMail(System.Int32)">
            <summary>
            Genera el correo de envío de datos de connexión.
            </summary>
            <param name="uid">Identificador del usuario.</param>
        </member>
        <member name="P:Cosmo.Workspace.UserAuthentication.Workspace">
            <summary>
            Establece el workspace para el que se está autenticando.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.Authentication.LdapAuthenticationProvider">
            <summary>
            Proveedor de autenticación nativo de Cosmo.
            </summary>
            <remarks>
            Este proveedor usa para la autenticación de usuario la base de datos del workspace (tabla USERS).
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.#ctor">
            <summary>
            Devuelve una instancia de Users
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve una instancia de Users
            </summary>
            <param name="workspace">Workspace</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.GetUsersList(Cosmo.Workspace.User.UserStatus)">
            <summary>
            Devuelve una lista de todos los usuarios
            </summary>
            <param name="status">Filtra por el estado de la cuenta</param>
            <returns>Una lista de objetos WSUser</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.GetUsersList">
            <summary>
            Devuelve una lista de todos los usuarios
            </summary>
            <returns>Una lista de objetos WSUser</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.GetUser(System.String)">
            <summary>
            Obtiene los datos de una cuenta del workspace.
            </summary>
            <param name="login">Login de la cuenta de usuario.</param>
            <returns>Una instáncia MWUser.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.GetUser(System.Int32)">
            <summary>
            Obtiene los datos de una cuenta del workspace.
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <returns>Una instáncia MWUser.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.Create(Cosmo.Workspace.User,System.Boolean)">
            <summary>
            Crea una nueva cuenta de usuario del workspace
            </summary>
            <param name="user">Instáncia de WSUser que contiene los datos de la nueva cuenta</param>
            <param name="confirm">Indica que al agregar el usuario se le mandará un correo electrónico para la confirmación de su cuenta de correo y mientras no se confirme, la cuenta estará en estado pendiente de verificación.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.Create(Cosmo.Workspace.User)">
            <summary>
            Crea una nueva cuenta de usuario del workspace
            </summary>
            <param name="user">Instáncia de WSUser que contiene los datos de la nueva cuenta</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.Update(Cosmo.Workspace.User)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="user">Instáncia de MWUser que contiene los datos actualizados de la cuenta.</param>
            <remarks>
            Para actualizar la contraseña debe usar el método SetPassword() ya que éste método no
            actualiza la contraseña.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.Delete(System.Int32)">
            <summary>
            Elimina una cuenta de usuario del workspace.
            </summary>
            <param name="id">Identificador de la cuenta a eliminar</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.Cancel(System.Int32)">
            <summary>
            Cancela una cuenta de usuario.
            </summary>
            <param name="uid">Identificador de la cuenta a cancelar.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.Verify(System.Int32,System.String)">
            <summary>
            Verifica una cuenta de usuario (pasa del estado 'No verificada' a 'Activa'). Este método permite implementar
            un sistema de generación de cuentas por parte de los usuarios (registro de usuarios).
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <param name="mail">Cuenta de correo del usuario</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.Verify(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Verifica una cuenta de usuario (pasa del estado 'No verificada' a 'Activa'). Este método permite implementar
            un sistema de generación de cuentas por parte de los usuarios (registro de usuarios).
            </summary>
            <param name="QueryString">Colección de parámetros del enlace de verificación mandado por correo electrónico al usuario (Request.QueryString).</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.SendData(System.String)">
            <summary>
            Envia los datos de un usuario a su cuenta de correo para el acceso al Workspace
            </summary>
            <param name="address">Dirección de correo a la que se mandarán los datos. Debe coincidir con la dirección de una cuenta de usuario.</param>
            <returns>La instáncia de MWUser con los datos del usuario que realiza l apetición.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.Autenticate(System.String,System.String)">
            <summary>
            Permite verificar las credenciales de acceso a una cuenta de usuario (login).
            </summary>
            <param name="login">Login del usuario.</param>
            <param name="password">Contraseña del usuario.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.SetPassword(System.Int32,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.SetPassword(System.Int32,System.String,System.String,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="oldPassword">Contraseña actual.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
            <param name="newPasswordVerification">Verificación de la nueva contraseña.</param>
            <remarks>
            Los parámetros newPassword y newPasswordVerification deben coincidir o de lo contrario se lanzará la excepción <see cref="T:Cosmo.Workspace.CosmoSecurityException"/>.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.CheckPassword(System.Int32,System.String)">
            <summary>
            Verifica una contraseña de usuario.
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <param name="password">Contraseña a verificar.</param>
            <returns>Devuelve <c>true</c> si la contraseña coincide o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.GetUserRoles(System.Int32)">
            <summary>
            Obtiene una lista de los roles de un usuario.
            </summary>
            <param name="uid">Identificador único del usuario.</param>
            <returns>Una instancia de <see cref="T:System.Collections.Generic.List`1"/> rellenada con la lista de roles.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.GetUserRoles(System.String)">
            <summary>
            Obtiene una lista de los roles de un usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <returns>Una instancia de <see cref="T:System.Collections.Generic.List`1"/> rellenada con la lista de roles.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.GetRoleUsers(System.Int32)">
            <summary>
            Devuelve una lista de usuarios que tienen un rol específico.
            </summary>
            <param name="roleId">Identificador del rol.</param>
            <returns>
            Una inatsnacia de <see cref="T:System.Collections.Generic.List`1"/> que contiene las inatancias de <see cref="T:Cosmo.Workspace.User"/> que 
            pretenecen al rol solicitado.
            </returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.Search(Cosmo.Workspace.UserSearchCriteria)">
            <summary>
            Selecciona un grupo de usuarios
            </summary>
            <param name="selector">Selector que contiene los critérios de búsqueda</param>
            <returns>La lista de usuarios seleccioandos</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.Search(System.String,System.String,System.Int32)">
            <summary>
            Busca usuarios del workspace.
            </summary>
            <param name="login">Login o fracción a buscar</param>
            <param name="city">Ciudad o fracción a buscar</param>
            <param name="countryId">Identificador del pais a buscar</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.ListCountry">
            <summary>
            Devuelve una lista de paises
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Authentication.LdapAuthenticationProvider.Workspace">
            <summary>
            Establece el workspace para el que se está autenticando.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider">
            <summary>
            Proveedor de autenticación nativo de Cosmo.
            </summary>
            <remarks>
            Este proveedor usa para la autenticación de usuario la base de datos del workspace (tabla USERS).
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.#ctor">
            <summary>
            Devuelve una instancia de Users
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve una instancia de Users.
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace.Workspace"/>.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.GetUsersList(Cosmo.Workspace.User.UserStatus)">
            <summary>
            Devuelve una lista de todos los usuarios.
            </summary>
            <param name="status">Filtra por el estado de la cuenta.</param>
            <returns>Una lista de objetos <see cref="T:Cosmo.Workspace.User"/>.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.GetUsersList">
            <summary>
            Devuelve una lista de todos los usuarios.
            </summary>
            <returns>Una lista de objetos <see cref="T:Cosmo.Workspace.User"/>.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.GetUser(System.String)">
            <summary>
            Obtiene los datos de una cuenta del workspace.
            </summary>
            <param name="login">Login de la cuenta de usuario.</param>
            <returns>Una instáncia <see cref="T:Cosmo.Workspace.User"/>.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.GetUser(System.Int32)">
            <summary>
            Obtiene los datos de una cuenta del workspace.
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <returns>Una instáncia <see cref="T:Cosmo.Workspace.User"/>.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.Create(Cosmo.Workspace.User,System.Boolean)">
            <summary>
            Crea una nueva cuenta de usuario del workspace
            </summary>
            <param name="user">Instáncia de <see cref="T:Cosmo.Workspace.User"/> que contiene los datos de la nueva cuenta</param>
            <param name="confirm">Indica que al agregar el usuario se le mandará un correo electrónico para la confirmación de su cuenta de correo y mientras no se confirme, la cuenta estará en estado pendiente de verificación.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.Create(Cosmo.Workspace.User)">
            <summary>
            Crea una nueva cuenta de usuario del workspace.
            </summary>
            <param name="user">Instáncia de <see cref="T:Cosmo.Workspace.User"/> que contiene los datos de la nueva cuenta.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.Update(Cosmo.Workspace.User)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="user">Instáncia de <see cref="T:Cosmo.Workspace.User"/> que contiene los datos actualizados de la cuenta.</param>
            <remarks>
            Para actualizar la contraseña debe usar el método SetPassword() ya que éste método no actualiza la contraseña.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.Delete(System.Int32)">
            <summary>
            Elimina una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta a eliminar</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.Cancel(System.Int32)">
            <summary>
            Cancela una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta a cancelar</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.Verify(System.Int32,System.String)">
            <summary>
            Verifica una cuenta de usuario (pasa del estado 'No verificada' a 'Activa'). Este método permite implementar
            un sistema de generación de cuentas por parte de los usuarios (registro de usuarios).
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <param name="mail">Cuenta de correo del usuario</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.Verify(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Verifica una cuenta de usuario (pasa del estado 'No verificada' a 'Activa'). Este método permite implementar
            un sistema de generación de cuentas por parte de los usuarios (registro de usuarios).
            </summary>
            <param name="QueryString">Colección de parámetros del enlace de verificación mandado por correo electrónico al usuario (Request.QueryString).</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.SendData(System.String)">
            <summary>
            Envia los datos de un usuario a su cuenta de correo para el acceso al Workspace
            </summary>
            <param name="address">Dirección de correo a la que se mandarán los datos. Debe coincidir con la dirección de una cuenta de usuario.</param>
            <returns>La instáncia de <see cref="T:Cosmo.Workspace.User"/> con los datos del usuario que realiza la petición.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.Autenticate(System.String,System.String)">
            <summary>
            Permite verificar las credenciales de acceso a una cuenta de usuario (login).
            </summary>
            <param name="login">Login del usuario.</param>
            <param name="password">Contraseña del usuario.</param>
            <returns>
            Una instancia de <see cref="T:Cosmo.Workspace.User"/> que representa el usuario autenticado.
            </returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.SetPassword(System.Int32,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.SetPassword(System.Int32,System.String,System.String,System.String)">
            <summary>
            Actualiza los datos de una cuenta de usuario del workspace.
            </summary>
            <param name="uid">Identificador de la cuenta de usuario.</param>
            <param name="oldPassword">Contraseña actual.</param>
            <param name="newPassword">Nueva contraseña del usuario.</param>
            <param name="newPasswordVerification">Verificación de la nueva contraseña.</param>
            <remarks>
            Los parámetros newPassword y newPasswordVerification deben coincidir o de lo contrario se lanzará la excepción <see cref="T:Cosmo.Workspace.CosmoSecurityException"/>.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.CheckPassword(System.Int32,System.String)">
            <summary>
            Verifica una contraseña de usuario.
            </summary>
            <param name="uid">Identificador del usuario.</param>
            <param name="password">Contraseña a verificar.</param>
            <returns>Devuelve <c>true</c> si la contraseña coincide o <c>false</c> en cualquier otro caso.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.GetUserRoles(System.Int32)">
            <summary>
            Obtiene una lista de los roles de un usuario.
            </summary>
            <param name="uid">Identificador único del usuario.</param>
            <returns>Una instancia de <see cref="T:System.Collections.Generic.List`1"/> rellenada con la lista de roles.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.GetUserRoles(System.String)">
            <summary>
            Obtiene una lista de los roles de un usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <returns>Una instancia de <see cref="T:System.Collections.Generic.List`1"/> rellenada con la lista de roles.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.GetRoleUsers(System.Int32)">
            <summary>
            Devuelve una lista de usuarios que tienen un rol específico.
            </summary>
            <param name="roleId">Identificador del rol.</param>
            <returns>
            Una inatsnacia de <see cref="T:System.Collections.Generic.List`1"/> que contiene las inatancias de <see cref="T:Cosmo.Workspace.User"/> que 
            pretenecen al rol solicitado.
            </returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.Search(Cosmo.Workspace.UserSearchCriteria)">
            <summary>
            Selecciona un grupo de usuarios.
            </summary>
            <param name="selector">Selector que contiene los critérios de búsqueda.</param>
            <returns>Una lista de instancias de <see cref="T:Cosmo.Workspace.User"/>.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.Search(System.String,System.String,System.Int32)">
            <summary>
            Busca usuarios del workspace.
            </summary>
            <param name="login">Login o fracción a buscar</param>
            <param name="city">Ciudad o fracción a buscar</param>
            <param name="countryId">Identificador del pais a buscar</param>
            <returns>Una lista de instancias de <see cref="T:Cosmo.Workspace.User"/>.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.ListCountry">
            <summary>
            Devuelve una lista de paises
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.ReadUserFields(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Devuelve una instancia de MWUser con los datos recuperados de un objeto SqlDataReader que apunte a un registro de la tabla USERS
            </summary>
            <param name="reader">Objeto SqlDataReader que apunte a un registro válido</param>
            <returns>Una instancia de WSUser</returns>
            <remarks>
            Para usar este método la senténcia SQL debe contener los campos indicados en la constante USER_FIELDS
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.SelectorSQL(Cosmo.Workspace.UserSearchCriteria)">
            <summary>
            Genera la clausula WHERE correspondiente a un filtro para seleccionar usuarios
            </summary>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmo.Workspace.Authentication.CosmoWorkspaceAuthenticationProvider.Workspace">
            <summary>
            Establece el workspace para el que se está autenticando.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.Net.NetMailMessage">
            <summary>
            Implementa un mensaje de correo electrónico
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetMailMessage.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve una instancia de NetMailMessage
            </summary>
            <param name="workspace">Workspace actual</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetMailMessage.#ctor(Cosmo.Workspace.Workspace,System.Net.Mail.MailMessage)">
            <summary>
            Devuelve una instancia de MailMessage.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetMailMessage.FromSystemMailMessage(System.Net.Mail.MailMessage)">
            <summary>
            Convierte un mensaje de correo System.Net.Mail.MailMessage.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetMailMessage.Workspace">
            <summary>
            Permite acceder al workspace al que pertenece el mensaje.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.UserNotVerifiedException">
            <summary>
            Excepción que se lanza cuando la cuenta de usuario no está verificada.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.UserNotVerifiedException.#ctor">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.UserNotVerifiedException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.Workspace.UserNotVerifiedException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Workspace.UserDisabledException">
            <summary>
            Excepción que se lanza cuando la cuenta de usuario está inhabilitada.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.UserDisabledException.#ctor">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.UserDisabledException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.Workspace.UserDisabledException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Workspace.Net.NetUserMessages">
            <summary>
            Implementa una clase de servicio para la gestión de mensajes inter-usuarios
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetUserMessages.PARAM_MESSAGEID">
            <summary>Identificador del parámetro QueryString para el identificador de mensaje.</summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetUserMessages.PARAM_THREADID">
            <summary>Identificador del parámetro QueryString para el identificador de thread.</summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetUserMessages.PARAM_COMMAND">
            <summary>Identificador del parámetro QueryString para el tipo de comando.</summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetUserMessages.PARAM_FROM">
            <summary>Identificador del parámetro QueryString para el identificador del usuario remitente.</summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetUserMessages.PARAM_TO">
            <summary>Identificador del parámetro QueryString para el identificador del usuario destinatario.</summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetUserMessages.PARAM_SUBJECT">
            <summary>Identificador del parámetro QueryString para el identificador del asunto.</summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetUserMessages.PARAM_BODY">
            <summary>Identificador del parámetro QueryString para el identificador del cuerpo del mensaje.</summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetUserMessages.COMMAND_READ">
            <summary>Identificador del parámetro QueryString para el comando READ.</summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetUserMessages.COMMAND_DELETE">
            <summary>Identificador del parámetro QueryString para el comando DELETE.</summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetUserMessages.COMMAND_COMPOSE">
            <summary>Identificador del parámetro QueryString para el comando COMPOSE.</summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetUserMessages.COMMAND_SEND">
            <summary>Identificador del parámetro QueryString para el comando SEND.</summary>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetUserMessages.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve una instancia de MWNetUserMessages
            </summary>
            <param name="workspace">Workspace actual</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetUserMessages.Send(Cosmo.Workspace.Net.NetUserMessage)">
            <summary>
            Envia un mensaje interno entre dos usuarios
            </summary>
            <param name="message">Una instancia que contiene todos los datos del mensaje</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetUserMessages.Item(System.Int32)">
            <summary>
            Recupera un mensaje
            </summary>
            <param name="messageId">Identificador del mensaje en el servidor</param>
            <returns>Una instancia que contiene todos los datos del mensaje</returns>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetUserMessages.Delete(System.Int32)">
            <summary>
            Elimina un mensaje
            </summary>
            <param name="messageId">Identificador del mensaje en el servidor</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetUserMessages.Received(System.Int32,System.Boolean)">
            <summary>
            Recupera mensajes de un usuario
            </summary>
            <param name="uid">Identificador del usuario (destinatario)</param>
            <param name="onlyUnreaded">Obtener sólo los mensajes no leídos.</param>
            <returns>Una lista de mensajes recibidos</returns>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetUserMessages.GetThreadMessages(System.Int32,System.Int32)">
            <summary>
            Recupera un mensaje
            </summary>
            <param name="threadId">Identificador del mensaje en el servidor</param>
            <param name="uid">Identificador del usuario destinatario.</param>
            <returns>Una instancia que contiene todos los datos del mensaje</returns>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetUserMessages.Received(System.Int32)">
            <summary>
            Recupera mensajes de un usuario
            </summary>
            <param name="uid">Identificador del usuario (destinatario)</param>
            <returns>Una lista de mensajes recibidos</returns>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetUserMessages.ReceivedThreads(System.Int32)">
            <summary>
            Recupera mensajes de un usuario
            </summary>
            <param name="uid">Identificador del usuario (destinatario)</param>
            <returns>Una lista de mensajes recibidos</returns>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetUserMessages.Sended(System.Int32)">
            <summary>
            Recupera mensajes enviados por un usuario
            </summary>
            <param name="uid">Identificador del usuario (remitente)</param>
            <returns>Una lista de todos los mensajes enviados</returns>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetUserMessages.Count(System.Int32)">
            <summary>
            Devuelve el número de mensajes de un usuario
            </summary>
            <param name="uid">Identificador único del usuario</param>
            <returns>El número de mensajes en la bandeja de entrada</returns>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetUserMessages.CountByReceiver(System.Int32,Cosmo.Workspace.Net.NetUserMessage.UserMessageStatus)">
            <summary>
            Devuelve el número de mensajes de un usuario.
            </summary>
            <param name="uid">Identificador único del usuario destinatario.</param>
            <param name="status">Filtro para averiguar el número de mensajes de un determinado estado</param>
            <returns>El número de mensajes en la bandeja de entrada</returns>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetUserMessages.Count(System.Int32,Cosmo.Workspace.Net.NetUserMessage.UserMessageStatus)">
            <summary>
            Devuelve el número de mensajes de un usuario
            </summary>
            <param name="uid">Identificador único del usuario</param>
            <param name="status">Filtro para averiguar el número de mensajes de un determinado estado</param>
            <returns>El número de mensajes en la bandeja de entrada</returns>
        </member>
        <member name="T:Cosmo.Workspace.WorkspaceBase">
            <summary>
            Implementa un workspace básico.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.WorkspaceBase.Id">
            <summary>
            Devuelve o establece el identificador único del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.WorkspaceBase.Name">
            <summary>
            Devuelve o establece el nombre del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.WorkspaceBase.DBConnection">
            <summary>
            Devuelve o establece la conexión a la base de datos.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.WorkspaceBase.Path">
            <summary>
            Devuelve o establece la ruta al sistema de archivos del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.WorkspaceBase.Url">
            <summary>
            Devuelve o establece la URL de acceso al workspace.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.WorkspaceSettings">
            <summary>
            Permite gestionar la configuración del workspace
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.#ctor(System.String)">
            <summary>
            Constructor de la clase.
            </summary>
            <param name="filename">Archivo que contiene la configuración.</param>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.SetSetting(System.String,System.Object)">
            <summary>
            Establece el valor de una clave de configuración
            </summary>
            <param name="key">Clave</param>
            <param name="value">Valor</param>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.RemoveSetting(System.String)">
            <summary>
            Elimina una clave de configuración
            </summary>
            <param name="key">Clave</param>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.GetString(System.String,System.String)">
            <summary>
            Devuelve el valor de una clave de configuración de tipo string
            </summary>
            <param name="key">Clave</param>
            <param name="defaultValue">Valor a devolver si la clave no consta en la configuración</param>
            <returns>El valor guardado en la configuración o si no puede hallarlo, el valor por defecto</returns>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.GetString(System.String)">
            <summary>
            Devuelve el valor de una clave de configuración de tipo string
            </summary>
            <param name="key">Clave</param>
            <returns>El valor guardado en la configuración o si no puede hallarlo, el valor por defecto</returns>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.GetBoolean(System.String,System.Boolean)">
            <summary>
            Devuelve el valor de una clave de configuración booleana
            </summary>
            <param name="key">Clave</param>
            <param name="defaultValue">Valor a devolver si la clave no consta en la configuración</param>
            <returns>El valor guardado en la configuración o si no puede hallarlo, el valor por defecto</returns>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.GetBoolean(System.String)">
            <summary>
            Devuelve el valor de una clave de configuración booleana
            </summary>
            <param name="key">Clave</param>
            <returns>El valor guardado en la configuración o si no puede hallarlo, el valor por defecto</returns>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.GetInt(System.String,System.Int32)">
            <summary>
            Devuelve el valor de una clave de configuración numérico entero
            </summary>
            <param name="key">Clave</param>
            <param name="defaultValue">Valor a devolver si la clave no consta en la configuración</param>
            <returns>El valor guardado en la configuración o si no puede hallarlo, el valor por defecto</returns>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.GetInt(System.String)">
            <summary>
            Devuelve el valor de una clave de configuración numérico entero
            </summary>
            <param name="key">Clave</param>
            <returns>El valor guardado en la configuración o si no puede hallarlo, el valor por defecto</returns>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.GetWorkspaceConnectionString">
            <summary>
            Devuelve la cadena de conexión del workspace
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.GetConnectionString(System.String)">
            <summary>
            Devuelve la cadena de conexión del workspace
            </summary>
            <param name="name">Nombre de la conexión</param>
            <returns>La cadena de conexión solicitada</returns>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.SetConnectionString(System.String,System.String)">
            <summary>
            Establece el valor de una clave de configuración
            </summary>
            <param name="name">Nombre de la conexión</param>
            <param name="dsn">Cadena de conexión a la fuenta de datos</param>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.RemoveConnectionString(System.String)">
            <summary>
            Elimina una cadena de conexión a datos
            </summary>
            <param name="name">Nombre de la conexión</param>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.CreateConfigurationFile(Cosmo.Workspace.Workspace,System.Boolean)">
            <summary>
            Crea un archivo de configuración compatible con ASP.NET
            </summary>
            <param name="workspace">Workspace para el que se crea el archivo</param>
            <param name="overwrite">Indica si debe sobreescribir el archivo en caso de que exista</param>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.GetSetting(System.String,System.String)">
            <summary>
            Devuelve el valor de una clave de configuración
            </summary>
            <param name="key">Clave</param>
            <param name="defaultValue">Valor a devolver si la clave no consta en la configuración</param>
        </member>
        <member name="M:Cosmo.Workspace.WorkspaceSettings.GetSetting(System.String)">
            <summary>
            Devuelve el valor de una clave de configuración
            </summary>
            <param name="key">Clave</param>
        </member>
        <member name="P:Cosmo.Workspace.WorkspaceSettings.Filename">
            <summary>
            Devuelve el nombre del archivo que contiene la configuración del workspace
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.WorkspaceSettingsKeys">
            <summary>
            Implementa una clase que enumera las entradas comunes 
            para la configuración de un workspace
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.WorkspaceId">
            <summary>Identificador del workspace</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.WorkspaceName">
            <summary>Nombre del workspace</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.WorkspaceUrl">
            <summary>Dirección URL de inicio del workspace</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.WorkspaceMail">
            <summary>Dirección de correo electrónico de contacto con los responsables del workspace</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.WorkspaceClosedPage">
            <summary>Script/Página de servidor fuera de servicio</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.WorkspaceADODSN">
            <summary>Cadena de conexión en formato ADO</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.WorkspaceStatus">
            <summary>Estado del workspace</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.WorkspaceWebPath">
            <summary>Ruta a la raíz del sitio web dónde se halla implementado el workspace</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.WorkspaceFSPath">
            <summary>Nombre de la carpeta que contiene los recursos asociados a objetos del workspace</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.HtmlCharset">
            <summary>Conjunto de carácteres con el que se codificará el contenido de las páginas Html/Xhtml</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.HtmlLanguage">
            <summary>Indicador del idioma de las páginas Html/Xhtml</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.SecuritySessionRequired">
            <summary>Sesión de usuario requerida</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.SecurityMailVerification">
            <summary>Comprueba el correo electrónico de los usuario al crear un nuevo usuario (envía un mail de confirmación)</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.SecurityFormMethod">
            <summary>Método de envio de formularios web</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.SecurityBloquedIP">
            <summary>Lista de IPs bloqueadas</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.SecuritySessionTimeout">
            <summary>Tiempo de validez de una sesión de usuario</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.SecurityShowDetailedErrors">
            <summary>Indica si el servidor debe mostrar los detalles cuando se produca un error</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.SecurityEncryptionKey">
            <summary>Clave de encriptación por defecto a usar para encriptar cadenas de texto</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.SecurityAuthenticationProvider">
            <summary>Nombre del proveedor (clase) usada para la autenticación de usuarios</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.SMTPHost">
            <summary>Servidor SMTP</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.SMTPPort">
            <summary>Puerto del servidor SMTP</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.SMTPUseSSL">
            <summary>Indica si se conecta mediante SSL</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.SMTPLogin">
            <summary>Login de la cuenta en el servidor SMTP</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.SMTPPassword">
            <summary>Contraseña de la cuenta en el servidor SMTP</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.SMTPAuthentication">
            <summary>Método de autenticación para el servidor SMTP</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxServerName">
            <summary>Nombre del servidor (host) de Windows Fax</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxPrinterName">
            <summary>Nombre de la impresora asociada a Windows Fax</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxServerAPI">
            <summary>Proveedor del servicio de Fax</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxAllowedExtensions">
            <summary>Extensiones permitidas en el servicio de FAX</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxSenderName">
            <summary>Nombre del remitente del servicio de FAX</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxSenderNumber">
            <summary>Número de FAX del remitente del servicio de FAX</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxSenderMail">
            <summary>Correo electrónico del remitente del servicio de FAX</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxSenderCompany">
            <summary>Compañia del remitente del servicio de FAX</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxSenderAddress">
            <summary>Dirección del remitente del servicio de FAX</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxSenderZip">
            <summary>CP/ZIP del remitente del servicio de FAX</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxSenderCity">
            <summary>Ciudad del remitente del servicio de FAX</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxSenderCountry">
            <summary>Pais del remitente del servicio de FAX</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxCoverUse">
            <summary>Indica si se debe usar cubierta para el Fax</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxCoverFile">
            <summary>Archivo que contiene la cubierta de Fax</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxMail2FaxSubject">
            <summary>Asunto del mensaje que se manda cuando se usa el proveedor Mail2Fax</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxMail2FaxFrom">
            <summary>Dirección de origen del mensaje que se manda cuando se usa el proveedor Mail2Fax</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxMail2FaxTo">
            <summary>Dirección de destino del mensaje que se manda cuando se usa el proveedor Mail2Fax</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.FaxSendConfirmation">
            <summary>Indica si se debe mandar una confirmación por mail de Fax mandado al autor</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.TemplateFax2Mail">
            <summary>Plantilla (path+nombre) que se usará para reenviar un Fax por mail</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.TemplateHtmlMail">
            <summary>Plantilla HTML para re-envio de mail</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.LicenceMailbeeObjects">
            <summary>Clave de la licéncia de uso del componente MailBee</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.UsersMailFromAddress">
            <summary>Cuenta de ex-mail desde dónde se envian notificaciones a los usuarios del workspace</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.UsersMailFromName">
            <summary>Nombre asociado a la cuenta de ex-mail desde dónde se envian notificaciones a los usuarios del workspace</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.UsersJoinSubject">
            <summary>Asunto del correo de verificación que reciben los usuarios al crear una nueva cuenta</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.UsersJoinBody">
            <summary>Cuerpo del correo de verificación que reciben los usuarios al crear una nueva cuenta</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.UsersJoinHTMLFormat">
            <summary>Formato del correo de verificación que reciben los usuarios al crear una nueva cuenta</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.UsersRecoverSubject">
            <summary>Asunto del correo para recuperar las credenciales de un usuario del workspace</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.UsersRecoverBody">
            <summary>Cuerpo del correo para recuperar las credenciales de un usuario del workspace</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.UsersRecoverHTMLFormat">
            <summary>Formato del correo para recuperar las credenciales de un usuario del workspace</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.NetQueuePath">
            <summary>Ruta física de la carpeta contenedora de los objetos de la cola</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.PrivateMessagesNotifySubject">
            <summary>Asunto del mensaje de notificación de recepción de mensaje privado</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceSettingsKeys.PrivateMessagesNotifyBody">
            <summary>Cuerpo del mensaje de notificación de recepción de mensaje privado</summary>
        </member>
        <member name="T:Cosmo.Workspace.PresentationRules">
            <summary>
            Implementa una clase de servicio para la gestión de las reglas de presentación
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.PresentationRules.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve un a instancia de PresentationRules
            </summary>
            <param name="workspace">Una instancia del workspace</param>
        </member>
        <member name="M:Cosmo.Workspace.PresentationRules.List(System.Int32)">
            <summary>
            Genera una lista de los objetos.
            </summary>
            <param name="folderid">Identificador de la carpeta para la que se desea obtener la lista.</param>
        </member>
        <member name="M:Cosmo.Workspace.PresentationRules.Item(System.Int32)">
            <summary>
            Permite recuperar los datos de una regla de presentación.
            </summary>
            <param name="id">Identificador de la regla.</param>
            <returns>Una instáncia de WSDevice.</returns>
        </member>
        <member name="M:Cosmo.Workspace.PresentationRules.Add(Cosmo.Workspace.PresentationRule)">
            <summary>
            Crea una nueva regla de presentación.
            </summary>
            <param name="rule">Instáncia de PresentationRule que contiene los detalles de la regla.</param>
        </member>
        <member name="M:Cosmo.Workspace.PresentationRules.Update(Cosmo.Workspace.PresentationRule)">
            <summary>
            Actualiza los datos de una regla de presentación.
            </summary>
            <param name="rule">Instáncia de PresentationRule que contiene los datos actualizados de la regla.</param>
        </member>
        <member name="M:Cosmo.Workspace.PresentationRules.Delete(System.Int32)">
            <summary>
            Elimina una regla de presentación.
            </summary>
            <param name="id">Identificador de la regla.</param>
        </member>
        <member name="T:Cosmo.Workspace.Log.LogEntry">
            <summary>
            Implementa una entrada del registro de eventos
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.Log.LogEntry.LOGIN_SYSTEM">
            <summary>Login correspondiente a una acción de sistema (no achacable a ningún usuario).</summary>
        </member>
        <member name="M:Cosmo.Workspace.Log.LogEntry.#ctor">
            <summary>
            Devuelve una instancia de LogEntry
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Log.LogEntry.#ctor(System.String,System.String,Cosmo.Workspace.Log.LogEntry.LogEntryType)">
            <summary>
            Devuelve una instancia de LogEntry
            </summary>
            <param name="context">Contexto</param>
            <param name="message">Mensaje</param>
            <param name="type">Tipo de registro</param>
        </member>
        <member name="M:Cosmo.Workspace.Log.LogEntry.#ctor(System.String,System.String,System.String,Cosmo.Workspace.Log.LogEntry.LogEntryType)">
            <summary>
            Devuelve una instancia de LogEntry
            </summary>
            <param name="application">Nombre de la aplicación</param>
            <param name="context">Contexto</param>
            <param name="message">Mensaje</param>
            <param name="type">Tipo de registro</param>
        </member>
        <member name="M:Cosmo.Workspace.Log.LogEntry.#ctor(System.String,System.String,System.String,System.String,Cosmo.Workspace.Log.LogEntry.LogEntryType)">
            <summary>
            Devuelve una instancia de LogEntry
            </summary>
            <param name="application">Nombre de la aplicación</param>
            <param name="context">Contexto</param>
            <param name="message">Mensaje</param>
            <param name="login">Login del usuario</param>
            <param name="type">Tipo de registro</param>
        </member>
        <member name="M:Cosmo.Workspace.Log.LogEntry.#ctor(System.String,System.String,System.Int32,System.String,Cosmo.Workspace.Log.LogEntry.LogEntryType)">
            <summary>
            Devuelve una instancia de LogEntry
            </summary>
            <param name="application">Nombre de la aplicación</param>
            <param name="context">Contexto</param>
            <param name="code">Código del error</param>
            <param name="message">Mensaje</param>
            <param name="type">Tipo de registro</param>
        </member>
        <member name="M:Cosmo.Workspace.Log.LogEntry.#ctor(System.String,System.String,System.Int32,System.String,System.String,Cosmo.Workspace.Log.LogEntry.LogEntryType)">
            <summary>
            Devuelve una instancia de LogEntry
            </summary>
            <param name="application">Nombre de la aplicación</param>
            <param name="context">Contexto</param>
            <param name="code">Código del error</param>
            <param name="message">Mensaje</param>
            <param name="login">Login del usuario</param>
            <param name="type">Tipo de registro</param>
        </member>
        <member name="P:Cosmo.Workspace.Log.LogEntry.ID">
            <summary>
            Identificador único del registro
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Log.LogEntry.Date">
            <summary>
            Decha y hora de la entrada al registro de eventos
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Log.LogEntry.UserLogin">
            <summary>
            Login del usuario identificado
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Log.LogEntry.ApplicationName">
            <summary>
            Nombre de la aplicación o libreria que generó la entrada al registro
            </summary>
            <remarks>
            Usualmente se usa para este campo:
               Assembly.GetEntryAssembly().FullName
               Assembly.GetExecutingAssembly().FullName
            </remarks>
        </member>
        <member name="P:Cosmo.Workspace.Log.LogEntry.Context">
            <summary>
            Contexto dónde se provocó el registro
            </summary>
            <remarks>
            Para los Assemblies se puede usar la notación Clase.Método() y para las aplicaciones
            web el nombre del script ASPX (por ejemplo).
            </remarks>
        </member>
        <member name="P:Cosmo.Workspace.Log.LogEntry.WorkspaceName">
            <summary>
            Nombre del workspace dónde se estaba ejecutando el código
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Log.LogEntry.Code">
            <summary>
            Código del error o evento informativo
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Log.LogEntry.Message">
            <summary>
            Mensaje descriptivo
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Log.LogEntry.Type">
            <summary>
            Tipo de registro
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.Log.LogEntry.LogEntryType">
            <summary>
            Tipos de registro
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.Log.LogEntry.LogEntryType.EV_INFORMATION">
            <summary>Registro de tipo informativo</summary>
        </member>
        <member name="F:Cosmo.Workspace.Log.LogEntry.LogEntryType.EV_WARNING">
            <summary>Registro de tipo advertencia</summary>
        </member>
        <member name="F:Cosmo.Workspace.Log.LogEntry.LogEntryType.EV_ERROR">
            <summary>Registro de tipo error de aplicación</summary>
        </member>
        <member name="F:Cosmo.Workspace.Log.LogEntry.LogEntryType.EV_SECURITY">
            <summary>Registro de advertencia de seguridad</summary>
        </member>
        <member name="T:Cosmo.Workspace.InvalidMailException">
            <summary>
            Excepción que se lanza cuando la cuenta de correo electrónico no existe o no está asociada a ninguna cuenta de usuario.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.InvalidMailException.#ctor">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.InvalidMailException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.Workspace.InvalidMailException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Workspace.InvalidSessionException">
            <summary>
            Excepción de error de sesión
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.InvalidSessionException.#ctor">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.InvalidSessionException.#ctor(System.String)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
        </member>
        <member name="M:Cosmo.Workspace.InvalidSessionException.#ctor(System.String,System.Exception)">
            <summary>
            Devuelve una instancia de InvalidSessionException
            </summary>
            <param name="s">Mensaje</param>
            <param name="ex">Excepción</param>
        </member>
        <member name="T:Cosmo.Workspace.Net.NetFaxMessage">
            <summary>
            Implementa un mensaje de FAX
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetFaxMessage.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve una instáncia de <see cref="T:Cosmo.Workspace.Net.NetFaxMessage"/>.
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace.Workspace"/>.</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetFaxMessage.AttachDocument(System.String)">
            <summary>
            Adjunta el archivo a mandar por FAX.
            </summary>
            <remarks>
            Un FAX sólo admite un archivo por envio. Si se invoca este método más de una vez, sobreescribirá el documento anterior.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetFaxMessage.IsFaxableFile(System.String)">
            <summary>
            Indica si un archivo puede o no ser mandado por FAX (según su tipo).
            </summary>
            <param name="filename">Nombre + path del archivo.</param>
            <returns>Un valor booleano indicando si se puede o no mandaro por fax.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetFaxMessage.LoadMessage(System.String)">
            <summary>
            Carga un mensaje guardado.
            </summary>
            <param name="filename">Nombre + path del archivo a cargar.</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetFaxMessage.SaveMessage(System.String)">
            <summary>
            Guarda un mensaje a un archivo.
            </summary>
            <param name="filename">Nombre + path del archivo de destino.</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetFaxMessage.Dispose">
            <summary>
            Libera todos los recursos usados.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetFaxMessage.Workspace">
            <summary>
            Permite acceder al workspace asociado al mensaje.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetFaxMessage.Attachments">
            <summary>
            Colección de archivos adjuntos al mensaje.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetFaxMessage.FromName">
            <summary>
            Nombre del remitente.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetFaxMessage.ToNumber">
            <summary>
            Número de FAX de destino.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetFaxMessage.ToName">
            <summary>
            Nombre del destinatario.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetFaxMessage.Subject">
            <summary>
            Título del mensaje.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetFaxMessage.Body">
            <summary>
            Texto del mensaje.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetFaxMessage.Organization">
            <summary>
            Devuelve o establece la organización.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetFaxMessage.Priority">
            <summary>
            Prioridad del mensaje en la cola de salida del workspace.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.Net.MWNetQueueType">
            <summary>
            Tipos de trabajo que acepta la cola de un workspace
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.MWNetQueueType.Mail">
            <summary>Mensaje de correo</summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.MWNetQueueType.FAX">
            <summary>Mensaje de FAX</summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.MWNetQueueType.Print">
            <summary>Impresión en impresora local del servidor</summary>
        </member>
        <member name="T:Cosmo.Workspace.Net.NetQueue">
            <summary>
            Implementa una clase de servicio para la gestión de la cola de trabajos de un workspace
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetQueue.QUEUE_MAX_RETRY">
            <summary>Número máximo de intentos de envío antes de producir error.</summary>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetQueue.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve una instancia de NetQueue
            </summary>
            <param name="workspace">Workspace actual</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetQueue.AddJob(System.Object,System.String)">
            <summary>
            Agrega un nuevo trabajo a la cola de salida
            </summary>
            <param name="outerObject">Objeto a encolar. Debe ser del tipo NetMailMessage, NetFaxMessage o NetPrintMessage.</param>
            <param name="owner">Propietario del trabajo</param>
            <returns>Una instáncia de la clase NetQueueJob con las propiedades del nuevo trabajo.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetQueue.AddJob(System.Object,MailBee.Mime.MailPriority)">
            <summary>
            Agrega un nuevo trabajo a la cola de salida
            </summary>
            <param name="outerObject">Objeto a encolar. Debe ser del tipo NetMailMessage, NetFaxMessage o NetPrintMessage.</param>
            <param name="Priority">Prioridad</param>
            <returns>Una instáncia de la clase NetQueueJob con las propiedades del nuevo trabajo.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetQueue.AddJob(System.Object)">
            <summary>
            Agrega un nuevo trabajo a la cola de salida
            </summary>
            <param name="outerObject">Objeto a encolar. Debe ser del tipo NetMailMessage, NetFaxMessage o NetPrintMessage.</param>
            <returns>Una instáncia de la clase NetQueueJob con las propiedades del nuevo trabajo.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetQueue.GetNextJob">
            <summary>
            Recupera el siguiente trabajo de salida encolado y actualiza el número de intentos.
            </summary>
            <returns>Una instáncia de la clase NetQueueJob con las propiedades del trabajo.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetQueue.CancelJob(System.String)">
            <summary>
            Cancela un trabajo de salida. Este comando elimina el archivo asociado al trabajo
            </summary>
            <param name="jobId">Identificador del trabajo.</param>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetQueue.GetJobFilename(System.String)">
            <summary>
            Obtiene el nombre y la ruta del archivo asociado a un trabajo a partir de su identificador.
            </summary>
            <param name="jobId">Identificador del trabajo.</param>
            <returns>El nombre del archivo con la ruta.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetQueue.GetJobMessage(Cosmo.Workspace.Net.NetQueueJob)">
            <summary>
            Carga el mensaje en la clase asociada al tipo a partir del archivo del trabajo.
            </summary>
            <param name="job">Una instáncia de NetQueueJob.</param>
            <returns>El mensaje.</returns>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetQueue.QueueFolder">
            <summary>
            La ruta de la carpeta que contiene los archivos correspondientes a los trabajos.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.Net.NetUserMessage">
            <summary>
            Implementa un mensaje de usuario a usuario
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Net.NetUserMessage.#ctor">
            <summary>
            Devuelve una instancia de MWNetUserMessage
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetUserMessage.ID">
            <summary>
            Identificador único del mensaje en el servidor
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetUserMessage.ThreadId">
            <summary>
            Devuelve o establece el identificador de thread al que pertenece el mensaje.
            </summary>
            <remarks>
            El ID de thread es el identificador del primer mensaje del thread. Un thread está compuesto por mensajes
            hechos mediante respuesta al anterior.
            </remarks>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetUserMessage.FromUserID">
            <summary>
            Identificador del autor del mensaje
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetUserMessage.ToUserID">
            <summary>
            Identificador del receptor del mensaje
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetUserMessage.Subject">
            <summary>
            Título del mensaje (asunto)
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetUserMessage.Body">
            <summary>
            Cuerpo del mensaje
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetUserMessage.FromIP">
            <summary>
            IP del equipo que envió el mensaje
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetUserMessage.Sended">
            <summary>
            Fecha en la que realizó en envio del mensaje
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetUserMessage.Status">
            <summary>
            Fecha en la que realizó en envio del mensaje
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Net.NetUserMessage.Responses">
            <summary>
            Devuelve el número de respuestas al mensaje (incluyendo el mensaje inicial).
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.Net.NetUserMessage.UserMessageStatus">
            <summary>
            Estados posibles de un mensaje
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetUserMessage.UserMessageStatus.Unreaded">
            <summary>No leído</summary>
        </member>
        <member name="F:Cosmo.Workspace.Net.NetUserMessage.UserMessageStatus.Readed">
            <summary>Leído</summary>
        </member>
        <member name="T:Cosmo.Workspace.PresentationRule">
            <summary>
            Implementa una regla de presentación Web
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.PresentationRule.#ctor">
            <summary>
            Devuelve una instancia de PresentationRule
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationRule.ID">
            <summary>
            Identificador único de la regla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationRule.Name">
            <summary>
            Nombre de la regla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationRule.Agent">
            <summary>
            Fragmento del BrowserAgent que describe de forma única los dispositivos englobados por esta regla
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationRule.Type">
            <summary>
            Tipo de dispositivo que describe la regla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationRule.TemplateID">
            <summary>
            Identificador de la plantilla de presentación que se aplicará cuando se active la regla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationRule.Priority">
            <summary>
            Prioridad de aplicación de la regla
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationRule.RedirectToURL">
            <summary>
            Contiene la URL a la que se redirige al cliente si se activa esta regla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationRule.Default">
            <summary>
            Indica si se trata de la regla de visualización por defecto
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationRule.CanDownloadFiles">
            <summary>
            Indica si permite la descarga de archivos (Download)
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationRule.CanUploadFiles">
            <summary>
            Indica si permite cargar archivos (Upload)
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationRule.CanExecuteJavaScript">
            <summary>
            Indica si puede ejecutar secuencias JavaScript en el navegador
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationRule.CanAcceptCookies">
            <summary>
            Indica si el navegador acepta Cookies
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.PresentationRule.DeviceTypes">
            <summary>
            Tipos de dispositivo
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationRule.DeviceTypes.Unknown">
            <summary>No clasificado o desconocido</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationRule.DeviceTypes.PC">
            <summary>PC, portátil</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationRule.DeviceTypes.Pad">
            <summary>Pad's (iPad, etc).</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationRule.DeviceTypes.SmartPhone">
            <summary>Smartphones (iPhone, iTouch, Android, BlackBerry, etc).</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationRule.DeviceTypes.MobilePhone">
            <summary>Teléfonos móbiles (con navegadores WAP, cHTML o de prestaciones limitadas).</summary>
        </member>
        <member name="T:Cosmo.Workspace.PresentationTemplate">
            <summary>
            Implementa una plantilla de presentación
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplate.OBJECT_ID">
            <summary>
            Identificador del tipo de objeto
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplate.OBJECT_VER">
            <summary>
            Versión del formato de empaquetado de este tipo de objeto
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplate.OBJECT_FILEEXTENSION">
            <summary>
            Extensión de los archivo de empaquetado (serialización) de este tipo de objeto
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplate.#ctor">
            <summary>
            Devuelve una instancia de PresentationTemplate
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplate.GetPart(Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts)">
            <summary>
            Obtiene un fragmento de la plantilla.
            </summary>
            <param name="partid">Identificador del fragmento de plantilla.</param>
            <returns>Una instáncia de MWTemplatePart.</returns>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplate.SetPart(Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts,System.String)">
            <summary>
            Permite establecer el contenido de un fragmento de plantilla.
            </summary>
            <param name="partid">Identificador del fragmento de plantilla.</param>
            <param name="html">Una cadena con el código xHTML.</param>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplate.ID">
            <summary>
            Establece o devuelve el identificador de la plantilla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplate.Name">
            <summary>
            Establece o devuelve el nombre de la plantilla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplate.Description">
            <summary>
            Establece o devuelve la descripción de la plantilla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplate.Author">
            <summary>
            Establece o devuelve el autor (o información de copyright) de la plantilla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplate.Version">
            <summary>
            Establece o devuelve la versión de la plantilla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplate.Type">
            <summary>
            Establece o devuelve el tipo de plataforma de la plantilla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplate.UsePageHeaders">
            <summary>
            Establece o devuelve si se debe mostrar la estructura de la página o sólo el contenido
            generado (para integrar aplicaciones en otros portales o páginas)
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplate.Renderer">
            <summary>
            Establece o devuelve el nombre del archivo DLL (libreria de clases) que se usará para
            renderizar la página.
            </summary>
            <remarks>
            Si este campo se deja en blanco se usará el renderizado estándar de MobilerWhere, usando
            la información de la plantilla.
            </remarks>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplate.Created">
            <summary>
            Establece o devuelve la fecha de instalación de la plantilla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplate.Updated">
            <summary>
            Establece o devuelve la fecha de la última modificación de la plantilla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplate.Owner">
            <summary>
            Establece o devuelve el login del propietario (instalador) de la plantilla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplate.Parts">
            <summary>
            Establece o devuelve el array de partes (fragmentos) de la plantilla de presentación
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplate.Files">
            <summary>
            Establece o devuelve el array de archivos adjuntos a la plantilla de presentación
            </summary>
            <remarks>
            Este array sólo se usa para tareas de instalación de plantillas empaquetadas en archivos
            MWT (XML).
            </remarks>
        </member>
        <member name="T:Cosmo.Workspace.PresentationTemplateFile">
            <summary>
            Implementa un archivo adjunto de la plantilla.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplateFile.#ctor">
            <summary>
            Devuelve una instancia de PresentationTemplateFile
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplateFile.#ctor(System.String,Cosmo.Workspace.WorkspaceFolders)">
            <summary>
            Devuelve una instancia de PresentationTemplateFile
            </summary>
            <param name="filename">Nombre+ruta del archivo</param>
            <param name="destination">Identificador de la carpeta de destino</param>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplateFile.Save(System.String)">
            <summary>
            Guarda el archivo en una carpeta específica.
            </summary>
            <param name="path">Ruta dónde se debe almacenar el archivo.</param>
            <remarks>Si el archivo existe, lo sobreescribe.</remarks>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplateFile.FileName">
            <summary>
            Contiene de forma temporal el nombre y ruta del archivo.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplateFile.Name">
            <summary>
            Nombre del archivo.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplateFile.Destination">
            <summary>
            Carpeta de destino dónde se debe almacenar el archivo.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplateFile.Length">
            <summary>
            Contiene la longitud (en bytes) del archivo (en el buffer).
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplateFile.Buffer">
            <summary>
            Buffer que contiene el archivo.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.PresentationTemplatePart">
            <summary>
            Implementa un fragmento de una plantilla de presentación
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_TEMPLATE_ID">
            <summary>Identificador de la plantilla de presentación.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_OBJECT_TITLE">
            <summary>Título del objeto.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_OBJECT_NAME">
            <summary>Nombre del objeto.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_OBJECT_DESC">
            <summary>Descripción del objeto.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_OBJECT_ITEMS">
            <summary>Número de elementos en el objeto.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_MENU_CAPTION">
            <summary>Título del menú.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_MENU_ITEM">
            <summary>Elemento del menú.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_MENU_ITEMS">
            <summary>Número de elementos del menú.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_TABLE_CELL_VALUE">
            <summary>Contenido de la celda.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_TABLE_CAPTION">
            <summary>Título de la tabla.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_TABLE_SUMMARY">
            <summary>Sumario (descripción) de la tabla.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_FORM_LABEL">
            <summary>Etiqueta del campo de formulario.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_FORM_CONTROL">
            <summary>Control del campo de formulario.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_FORM_CONTROLNAME">
            <summary>Nombre (y ID) del campo de formulario.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_FORM_CONTROLDESC">
            <summary>Descripción (ayuda) del campo de formulario.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_FORM_TOOLBAR">
            <summary>Zona de botones de comando del formulario.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_RECORD_LABEL">
            <summary>Etiqueta del campo de una página de propiedades.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_RECORD_VALUE">
            <summary>Valor del campo de una página de propiedades.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_RECORD_ITEM">
            <summary>Elemento de una página de propiedades.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_LIST_CAPTION">
            <summary>Título de una lista.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_LISTITEM_ITEMCOUNT">
            <summary>Número de elementos de una lista.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_LISTITEM_ICON">
            <summary>Icono del elemento de la lista.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_LISTITEM_ITEM">
            <summary>Elemento de la lista.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_LISTITEM_IDENTATION">
            <summary>Espacio de identación del elemento de la lista.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_MSGBOX_TITLE">
            <summary>Título del mensaje.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_MSGBOX_DESCRIPTION">
            <summary>Contenido del mensaje.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_MSGBOX_ACTION">
            <summary>Barra de botones del mensaje.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_MSGBOX_ICON">
            <summary>Icono del mensaje.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_PAGE_TITLE">
            <summary>Título de la página.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_PAGE_DESCRIPTION">
            <summary>Descripción breve de la página.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_PAGE_KEYWORDS">
            <summary>Palabras clave de la página.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_PAGE_CHARSET">
            <summary>Juego de carácteres de la página.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_PAGE_GENERATOR">
            <summary>Software con el que se generó la página.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_PAGE_LANGUAGE">
            <summary>Código del idioma de la página.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_PAGE_SOURCE">
            <summary>Orígen del contenido de la página.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_PAGE_HEAD_TITLE">
            <summary>Título de la página.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_PAGE_HEAD_DESCRIPTION">
            <summary>Descripción breve de la página.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_PAGE_NAVBAR_RIGHT">
            <summary>Parte derecha de la barra de navegación de la página.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.TAG_PAGE_NAVBAR_LEFT">
            <summary>Parte izquierda de la barra de navegación de la página.</summary>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplatePart.#ctor(Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts,System.String)">
            <summary>
            Devuelve una instancia de PresentationTemplatePart
            </summary>
            <param name="partid">Identificador de la parte</param>
            <param name="html">Código XHTML que contiene</param>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplatePart.#ctor">
            <summary>
            Devuelve una instancia de PresentationTemplatePart
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplatePart.ID">
            <summary>
            Identificador de la parte
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplatePart.Html">
            <summary>
            Contenido XHTML de la parte
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.PresentationTemplatePart.Updated">
            <summary>
            Indica si ha sido actualizada y no guardada en la base de datos
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts">
            <summary>
            Enumera los tipos de partes de una plantilla DOM.
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.PagesHeader">
            <summary>Cabecera de la página.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.PagesFooter">
            <summary>Pié de la página.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.PagesTitle">
            <summary>Título de la página.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.PagesUnmanagedHtml">
            <summary>Zona de código XHTML libre (no controlado).</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.PagesNavbar">
            <summary>Barra de navegación de la página.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.MenuHeader">
            <summary>Cabecera de menú.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.MenuGroupHeader">
            <summary>Cabecera de grupo de opciones de menú.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.MenuElement">
            <summary>Elemento de menú.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.MenuGroupFooter">
            <summary>Pié de grupo de opciones de menú.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.MenuFooter">
            <summary>Pié de menú.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.TableHeader">
            <summary>Cabecera de tabla.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.TableTitleHeader">
            <summary>Cabecera de la fila de títulos de la tabla.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.TableTitleCell">
            <summary>Contenido de las celdas de títulos de la tabla.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.TableTitleFooter">
            <summary>Pié de la fila de títulos de la tabla.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.TableDataHeader">
            <summary>Cabecera de las filas de datos de la tabla.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.TableDataCell">
            <summary>Contenido de las celdas de datos de la tabla.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.TableDataFooter">
            <summary>Pié de las celdas de datos de la tabla.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.TableReportHeader">
            <summary>Cabecera de las celdas de resultados de la tabla.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.TableReportCell">
            <summary>Contenido de las celdas de resultados de la tabla.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.TableReportFooter">
            <summary>Pié de las celdas de resultados de la tabla.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.TableFooter">
            <summary>Pié de la tabla.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.FormHeader">
            <summary>Cabecera del formulario.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.FormFieldHeader">
            <summary>Cabecera de campo del formulario.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.FormFieldControl">
            <summary>Contenido del campo del formulario (etiqueta + control + ayuda).</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.FormFieldFooter">
            <summary>Pié de campo del formulario.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.FormLongtextHeader">
            <summary>Cabecera de campo de texto largo (textarea) del formulario.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.FormLongtextControl">
            <summary>Contenido del campo de texto largo (textarea) del formulario.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.FormLongtextFooter">
            <summary>Pié de campo de texto largo (textarea) del formulario.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.FormButtons">
            <summary>Zona de botones del formulario.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.FormFooter">
            <summary>Pié del formulario.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.PropertyPageHeader">
            <summary>Cabecera de la página de propiedades.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.PropertyPageFieldHeader">
            <summary>Cabecera de campo de la página de propiedades.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.PropertyPageFieldValue">
            <summary>Contenido del campo de la página de propiedades.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.PropertyPageFieldFooter">
            <summary>Pié de campo de la página de propiedades.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.PropertyPageFooter">
            <summary>Pié de la página de propiedades.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.ListHeader">
            <summary>Cabecera de la lista.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.ListElement">
            <summary>Elemento de la lista.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.ListFooter">
            <summary>Pié de la lista.</summary>
        </member>
        <member name="F:Cosmo.Workspace.PresentationTemplatePart.DOMTemplateParts.MessageBody">
            <summary>Cuerpo del mensaje.</summary>
        </member>
        <member name="T:Cosmo.Workspace.PresentationTemplates">
            <summary>
            Implementa una clase de servicio para gestionar las plantillas de presentación
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplates.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve una instancia de PresentationTemplates
            </summary>
            <param name="workspace">Una instáncia de Workspace que representa el workspace actual</param>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplates.List(Cosmo.Workspace.PresentationRule.DeviceTypes)">
            <summary>
            Devuelve una lista de plantillas de presentación filtrada por tipo de plataforma que se encuentran instaladas en el workspace
            </summary>
            <param name="type">Tipo de plataforma</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplates.List">
            <summary>
            Devuelve una lista de plantillas de presentación que se encuentran instaladas en el workspace
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplates.Item(System.Int32)">
            <summary>
            Permite obtener una plantilla completa.
            </summary>
            <param name="id">Identificador de la plantilla.</param>
            <returns>Una instáncia de MWTemplate.</returns>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplates.Add(Cosmo.Workspace.PresentationTemplate@)">
            <summary>
            Agrega una nueva plantilla.
            </summary>
            <param name="template">Una instancia de <see cref="T:Cosmo.Workspace.PresentationTemplate"/> que contiene la plantilla a agregar.</param>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplates.Update(Cosmo.Workspace.PresentationTemplate)">
            <summary>
            Actualiza los datos de una plantilla.
            </summary>
            <param name="template">Una instancia de <see cref="T:Cosmo.Workspace.PresentationTemplate"/> que contiene los datos actualizados.</param>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplates.Delete(System.Int32)">
            <summary>
            Elimina la plantilla y sus partes asociadas.
            </summary>
            <param name="id">Identificador de la plantilla.</param>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplates.Install(Cosmo.Workspace.PresentationTemplate)">
            <summary>
            Instala la plantilla dentro del workspace.
            </summary>
            <param name="template">Una instáncia de <see cref="T:Cosmo.Workspace.PresentationTemplate"/> que contiene los datos de la plantilla</param>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplates.Install(System.String)">
            <summary>
            Instala la plantilla dentro del workspace.
            </summary>
            <param name="filename">Nombre y ruta del paquete que contiene la plantilla.</param>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplates.Export(Cosmo.Workspace.PresentationTemplate,System.String)">
            <summary>
            Exporta una plantilla de presentación a un archivo MWT (XML).
            </summary>
            <param name="template">Una instancia de <see cref="T:Cosmo.Workspace.PresentationTemplate"/> que contiene los datos de la plantilla de presentación a exportar.</param>
            <param name="filename">Nombre y ruta del archivo de destino.</param>
            <remarks>
            - Para exportar, se deben especificar los archivos a empaquetar (propiedad Files).
            - Si el archivo existe, se sobreescribe.
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.PresentationTemplates.Import(System.String)">
            <summary>
            Importa una plantilla de presentación al workspace.
            </summary>
            <param name="filename">Nombre y ruta del paquete a importar.</param>
            <returns>Una instancia de WSTemplate que contiene los datos de la plantilla.</returns>
        </member>
        <member name="T:Cosmo.Workspace.User">
            <summary>
            Implementa la cuenta de un usuario del workspace
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.User.#ctor">
            <summary>
            Devuelve una instancia de User
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.User.GetDisplayName">
            <summary>
            Devuelve un nombre para mostrar del usuario.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.User.ToXml(System.IO.Stream)">
            <summary>
            Devuelve información pública del usuario en formato XML
            </summary>
            <param name="stream">Una instancia de Stream dónde se escribirá el código XML</param>
            <remarks>
            El formato del archivo XML generado es el siguiente:
            &lt;code&gt;
            &lt;contentserver&gt;
                &lt;userinfo id          = "_ContactID_"
                          login       = "_Login_"
                          name        = "_Name_"
                          city        = "_City_"
                          country     = "_CountryName_"
                          description = "_Description_"
                          created     = "_DateCreated_" /&gt;
            &lt;/locations&gt;
            &lt;/code&gt;
            </remarks>
        </member>
        <member name="P:Cosmo.Workspace.User.ID">
            <summary>
            Identificador de la cuenta.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.Login">
            <summary>
            Login
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.Password">
            <summary>
            Contraseña
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.Mail">
            <summary>
            Cuenta de correo electrónico principal
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.Name">
            <summary>
            Nombre (y apellidos) del usuario
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.City">
            <summary>
            Ciudad
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.CountryID">
            <summary>
            Identificador del pais al que pertenece
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.Phone">
            <summary>
            Teléfono de contacto
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.MailAlternative">
            <summary>
            Cuenta de correo electrónico alternativa
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.Description">
            <summary>
            Descripción (texto libre)
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.CanReceiveInternalMessages">
            <summary>
            Indica si desea recibir notificaciones procedentes del Workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.CanReceiveExternalMessages">
            <summary>
            Indica si desea recibir notificaciones procedentes de terceras partes o aplicaciones.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.CanReceivePrivateMessagesNotify">
            <summary>
            Indica si desea recibir notificaciones procedentes de terceras partes o aplicaciones.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.DisablePrivateMessages">
            <summary>
            Indica si el usuario tiene desactivada la opción de mensajes privados.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.Status">
            <summary>
            Estado de la cuenta.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.Relations">
            <summary>
            Lista de contactos relacionados con el usuario dentro del mismo workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.Created">
            <summary>
            Indica la fecha de creación de la cuenta de usuario.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.LastLogon">
            <summary>
            Indica la última vez que la cuenta se validó.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.LogonCount">
            <summary>
            Idica el número de veces que el usuario se ha validado
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.User.Owner">
            <summary>
            Propietario del objeto
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.User.UserStatus">
            <summary>
            Estados de usuario
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.User.UserStatus.AllStates">
            <summary>Todos los usuarios (no usar este valor en código)</summary>
        </member>
        <member name="F:Cosmo.Workspace.User.UserStatus.Disabled">
            <summary>Inhabilitado</summary>
        </member>
        <member name="F:Cosmo.Workspace.User.UserStatus.NotVerified">
            <summary>Pendiente de verificación de la cuenta de correo principal</summary>
        </member>
        <member name="F:Cosmo.Workspace.User.UserStatus.Enabled">
            <summary>Activa</summary>
        </member>
        <member name="F:Cosmo.Workspace.User.UserStatus.SecurityBloqued">
            <summary>En cuarentena (sirve para marcar las cuentas pendientes de revisión por causas de seguridad)</summary>
        </member>
        <member name="T:Cosmo.Workspace.UserCountry">
            <summary>
            Implementa una clase que define un pais assignable a un usuario
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.UserCountry.#ctor">
            <summary>
            Devuelve una instancia de UserCountry
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.UserCountry.#ctor(System.Int32,System.String,System.Boolean)">
            <summary>
            Devuelve una instancia de WSUserCountry
            </summary>
            <param name="id">Identificador único del pais</param>
            <param name="name">Nombre del pais</param>
            <param name="defaultSelected">Indica si será el pais seleccionado por defecto en los listados</param>
        </member>
        <member name="P:Cosmo.Workspace.UserCountry.ID">
            <summary>
            Identificador único del pais
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserCountry.Name">
            <summary>
            Nombre del pais
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserCountry.Default">
            <summary>
            Indica si será el pais seleccionado por defecto en los listados
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.UserRelation">
            <summary>
            Implementa una relación entre dos usuarios.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.UserRelation.#ctor">
            <summary>
            Devuelve una instancia de UserRelation
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserRelation.FromUserID">
            <summary>
            Identificador del usuario que solicita relación con el destinatario.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserRelation.ToUserID">
            <summary>
            Identificador del usuario que recibe la solicitud de relación.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserRelation.Status">
            <summary>
            Estado de la petición de relación entre usuarios.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserRelation.Created">
            <summary>
            Fecha de la solicitud de relación.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserRelation.Updated">
            <summary>
            Fecha de la respuesta por parte del destinatario.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.UserRelation.UserRelationStatus">
            <summary>
            Estados de las relaciones entre usuaruios
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.UserRelation.UserRelationStatus.Unverified">
            <summary>El usuario orígen ha solicitado amistad con el destinatario sin obtener aun respuesta</summary>
        </member>
        <member name="F:Cosmo.Workspace.UserRelation.UserRelationStatus.Verified">
            <summary>La relación ha sido aceptada por el destinatario</summary>
        </member>
        <member name="F:Cosmo.Workspace.UserRelation.UserRelationStatus.Rejected">
            <summary>La petición de relación ha sido rechazada por el destinatario</summary>
        </member>
        <member name="T:Cosmo.Workspace.UserSearchCriteria">
            <summary>
            Implementa una clase para especificar el filtro de búsqueda de usuarios.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserSearchCriteria.City">
            <summary>
            Ciudad.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserSearchCriteria.CountryId">
            <summary>
            Identificador del pais.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserSearchCriteria.FromLastLogon">
            <summary>
            Desde el último acceso.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserSearchCriteria.ToLastLogon">
            <summary>
            Hasta el último acceso.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserSearchCriteria.ExternalMessages">
            <summary>
            Permite el envio de comunicados externos al workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserSearchCriteria.InternalMessages">
            <summary>
            Permite el envio de comunicados internos del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserSearchCriteria.MailPart">
            <summary>
            Servidor de correo.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.UserSession">
            <summary>
            Implementa una sesión de usuario
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.UserSession.#ctor(Cosmo.Workspace.Workspace)">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Workspace.UserSession"/>. 
            </summary>
            <param name="workspace">Una instancia de <see cref="T:Cosmo.Workspace.Workspace"/>.</param>
        </member>
        <member name="M:Cosmo.Workspace.UserSession.GenerateSession(System.String,System.String)">
            <summary>
            Genera una nueva sesión de usuario.
            </summary>
            <param name="login">Login del usuario.</param>
            <param name="password">Contraseña del usuario.</param>
            <returns>Una instancia de <see cref="T:Cosmo.Workspace.User"/> que representa el usuario autenticado actualmente.</returns>
        </member>
        <member name="M:Cosmo.Workspace.UserSession.GenerateSession(Cosmo.Workspace.User)">
            <summary>
            Genera una nueva sesión de usuario.
            </summary>
            <param name="user">Una instancia de <see cref="T:Cosmo.Workspace.User"/> que representa el usuario para el que se dese agenerar la sesión.</param>
            <returns>Una instancia de <see cref="T:Cosmo.Workspace.User"/> que representa el usuario autenticado actualmente.</returns>
        </member>
        <member name="M:Cosmo.Workspace.UserSession.Destroy">
            <summary>
            Destruye la sesión de usuario.
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.UserSession.GenerateSessionTicket(System.String,System.String)">
            <summary>
            Autentica un usuario y genera un tiket de sessión.
            </summary>
            <param name="login">Login del usuario</param>
            <param name="password">Contraseña del usuario.</param>
            <returns>Una cadena que identifica la sessión o null si se produce un error.</returns>
            <remarks>
            Este método se debe usar para la autenticación mediante ticket de sesión. La utenticación mediante ticket no precisa tener
            la sesión almacenada en memória (una variable en WinForms o en la Session para ASP.NET).
            </remarks>
        </member>
        <member name="M:Cosmo.Workspace.UserSession.ValidateSessionTicket(System.String)">
            <summary>
            Verifica que una sesión tenga validez.
            </summary>
            <param name="sessionTiket">Identificador de sesión actual.</param>
            <remarks>
            Este método se debe usar para la autenticación mediante ticket de sesión. La utenticación mediante ticket no precisa tener
            la sesión almacenada en memória (una variable en WinForms o en la Session para ASP.NET).
            </remarks>
        </member>
        <member name="P:Cosmo.Workspace.UserSession.Tiket">
            <summary>
            Devuelve una cadena que contiene el identificador de la sesión de usuario.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserSession.User">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Workspace.User"/> que representa el usuario que ha generado la sesión.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserSession.Required">
            <summary>
            Devuelve un booleano que indica si el Workspace requiere validación de usuario.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserSession.IsAuthenticated">
            <summary>
            Indica si existe una sessión de usuario iniciada.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.UserSession.Workspace">
            <summary>
            Devuelve o establece el workspace asociado a la sesión de usuario.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.WorkspaceStatus">
            <summary>
            Enumera los posibles estados de un workspace
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceStatus.Running">
            <summary>Activo</summary>
        </member>
        <member name="F:Cosmo.Workspace.WorkspaceStatus.Stopped">
            <summary>Detenido</summary>
        </member>
        <member name="T:Cosmo.Workspace.Workspace">
            <summary>
            Implementa un workspace
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.Workspace.DEFAULT_USER">
            <summary>
            Usuario por defecto a aplicar como propietario de los objetos de un workspace
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Workspace.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Workspace.FileSystemPath">
            <summary>
            Devuelve la ruta al sistema de archivos de datos del workspace (usualmente [WebServerPath]/docs).
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Workspace.InstallApplication(Cosmo.Platform.Applications.Program)">
            <summary>
            Instala una aplicación en el workspace.
            </summary>
            <param name="application">Una instáncia de MWApplication que contiene los datos de la aplicación.</param>
        </member>
        <member name="P:Cosmo.Workspace.Workspace.FileSystemFolderName">
            <summary>
            Devuelve o establece el nombre de la carpeta que contiene el sistema de archivos del workspace.
            </summary>
            <remarks>
            Usualmente suele ser <c>docs</c>.
            El sistema de archivos permite a los servicios gestionar archivos (documentos, imágenes, etc) que contengan datos de los mismos.
            </remarks>
        </member>
        <member name="P:Cosmo.Workspace.Workspace.WebServerPath">
            <summary>
            Devuelve o establece la ruta a la raíz del workspace en el servidor web
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Workspace.Mail">
            <summary>
            Mail de contacto con el responsable del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Workspace.Version">
            <summary>
            Devuelve la versión de la libreria que define el objeto WSWorkspace
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Workspace.RegistryDSN">
            <summary>
            Devuelve o establece el DSN de conexión a la base de datos del registro de Cosmo
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Workspace.Status">
            <summary>
            Devuelve o establece el estado del workspace
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Workspace.FileSystem">
            <summary>
            Devuelve una instancia de <see cref="T:Cosmo.Workspace.FileSystem"/> que permite acceder al sistema de archivos del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Workspace.Settings">
            <summary>
            Permite acceder a la configuración del workspace
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Workspace.Logger">
            <summary>
            Permite acceder al archivo de LOG del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Workspace.Authentication">
            <summary>
            Permite acceder a la gestión de cuentas de usuario del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Workspace.NetQueue">
            <summary>
            Permite acceder a la cola de comunicaciones de red (envios).
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Workspace.MailServer">
            <summary>
            Permite acceder al servidor de correo del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Workspace.FaxServer">
            <summary>
            Permite acceder al servidor de FAX del workspace.
            </summary>
        </member>
        <member name="P:Cosmo.Workspace.Workspace.CurrentUser">
            <summary>
            Permite obtener la cuenta de usuario autenticado actualmente.
            </summary>
        </member>
        <member name="T:Cosmo.Properties.Resources">
            <summary>
              Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:Cosmo.Properties.Resources.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
            </summary>
        </member>
        <member name="P:Cosmo.Properties.Resources.Culture">
            <summary>
              Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
              búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
            </summary>
        </member>
        <member name="P:Cosmo.Properties.Resources.ErrorsFound">
            <summary>
              Busca una cadena traducida similar a {0} has the following errors:.
            </summary>
        </member>
        <member name="P:Cosmo.Properties.Resources.SQL_SERVER_SCRIPT">
             <summary>
               Busca una cadena traducida similar a -------------------------------------------------------------------
            -- MobileWhere Server Creation Script                            --
            -------------------------------------------------------------------
            -- Versión: 3.0                                                  --
            -- Última revisión: 09/05/2008                                   --
            -------------------------------------------------------------------
            -- Copyright © 2008 Offshore Tech S.L.                           --
            ----------------------------- [resto de la cadena truncado]&quot;;.
             </summary>
        </member>
        <member name="P:Cosmo.Properties.Resources.TraceWithDetails">
             <summary>
               Busca una cadena traducida similar a {0}
            Details:
            {1}.
             </summary>
        </member>
        <member name="P:Cosmo.Properties.Resources.WarningsFound">
            <summary>
              Busca una cadena traducida similar a {0} has the following warnings:.
            </summary>
        </member>
        <member name="T:Cosmo.Workspace.Workspaces">
            <summary>
            Implementa una clase de servicio que permite gestionar los workspaces de un servidor
            </summary>
        </member>
        <member name="M:Cosmo.Workspace.Workspaces.#ctor(Cosmo.Platform.Server)">
            <summary>
            Devuelve una instancia de Workspaces
            </summary>
            <param name="connection">Una conexión al servidor de datos</param>
        </member>
        <member name="M:Cosmo.Workspace.Workspaces.List">
            <summary>
            Devuelve una lista de workspaces registrados en el servidor
            </summary>
            <returns>Una lista de workspaces</returns>
        </member>
        <member name="M:Cosmo.Workspace.Workspaces.Item(System.Int32)">
            <summary>
            Recupera la información de un Workspace.
            </summary>
            <param name="id">Identificador del Workspace.</param>
            <returns>Una instáncia de WSWorkspace.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Workspaces.Update(Cosmo.Workspace.WorkspaceBase)">
            <summary>
            Actualiza los datos de un Workspace.
            </summary>
            <param name="workspace">Una isntáncia de WSWorkspace con los datos actualizados.</param>
        </member>
        <member name="M:Cosmo.Workspace.Workspaces.Add(Cosmo.Workspace.WorkspaceBase)">
            <summary>
            Crea una nueva cuenta de usuario editor. Una vez insertado el registro, se actualiza el identificador del workspace.
            Este método no creal el workspace, sólo lo regitra en el entorno.
            </summary>
            <param name="workspace">Una instáncia de WSWorkspace que contiene el nuevo worspace</param>
        </member>
        <member name="M:Cosmo.Workspace.Workspaces.Create(Cosmo.Workspace.Workspace,System.String[])">
            <summary>
            Crea un nuevo workspace y opcionalmente instala aplicaciones
            </summary>
            <param name="workspace">Una instáncia de <code>WSWorkspace</code> que contiene las propiedades del nuevo workspace.</param>
            <param name="packages">Un array con los nombres de paquetes a instalar (sin ruta).</param>
            <returns>Una cadena que contiene el log de las tareas efectuadas.</returns>
        </member>
        <member name="M:Cosmo.Workspace.Workspaces.Backup(System.String,System.Int32,Cosmo.Workspace.Workspaces.WorkspaceBackupModes)">
            <summary>
            Genera una copia de seguridad de un workspace.
            </summary>
            <param name="workspaceid">Identificador del workspace.</param>
            <param name="mode">Tipo de copia a realizar.</param>
            <param name="outputFolder">Ruta a la carpeta de destino.</param>
            <remarks>
            Si el servidor SQL Server no se ejecuta como un servicio deberán proporcionarse los permisos adecuados de escritura
            a la carpeta de destino de las copias deseguridad.
            </remarks>
        </member>
        <member name="T:Cosmo.Workspace.Workspaces.WorkspaceBackupModes">
            <summary>
            Enumera los tipos de copia de seguridad
            </summary>
        </member>
        <member name="F:Cosmo.Workspace.Workspaces.WorkspaceBackupModes.All">
            <summary>Todos los datos</summary>
        </member>
        <member name="F:Cosmo.Workspace.Workspaces.WorkspaceBackupModes.OnlyData">
            <summary>Sólo copia la base de datos</summary>
        </member>
        <member name="F:Cosmo.Workspace.Workspaces.WorkspaceBackupModes.OnlyFiles">
            <summary>Sólo copia el sistema de archivos</summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.AttributeForAttribute">
            <summary>
            Makes a field or property to appear as an attribute for another element, if possible.
            This attribute is applicable to fields and properties.
            </summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationBaseAttribute">
            <summary>
            The base class for all attributes defined in YAXLib.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.AttributeForAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.AttributeForAttribute"/> class.
            </summary>
            <param name="parent">The element of which the property becomes an attribute.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.AttributeForAttribute.Parent">
            <summary>
            Gets or sets the element of which the property becomes an attribute.
            </summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.AttributeForClassAttribute">
            <summary>
            Makes a property to appear as an attribute for the enclosing class (i.ex. the parent element) if possible.
            This attribute is applicable to fields and properties only.
            </summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.CollectionAttribute">
            <summary>
            Controls the serialization of collection instances.
            This attribute is applicable to fields and properties.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.CollectionAttribute.#ctor(Cosmo.Xml.Serialization.YAXCollectionSerializationTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.CollectionAttribute"/> class.
            </summary>
            <param name="serType">type of the serialization of the collection.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.CollectionAttribute.SerializationType">
            <summary>
            Gets or sets the type of the serialization of the collection.
            </summary>
            <value>The type of the serialization of the collection.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.CollectionAttribute.SeparateBy">
            <summary>
            Gets or sets the string to separate collection items, if the Serialization type is set to <c>Serially</c>.
            </summary>
            <value>the string to separate collection items, if the Serialization Type is set to <c>Serially</c>.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.CollectionAttribute.EachElementName">
            <summary>
            Gets or sets the name of each child element corresponding to the collection members, if the Serialization type is set to <c>Recursive</c>.
            </summary>
            <value>The name of each child element corresponding to the collection members, if the Serialization type is set to <c>Recursive</c>.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.CollectionAttribute.IsWhiteSpaceSeparator">
            <summary>
            Gets or sets a value indicating whether white space characters are to be
            treated as sparators or not.
            </summary>
            <value>
            <c>true</c> if white space separator characters are to be
            treated as sparators; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Cosmo.Xml.Serialization.CommentAttribute">
            <summary>
            Creates a comment node per each line of the comment string provided.
            This attribute is applicable to classes, structures, fields, and properties.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.CommentAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.CommentAttribute"/> class.
            </summary>
            <param name="comment">The comment.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.CommentAttribute.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>The comment.</value>
        </member>
        <member name="T:Cosmo.Xml.Serialization.DontSerializeAttribute">
            <summary>
            Prevents serialization of some field or property.
            This attribute is applicable to fields and properties.
            </summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.ElementForAttribute">
            <summary>
            Makes a property or field to appear as a child element 
            for another element. This attribute is applicable to fields and properties.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ElementForAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.ElementForAttribute"/> class.
            </summary>
            <param name="parent">The element of which the property becomes a child element.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.ElementForAttribute.Parent">
            <summary>
            Gets or sets the element of which the property becomes a child element.
            </summary>
            <value>The element of which the property becomes a child element.</value>
        </member>
        <member name="T:Cosmo.Xml.Serialization.EnumAttribute">
            <summary>
            Specifies an alias for an enum member.
            This attribute is applicable to enum members.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.EnumAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.EnumAttribute"/> class.
            </summary>
            <param name="alias">The alias.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.EnumAttribute.Alias">
            <summary>
            Gets the alias for the enum member.
            </summary>
            <value>The alias for the enum member.</value>
        </member>
        <member name="T:Cosmo.Xml.Serialization.ErrorIfMissedAttribute">
            <summary>
            Specifies the behavior of the deserialization method, if the element/attribute corresponding to this property is missed in the XML input.
            This attribute is applicable to fields and properties.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ErrorIfMissedAttribute.#ctor(Cosmo.Xml.Serialization.YAXExceptionTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.ErrorIfMissedAttribute"/> class.
            </summary>
            <param name="treatAs">The value indicating this situation is going to be treated as Error or Warning.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.ErrorIfMissedAttribute.TreatAs">
            <summary>
            Gets or sets the value indicating this situation is going to be treated as Error or Warning.
            </summary>
            <value>The value indicating this situation is going to be treated as Error or Warning.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.ErrorIfMissedAttribute.DefaultValue">
            <summary>
            Gets or sets the default value for the property if the element/attribute corresponding to this property is missed in the XML input.
            Setting <c>null</c> means do nothing.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="T:Cosmo.Xml.Serialization.NotCollectionAttribute">
            <summary>
            Specifies that a particular class, or a particular property or variable type, that is 
            driven from <c>IEnumerable</c> should not be treated as a collection class/object.
            This attribute is applicable to fields, properties, classes, and structs.
            </summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializableFieldAttribute">
            <summary>
            Add this attribute to properties or fields which you wish to be serialized, when 
            the enclosing class uses the <c>YAXSerializableType</c> attribute in which <c>FieldsToSerialize</c>
            has been set to <c>AttributedFieldsOnly</c>.
            This attribute is applicable to fields and properties.
            </summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializableTypeAttribute">
            <summary>
            Add this attribute to types, structs or classes which you want to override
            their default serialization behaviour. This attribute is optional.
            This attribute is applicable to classes and structures.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializableTypeAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializableTypeAttribute"/> class.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializableTypeAttribute.IsSerializationOptionSet">
            <summary>
            Determines whether the serialization options property has been explicitly
            set by the user.
            </summary>
            <returns>
            	<c>true</c> if the serialization options property has been explicitly
            set by the user; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializableTypeAttribute.FieldsToSerialize">
            <summary>
            Gets or sets the fields which YAXLib selects for serialization
            </summary>
            <value>The fields to serialize.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializableTypeAttribute.Options">
            <summary>
            Gets or sets the serialization options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializeAsAttribute">
            <summary>
            Defines an alias for the field, property, class, or struct under 
            which it will be serialized. This attribute is applicable to fields, 
            properties, classes, and structs.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializeAsAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializeAsAttribute"/> class.
            </summary>
            <param name="serializeAs">the alias for the property under which the property will be serialized.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializeAsAttribute.SerializeAs">
            <summary>
            Gets or sets the alias for the property under which the property will be serialized.
            </summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.DictionaryAttribute">
            <summary>
            Controls the serialization of generic Dictionary instances.
            This attribute is applicable to fields and properties.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.DictionaryAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.DictionaryAttribute"/> class.
            </summary>
        </member>
        <member name="P:Cosmo.Xml.Serialization.DictionaryAttribute.KeyName">
            <summary>
            Gets or sets the alias for the key part of the dicitonary.
            </summary>
            <value></value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.DictionaryAttribute.ValueName">
            <summary>
            Gets or sets alias for the value part of the dicitonary.
            </summary>
            <value></value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.DictionaryAttribute.EachPairName">
            <summary>
            Gets or sets alias for the element containing the Key-Value pair.
            </summary>
            <value></value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.DictionaryAttribute.SerializeKeyAs">
            <summary>
            Gets or sets the node type according to which the key part of the dictionary is serialized.
            </summary>
            <value></value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.DictionaryAttribute.SerializeValueAs">
            <summary>
            Gets or sets the node type according to which the value part of the dictionary is serialized.
            </summary>
            <value></value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.DictionaryAttribute.KeyFormatString">
            <summary>
            Gets or sets the key format string.
            </summary>
            <value></value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.DictionaryAttribute.ValueFormatString">
            <summary>
            Gets or sets the value format string.
            </summary>
            <value></value>
        </member>
        <member name="T:Cosmo.Xml.Serialization.FormatAttribute">
            <summary>
            Specifies the format string provided for serializing data. The format string is the parameter 
            passed to the <c>ToString</c> method.
            If this attribute is applied to collection classes, the format, therefore, is applied to 
            the collection members.
            This attribute is applicable to fields and properties.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.FormatAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.FormatAttribute"/> class.
            </summary>
            <param name="format">The format string.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.FormatAttribute.Format">
            <summary>
            Gets or sets the format string needed to serialize data. The format string is the parameter 
            passed to the <c>ToString</c> method.
            </summary>
            <value></value>
        </member>
        <member name="T:Cosmo.Xml.Serialization.YAXExceptionHandlingPolicies">
            <summary>
            Enumerates different kinds of exception handling policies as used by YAX Library.
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXExceptionHandlingPolicies.ThrowWarningsAndErrors">
            <summary>
            Throws Both Warnings And Errors
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXExceptionHandlingPolicies.ThrowErrorsOnly">
            <summary>
            Throws Errors only (default)
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXExceptionHandlingPolicies.DoNotThrow">
            <summary>
            Does not throw exceptions, the errors can be accessed via the SerializationParsingErrors instance
            </summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.YAXExceptionTypes">
            <summary>
            Enumerates different possible behaviours of the library toward exceptions
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXExceptionTypes.Ignore">
            <summary>
            Ignore non-fatal exceptions; neither throw them, nor log them.
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXExceptionTypes.Warning">
            <summary>
            Treat exception as a warning
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXExceptionTypes.Error">
            <summary>
            Treat exception as an error
            </summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.YAXSerializationOptions">
            <summary>
            Enumerates different serialization options which could be set at construction time.
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXSerializationOptions.DontSerializeNullObjects">
            <summary>
            Prevents serialization of null objects.
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXSerializationOptions.SerializeNullObjects">
            <summary>
            Serializes null objects also (the default)
            </summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.YAXCollectionSerializationTypes">
            <summary>
            Enumerates the possible ways of serializing collection classes
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXCollectionSerializationTypes.Recursive">
            <summary>
            Serializes each member of the collection, as a separate element, all enclosed in an element regarding the collection itself
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXCollectionSerializationTypes.RecursiveWithNoContainingElement">
            <summary>
            Serializes each member of the collection, as a separate element, with no enclosing element for the collection
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXCollectionSerializationTypes.Serially">
            <summary>
            Serializes all members of the collection in one element separated by some delimiter, if possible.
            </summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.YAXNodeTypes">
            <summary>
            Enumerates possible XML node types upon which a property can be serialized.
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXNodeTypes.Attribute">
            <summary>
            Serialize data as an attribute for the base element
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXNodeTypes.Element">
            <summary>
            Serialize data as an element
            </summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.YAXSerializationFields">
            <summary>
            Enumerates possible options for a serializable type
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXSerializationFields.PublicPropertiesOnly">
            <summary>
            Serializes only the public properties (the default behaviour)
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXSerializationFields.AllFields">
            <summary>
            Serializes all fields (properties or member variables) which are public, or non-public.
            </summary>
        </member>
        <member name="F:Cosmo.Xml.Serialization.YAXSerializationFields.AttributedFieldsOnly">
            <summary>
            Serializes all fields (properties or member variables) which are public, or non-public, if attributed as <c>YAXSerializableField</c>
            </summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.EnumWrapper">
            <summary>
            Provides a wrapper arount enum types, in order to provide alias definition capabilities for enums
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.EnumWrapper.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.EnumWrapper"/> class.
            </summary>
            <param name="t">The enum type.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.EnumWrapper.ParseAlias(System.String)">
            <summary>
            Parses the alias and returns the correct enum value. Throws an exception if the alias cannot be matched.
            </summary>
            <param name="alias">The alias.</param>
            <returns>the enum member corresponding to the specified alias</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.EnumWrapper.GetAlias(System.Object)">
            <summary>
            Gets the alias for the specified enum value.
            </summary>
            <param name="enumMember">The enum member.</param>
            <returns>the alias corresponding to the specified enum member</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.EnumWrapper.FindRealNameFromAlias(System.String)">
            <summary>
            Finds the real name from alias.
            </summary>
            <param name="alias">The alias.</param>
            <returns>the real name of the enum member</returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.KnownDotNetTypesDeserializers">
            <summary>
            Provides deserializer methods for some known .NET built-in types.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.KnownDotNetTypesDeserializers.DeserializeTimeSpan(System.Xml.Linq.XElement)">
            <summary>
            Deserializes an object of type <c>TimeSpan</c>.
            </summary>
            <param name="baseElement">The XML element containing serialized <c>TimeSpan</c>.</param>
            <returns>deserialized <c>TimeSpan</c> object.</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.KnownDotNetTypesDeserializers.DeserializeGuid(System.Xml.Linq.XElement)">
            <summary>
            Deserializes an object of type <c>GUID</c>.
            </summary>
            <param name="baseElement">The XML element containing serialized <c>GUID</c>.</param>
            <returns>deserialized <c>GUID</c> object</returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.MemberWrapper">
            <summary>
            A wrapper class for members which only can be properties or member variables
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.MemberWrapper.#ctor(System.Reflection.MemberInfo,Cosmo.Xml.Serialization.Serializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.MemberWrapper"/> class.
            </summary>
            <param name="memberInfo">The member-info to build this instance from.</param>
            <param name="callerSerializer">The caller serializer.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.MemberWrapper.GetOriginalValue(System.Object,System.Object[])">
            <summary>
            Gets the original value of this member in the specified object
            </summary>
            <param name="obj">The object whose value corresponding to this instance, must be retreived.</param>
            <param name="index">The array of indeces (usually <c>null</c>).</param>
            <returns>the original value of this member in the specified object</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.MemberWrapper.GetValue(System.Object)">
            <summary>
            Gets the processed value of this member in the specified object
            </summary>
            <param name="obj">The object whose value corresponding to this instance, must be retreived.</param>
            <returns>the processed value of this member in the specified object</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.MemberWrapper.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of this member in the specified object
            </summary>
            <param name="obj">The object whose member corresponding to this instance, must be given value.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.MemberWrapper.IsAllowedToBeSerialized(Cosmo.Xml.Serialization.YAXSerializationFields)">
            <summary>
            Determines whether this instance of <c>MemberWrapper</c> can be serialized.
            </summary>
            <param name="serializationFields">The serialization fields.</param>
            <returns>
            <c>true</c> if this instance of <c>MemberWrapper</c> can be serialized; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.MemberWrapper.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.MemberWrapper.InitInstance">
            <summary>
            Initializes this instance of <c>MemberWrapper</c>.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.MemberWrapper.InitDefaultValue">
            <summary>
            Initializes the default value for this instance of <c>MemberWrapper</c>.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.MemberWrapper.ProcessYAXAttribute(System.Object)">
            <summary>
            Processes the specified attribute which is an instance of <c>YAXAttribute</c>.
            </summary>
            <param name="attr">The attribute to process.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.Alias">
            <summary>
            Gets the alias specified for this member.
            </summary>
            <value>The alias specified for this member.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.CanRead">
            <summary>
            Gets a value indicating whether the member corrsponding to this instance can be read from.
            </summary>
            <value><c>true</c> if the member corrsponding to this instance can be read from; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.CanWrite">
            <summary>
            Gets a value indicating whether the member corrsponding to this instance can be written to.
            </summary>
            <value><c>true</c> if the member corrsponding to this instance can be written to; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.Comment">
            <summary>
            Gets an array of comment lines.
            </summary>
            <value>The comment lines.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.DefaultValue">
            <summary>
            Gets the default value for this instance.
            </summary>
            <value>The default value for this instance.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.Format">
            <summary>
            Gets the format specified for this value; <c>null</c> if no format is specified.
            </summary>
            <value>the format specified for this value; <c>null</c> if no format is specified.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.HasComment">
            <summary>
            Gets a value indicating whether this instance has comments.
            </summary>
            <value>
            	<c>true</c> if this instance has comments; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.HasFormat">
            <summary>
            Gets a value indicating whether this instance has format values specified
            </summary>
            <value>
            <c>true</c> if this instance has format values specified; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.IsAttributedAsDontSerialize">
            <summary>
            Gets a value indicating whether this instance is attributed as dont serialize.
            </summary>
            <value>
            	<c>true</c> if this instance is attributed as dont serialize; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.IsAttributedAsNotCollection">
            <summary>
            Gets a value indicating whether this instance is attributed as not-collection.
            </summary>
            <value>
            	<c>true</c> if this instance is attributed as not-collection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.IsAttributedAsSerializable">
            <summary>
            Gets a value indicating whether this instance is attributed as serializable.
            </summary>
            <value>
            	<c>true</c> if this instance is attributed as serializable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.IsSerializedAsAttribute">
            <summary>
            Gets a value indicating whether this instance is serialized as an XML attribute.
            </summary>
            <value>
            <c>true</c> if this instance is serialized as an XML attribute; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.IsSerializedAsElement">
            <summary>
            Gets a value indicating whether this instance is serialized as an XML element.
            </summary>
            <value>
            <c>true</c> if this instance is serialized as an XML element; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.MemberType">
            <summary>
            Gets the type of the member.
            </summary>
            <value>The type of the member.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.MemberTypeWrapper">
            <summary>
            Gets the type wrapper instance corrsponding to the member-type of this instance.
            </summary>
            <value>The type wrapper instance corrsponding to the member-type of this instance.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.OriginalName">
            <summary>
            Gets the original of this member (as opposed to its alias).
            </summary>
            <value>The original of this member .</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.SerializationLocation">
            <summary>
            Gets the serialization location.
            </summary>
            <value>The serialization location.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.TreatErrorsAs">
            <summary>
            Gets the exception type for this instance in case of encountering missing values
            </summary>
            <value>The exception type for this instance in case of encountering missing values</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.CollectionAttributeInstance">
            <summary>
            Gets the collection attribute instance.
            </summary>
            <value>The collection attribute instance.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.DictionaryAttributeInstance">
            <summary>
            Gets the dictionary attribute instance.
            </summary>
            <value>The dictionary attribute instance.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.IsTreatedAsCollection">
            <summary>
            Gets a value indicating whether this instance is treated as a collection.
            </summary>
            <value>
            	<c>true</c> if this instance is treated as a collection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.MemberWrapper.IsTreatedAsDictionary">
            <summary>
            Gets a value indicating whether this instance is treated as a dictionary.
            </summary>
            <value>
            <c>true</c> if this instance is treated as a dictionary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Cosmo.Xml.Serialization.ReflectionUtils">
            <summary>
            A utility class for reflection related stuff
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsBasicType(System.Type)">
            <summary>
            Determines whether the specified type is basic type. A basic type is one that can be wholly expressed
            as an XML attribute. All primitive data types and type <c>string</c> and <c>DataTime</c> are basic.
            </summary>
            <param name="t">The type to check.</param>
            <returns>
            <value><c>true</c> if the specified type is a basic type; otherwise, <c>false</c>.</value>
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsArray(System.Type,System.Type@)">
            <summary>
            Determines whether the specified type is array.
            </summary>
            <param name="type">The type to check</param>
            <param name="elementType">Type of the containing element.</param>
            <returns>
            	<value><c>true</c> if the specified type is array; otherwise, <c>false</c>.</value>
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsArray(System.Type)">
            <summary>
            Determines whether the specified type is array.
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            <c>true</c> if the specified type is array; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.GetArrayDimensions(System.Object)">
            <summary>
            Gets the array dimensions.
            </summary>
            <param name="ar">The array to return its dimensions.</param>
            <returns>the specified array's dimensions</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.GetTypeFriendlyName(System.Type)">
            <summary>
            Gets the friendly name for the type. Recommended for generic types.
            </summary>
            <param name="type">The type to get its friendly name</param>
            <returns>The friendly name for the type</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.TypeContainsGenericParameters(System.Type)">
            <summary>
            Determines whether the type specified contains generic parameters or not.
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            <value><c>true</c> if the type contains generic parameters; otherwise,<c>false</c>.</value>
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsCollectionType(System.Type)">
            <summary>
            Determines whether the specified type is a collection type, i.ex., it implements IEnumerable.
            Although System.String is derived from IEnumerable, it is considered as an exception.
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            <value><c>true</c> if the specified type is a collection type; otherwise, <c>false</c>.</value>
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsIEnumerable(System.Type)">
            <summary>
            Determines whether the specified type has implemented or is an <c>IEnumerable</c> or <c>IEnumerable&lt;&gt;</c>
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            	<value><c>true</c> if the specified type is enumerable; otherwise, <c>false</c>.</value>
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsIEnumerable(System.Type,System.Type@)">
            <summary>
            Determines whether the specified type has implemented or is an <c>IEnumerable</c> or <c>IEnumerable&lt;&gt;</c> .
            </summary>
            <param name="type">The type to check.</param>
            <param name="seqType">Type of the sequence items.</param>
            <returns>
            <value><c>true</c> if the specified type is enumerable; otherwise, <c>false</c>.</value>
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.GetCollectionItemType(System.Type)">
            <summary>
            Gets the type of the items of a collection type.
            </summary>
            <param name="type">The type of the collection.</param>
            <returns>The type of the items of a collection type.</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsIList(System.Type)">
            <summary>
            Determines whether the specified type has implemented <c>IList</c>.
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            <value><c>true</c> if the specified type has implemented <c>IList</c>; otherwise, <c>false</c>.</value>
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsICollection(System.Type,System.Type@)">
            <summary>
            Determines whether the specified type has implemented the <c>ICollection</c> interface.
            </summary>
            <param name="type">The type to check.</param>
            <param name="itemType">Type of the member items.</param>
            <returns>
            <value><c>true</c> if the specified type has implemented the <c>ICollection</c> interface; otherwise, <c>false</c>.</value>
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsIDictionary(System.Type,System.Type@,System.Type@)">
            <summary>
            Determines whether the specified type is a generic dictionary.
            </summary>
            <param name="type">The type to check.</param>
            <param name="keyType">Type of the key.</param>
            <param name="valueType">Type of the value.</param>
            <returns>
            <value><c>true</c> if the specified type has implemented the IDictionary interface; otherwise, <c>false</c>.</value>
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsIDictionary(System.Type)">
            <summary>
            Determines whether the specified type is a generic dictionary.
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            <value><c>true</c> if the specified type is dictionary; otherwise, <c>false</c>.</value>
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsNonGenericIDictionary(System.Type)">
            <summary>
            Determines whether the specified type is a non generic IDictionary, ex.g., a Hashtable.
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            	<c>true</c> if the specified type is a non generic IDictionary; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsTypeEqualOrInheritedFromType(System.Type,System.Type)">
            <summary>
            Determines whether the specified type is equal or inherited from another specified type.
            </summary>
            <param name="type">The type to check.</param>
            <param name="baseType">Another type that the specified type is checked whether it is equal or
            has been driven from.</param>
            <returns>
            	<c>true</c> if the specified type is equal or inherited from another specified type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsNullable(System.Type,System.Type@)">
            <summary>
            Determines whether the specified type is nullable.
            </summary>
            <param name="type">The type to check.</param>
            <param name="valueType">The value type of the corresponding nullable type.</param>
            <returns>
            <c>true</c> if the specified type is nullable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsNullable(System.Type)">
            <summary>
            Determines whether the specified type is nullable.
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            <c>true</c> if the specified type is nullable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsIFormattable(System.Type)">
            <summary>
            Determines whether the specified type implements <c>IFormattable</c>
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            	<c>true</c> if the specified type implements <c>IFormattable</c>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsStringConvertibleIFormattable(System.Type)">
            <summary>
            Determines whether the type provides the functionality 
            to format the value of an object into a string representation.
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            <value><c>true</c> if the specified type impliments the <c>IFormattable</c> interface; otherwise, <c>false</c>.</value>
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.HasOneReadWriteProperty(System.Type)">
            <summary>
            Checks to see if the specified type has readable and writable properties.
            </summary>
            <param name="type">The type to check for.</param>
            <returns><value><c>true</c> if the specified type has readable and writable properties; otherwise, <c>false</c>.</value></returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.TryFormatObject(System.Object,System.String)">
            <summary>
            Tries to format the specified object using the format string provided.
            If the formatting operation is not applicable, the source object is returned intact.
            Note: The type of the returned object will be 'System.String' if formatting succeeds.
            </summary>
            <param name="src">The source object.</param>
            <param name="format">The format string.</param>
            <returns><code>System.String</code> if the format is successful; otherwise, the original object</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.ConvertBasicType(System.Object,System.Type)">
            <summary>
            Converts the specified object from a basic type to another type as specified.
            It is meant by basic types, primitive data types, strings, and enums.
            </summary>
            <param name="value">The object to be converted.</param>
            <param name="dstType">the destination type of conversion.</param>
            <returns>the converted object</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.GetTypeByName(System.String)">
            <summary>
            Searches all loaded assemblies to find a type with a special name.
            </summary>
            <param name="name">The name of the type to find.</param>
            <returns>type found using the specified name</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.ReflectionUtils.IsPublicProperty(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the specified property is public.
            </summary>
            <param name="pi">The property.</param>
            <returns>
            <c>true</c> if the specified property is public; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.StringUtils">
            <summary>
            Provides string utility methods
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.StringUtils.RefineLocationString(System.String)">
            <summary>
            Refines the location string. Trims it, and replaces invlalid characters with underscore.
            </summary>
            <param name="elemAddr">The element address to refine.</param>
            <returns>the refined location string</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.StringUtils.RefineSingleElement(System.String)">
            <summary>
            Refines a single element name. Refines the location string. Trims it, and replaces invlalid characters with underscore.
            </summary>
            <param name="elemName">Name of the element.</param>
            <returns>the refined element name</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.StringUtils.CombineLocationAndElementName(System.String,System.String)">
            <summary>
            Combines a location string and an element name to form a bigger location string.
            </summary>
            <param name="location">The location string.</param>
            <param name="elemName">Name of the element.</param>
            <returns>a bigger location string formed by combining a location string and an element name.</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.StringUtils.DivideLocationOneStep(System.String,System.String@,System.String@)">
            <summary>
            Divides the location string one step, to form a shorter location string.
            </summary>
            <param name="location">The location string to divide.</param>
            <param name="newLocation">The new location string which is one level shorter.</param>
            <param name="newElem">The element name removed from the end of location string.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.StringUtils.IsLocationAllGeneric(System.String)">
            <summary>
            Determines whether the specified location is composed of levels 
            which are themselves either "." or "..".
            </summary>
            <param name="location">The location string to check.</param>
            <returns>
            <c>true</c> if the specified location string is all composed of "." or ".." levels; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.StringUtils.IsSingleLocationGeneric(System.String)">
            <summary>
            Determines whether the specified location string is either "." or "..".
            </summary>
            <param name="location">The location string to check.</param>
            <returns>
            <c>true</c> if the specified location string is either "." or ".."; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.StringUtils.GetArrayDimsString(System.Int32[])">
            <summary>
            Gets the string corresponidng to the given array dimensions.
            </summary>
            <param name="dims">The array dimensions.</param>
            <returns>the string corresponidng to the given array dimensions</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.StringUtils.ParseArrayDimsString(System.String)">
            <summary>
            Parses the array dimensions string, and returns the corresponding dimensions array.
            </summary>
            <param name="str">The string to parse.</param>
            <returns>the dimensions array corresponiding to the given string</returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.TypeWrappersPool">
            <summary>
            Implements a singleton pool of type-wrappers to prevent excessive creation of 
            repetetive type wrappers
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.TypeWrappersPool.#ctor">
            <summary>
            Prevents a default instance of the <c>TypeWrappersPool</c> class from being created, from
            outside the scope of this class.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.TypeWrappersPool.GetTypeWrapper(System.Type,Cosmo.Xml.Serialization.Serializer)">
            <summary>
            Gets the type wrapper corresponding to the specified type.
            </summary>
            <param name="t">The type whose wrapper is needed.</param>
            <param name="caller">reference to the serializer instance which called this method.</param>
            <returns>the type wrapper corresponding to the specified type</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.TypeWrappersPool.CleanUp">
            <summary>
            Cleans up the pool.
            </summary>
        </member>
        <member name="P:Cosmo.Xml.Serialization.TypeWrappersPool.Pool">
            <summary>
            Gets the type wrappers pool.
            </summary>
            <value>The type wrappers pool.</value>
        </member>
        <member name="T:Cosmo.Xml.Serialization.UdtWrapper">
            <summary>
            a wrapper class around user-defined types, for quick acess to their YAXLib related attributes
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.UdtWrapper.#ctor(System.Type,Cosmo.Xml.Serialization.Serializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.UdtWrapper"/> class.
            </summary>
            <param name="udtType">The underlying type to create the wrapper around.</param>
            <param name="callerSerializer">reference to the serializer 
            instance which is building this instance.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.UdtWrapper.SetYAXSerializerOptions(Cosmo.Xml.Serialization.Serializer)">
            <summary>
            Sets the serializer options.
            </summary>
            <param name="caller">The caller serializer.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.UdtWrapper.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.UdtWrapper.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:Cosmo.Xml.Serialization.UdtWrapper.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.UdtWrapper.ProcessYAXAttribute(System.Object)">
            <summary>
            Processes the specified attribute.
            </summary>
            <param name="attr">The attribute to process.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.UdtWrapper.Alias">
            <summary>
            Gets the alias of the type.
            </summary>
            <value>The alias of the type.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.UdtWrapper.Comment">
            <summary>
            Gets an array of comments for the underlying type.
            </summary>
            <value>The array of comments for the underlying type.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.UdtWrapper.FieldsToSerialize">
            <summary>
            Gets the fields to be serialized.
            </summary>
            <value>The fields to be serialized.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.UdtWrapper.SerializationOption">
            <summary>
            Gets the serialization options.
            </summary>
            <value>The serialization options.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.UdtWrapper.IsAttributedAsNotCollection">
            <summary>
            Gets a value indicating whether this instance is attributed as not collection.
            </summary>
            <value>
            <c>true</c> if this instance is attributed as not collection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.UdtWrapper.HasComment">
            <summary>
            Gets a value indicating whether this instance has comment.
            </summary>
            <value>
            <c>true</c> if this instance has comment; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.UdtWrapper.UnderlyingType">
            <summary>
            Gets the underlying type corresponding to this wrapper.
            </summary>
            <value>The underlying type corresponding to this wrapper.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.UdtWrapper.IsEnum">
            <summary>
            Gets a value indicating whether this instance wraps around an enum.
            </summary>
            <value><c>true</c> if this instance wraps around an enum; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.UdtWrapper.EnumWrapper">
            <summary>
            Gets the enum wrapper, provided that this instance wraps around an enum.
            </summary>
            <value>The enum wrapper, provided that this instance wraps around an enum.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.UdtWrapper.IsNotAllowdNullObjectSerialization">
            <summary>
            Determines whether serialization of null objects is not allowd.
            </summary>
            <returns>
            <c>true</c> if serialization of null objects is not allowd; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Cosmo.Xml.Serialization.UdtWrapper.IsCollectionType">
            <summary>
            Gets a value indicating whether this instance wraps around a collection type.
            </summary>
            <value>
            <c>true</c> if this instance wraps around a collection type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.UdtWrapper.IsDictionaryType">
            <summary>
            Gets a value indicating whether this instance wraps around a dictionary type.
            </summary>
            <value>
            <c>true</c> if this instance wraps around a dictionary type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.UdtWrapper.IsTreatedAsCollection">
            <summary>
            Gets a value indicating whether this instance is treated as collection.
            </summary>
            <value>
            <c>true</c> if this instance is treated as collection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.UdtWrapper.IsTreatedAsDictionary">
            <summary>
            Gets a value indicating whether this instance is treated as dictionary.
            </summary>
            <value>
            <c>true</c> if this instance is treated as dictionary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Cosmo.Xml.Serialization.XMLUtils">
            <summary>
            Provides utility methods for manipulating XML.
            There are four methods for each unit. UnitExists, FindUnit, CanCreateUnit, CreateUnit
            Units are: Location, Element, and Attribute
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.LocationExists(System.Xml.Linq.XElement,System.String)">
            <summary>
            Determines whether the location specified exists in the given XML element.
            </summary>
            <param name="baseElement">The XML element.</param>
            <param name="location">The location string.</param>
            <returns>a value indicating whether the location specified exists in the given XML element</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.FindLocation(System.Xml.Linq.XElement,System.String)">
            <summary>
            Finds the location specified in the given XML element specified.
            </summary>
            <param name="baseElement">The XML element.</param>
            <param name="location">The location string.</param>
            <returns>the XML element corresponding to the specified location, or <c>null</c> if it is not found</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.CanCreateLocation(System.Xml.Linq.XElement,System.String)">
            <summary>
            Determines whether the specified location can be created in the specified XML element.
            </summary>
            <param name="baseElement">The XML element.</param>
            <param name="location">The location string.</param>
            <returns>
            <c>true</c> if the specified location can be created in the specified XML element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.CreateLocation(System.Xml.Linq.XElement,System.String)">
            <summary>
            Creates and returns XML element corresponding to the sepcified location in the given XML element.
            </summary>
            <param name="baseElement">The XML element.</param>
            <param name="location">The location string.</param>
            <returns>XML element corresponding to the sepcified location created in the given XML element</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.AttributeExists(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Determines whether the attribute with the given name located in the given location string exists in the given XML element.
            </summary>
            <param name="baseElement">The XML element.</param>
            <param name="location">The location string.</param>
            <param name="attrName">Name of the attribute.</param>
            <returns>
            a value indicating whether the attribute with the given name located in the given location string exists in the given XML element.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.FindAttribute(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Finds the attribute with the given name located in the given location string in the given XML element.
            </summary>
            <param name="baseElement">The XML element.</param>
            <param name="location">The location string.</param>
            <param name="attrName">Name of the attribute.</param>
            <returns>a value indicating whether the attribute with the given name located in 
            the given location string in the given XML element has been found.</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.CanCreateAttribute(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Determines whether the attribute with the given name can be created in the location 
            specified by the given location string in the given XML element.
            </summary>
            <param name="baseElement">The XML element.</param>
            <param name="location">The location string.</param>
            <param name="attrName">Name of the attribute.</param>
            <returns>
            <c>true</c> if the attribute with the given name can be created in the location 
            specified by the given location string in the given XML element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.CreateAttribute(System.Xml.Linq.XElement,System.String,System.String,System.Object)">
            <summary>
            Creates and returns the attribute with the given name in the location 
            specified by the given location string in the given XML element.
            </summary>
            <param name="baseElement">The XML element.</param>
            <param name="location">The location string.</param>
            <param name="attrName">Name of the attribute.</param>
            <param name="attrValue">The value to be assigned to the attribute.</param>
            <returns>returns the attribute with the given name in the location 
            specified by the given location string in the given XML element.</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.FindElement(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Finds the element with the given name located in the given location string in the given XML element.
            </summary>
            <param name="baseElement">The XML element.</param>
            <param name="location">The location string.</param>
            <param name="elemName">Name of the element.</param>
            <returns>a value indicating whether the element with the given name located in 
            the given location string in the given XML element has been found</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.ElementExists(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Determines whether the XML element with the given name located in the 
            given location string in the given XML element exists.
            </summary>
            <param name="baseElement">The XML element.</param>
            <param name="location">The location string.</param>
            <param name="elemName">Name of the element.</param>
            <returns>a value indicating whether the XML element with the given name located in the 
            given location string in the given XML element exists</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.CanCreateElement(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Determines whether the XML element with the given name located in the 
            given location string in the given XML element can be created
            </summary>
            <param name="baseElement">The XML element.</param>
            <param name="location">The location string.</param>
            <param name="elemName">Name of the element.</param>
            <returns>
            <c>true</c> if the XML element with the given name located in the given 
            location string in the given XML element can be created; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.CreateElement(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Creates and returns the XML element with the given name located in the 
            given location string in the given XML element.
            </summary>
            <param name="baseElement">The parent XML element.</param>
            <param name="location">The location string.</param>
            <param name="elemName">Name of the element to create.</param>
            <returns>returns the XML element with the given name located in the 
            given location string in the given XML element</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.CreateElement(System.Xml.Linq.XElement,System.String,System.String,System.Object)">
            <summary>
            Creates and returns the XML element with the given name located in the 
            given location string in the given XML element.
            </summary>
            <param name="baseElement">The parent XML element.</param>
            <param name="location">The location string.</param>
            <param name="elemName">Name of the element to create.</param>
            <param name="elemValue">The element value to be assigned to the created element.</param>
            <returns>returns the XML element with the given name located in the 
            given location string in the given XML element.</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.MoveDescendants(System.Xml.Linq.XElement,System.Xml.Linq.XElement)">
            <summary>
            Moves all the children of src (including all its elements and attributes) to the 
            destination element, dst.
            </summary>
            <param name="src">The source element.</param>
            <param name="dst">The destination element.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.XMLUtils.IsElementCompletelyEmpty(System.Xml.Linq.XElement)">
            <summary>
            Determines whether the specified element has neither any child attributes nor any child elements.
            </summary>
            <param name="elem">The element.</param>
            <returns>
            <c>true</c> if the specified element has neither any child attributes nor any child elements; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationAttributeAlreadyExistsException">
            <summary>
            Raised when trying to serialize an attribute where 
            another attribute with the same name already exists.
            This exception is raised during serialization.
            </summary>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationException">
            <summary>
            The base for all exception classes of YAXLib
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationException"/> class.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationAttributeAlreadyExistsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationAttributeAlreadyExistsException"/> class.
            </summary>
            <param name="attrName">Name of the attribute.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationAttributeAlreadyExistsException.AttrName">
            <summary>
            Gets the name of the attribute.
            </summary>
            <value>The name of the attribute.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationAttributeAlreadyExistsException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <value></value>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
            </returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationAttributeMissingException">
            <summary>
            Raised when the attribute corresponding to some property is not present in the given XML file, when deserializing.
            This exception is raised during deserialization.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationAttributeMissingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationAttributeMissingException"/> class.
            </summary>
            <param name="attrName">Name of the attribute.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationAttributeMissingException.AttributeName">
            <summary>
            Gets the name of the attribute.
            </summary>
            <value>The name of the attribute.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationAttributeMissingException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <value></value>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
            </returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationBadLocationException">
            <summary>
            Raised when the location of serialization specified cannot be
            created or cannot be read from.
            This exception is raised during serialization and deserialization
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationBadLocationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationBadLocationException"/> class.
            </summary>
            <param name="location">The location.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationBadLocationException.Location">
            <summary>
            Gets or sets the bad location which caused the exception
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationBadLocationException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <value></value>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
            </returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationBadlyFormedInput">
            <summary>
            Raised when the value provided for some property in the XML input, cannot be 
            converted to the type of the property.
            This exception is raised during deserialization.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationBadlyFormedInput.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationBadlyFormedInput"/> class.
            </summary>
            <param name="elemName">Name of the element.</param>
            <param name="badInput">The value of the input which could not be converted to the type of the property.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationBadlyFormedInput.ElementName">
            <summary>
            Gets the name of the element.
            </summary>
            <value>The name of the element.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationBadlyFormedInput.BadInput">
            <summary>
            Gets the value of the input which could not be converted to the type of the property.
            </summary>
            <value>The value of the input which could not be converted to the type of the property.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationBadlyFormedInput.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <value></value>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
            </returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationCannotAddObjectToCollection">
            <summary>
            Raised when some member of the collection in the input XML, cannot be added to the collection object.
            This exception is raised during deserialization.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationCannotAddObjectToCollection.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationCannotAddObjectToCollection"/> class.
            </summary>
            <param name="propName">Name of the property.</param>
            <param name="obj">The object that could not be added to the collection.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationCannotAddObjectToCollection.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationCannotAddObjectToCollection.ObjectToAdd">
            <summary>
            Gets the object that could not be added to the collection.
            </summary>
            <value>the object that could not be added to the collection.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationCannotAddObjectToCollection.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <value></value>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
            </returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationElementMissingException">
            <summary>
            Raised when the element corresponding to some property is not present in the given XML file, when deserializing.
            This exception is raised during deserialization.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationElementMissingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationElementMissingException"/> class.
            </summary>
            <param name="elemName">Name of the element.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationElementMissingException.ElementName">
            <summary>
            Gets or the name of the element.
            </summary>
            <value>The name of the element.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationElementMissingException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <value></value>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
            </returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationDefaultValueCannotBeAssigned">
            <summary>
            Raised when the default value specified by the <c>YAXErrorIfMissedAttribute</c> could not be assigned to the property.
            This exception is raised during deserialization.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationDefaultValueCannotBeAssigned.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationDefaultValueCannotBeAssigned"/> class.
            </summary>
            <param name="propName">Name of the property.</param>
            <param name="defaultValue">The default value which caused the problem.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationDefaultValueCannotBeAssigned.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationDefaultValueCannotBeAssigned.TheDefaultValue">
            <summary>
            Gets the default value which caused the problem.
            </summary>
            <value>The default value which caused the problem.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationDefaultValueCannotBeAssigned.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <value></value>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
            </returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationBadlyFormedXML">
            <summary>
            Raised when the XML input does not follow standard XML formatting rules.
            This exception is raised during deserialization.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationBadlyFormedXML.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationBadlyFormedXML"/> class.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationBadlyFormedXML.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationBadlyFormedXML"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationBadlyFormedXML.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <value></value>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
            </returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationCannotSerializeSelfReferentialTypes">
            <summary>
            Raised when trying to serialize self-referential types. This exception cannot be turned off.
            This exception is raised during deserialization.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationCannotSerializeSelfReferentialTypes.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationCannotSerializeSelfReferentialTypes"/> class.
            </summary>
            <param name="type">The the self-referential type that caused the problem.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationCannotSerializeSelfReferentialTypes.SelfReferentialType">
            <summary>
            Gets the self-referential type that caused the problem.
            </summary>
            <value>The type of the self-referential type that caused the problem.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationCannotSerializeSelfReferentialTypes.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
            </returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationObjectTypeMismatch">
            <summary>
            Raised when the object provided for serialization is not of the type provided for the serializer. This exception cannot be turned off.
            This exception is raised during serialization.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationObjectTypeMismatch.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationObjectTypeMismatch"/> class.
            </summary>
            <param name="expectedType">The expected type.</param>
            <param name="receivedType">The type of the object which did not match the expected type.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationObjectTypeMismatch.ExpectedType">
            <summary>
            Gets the expected type.
            </summary>
            <value>The expected type.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationObjectTypeMismatch.ReceivedType">
            <summary>
            Gets the type of the object which did not match the expected type.
            </summary>
            <value>The type of the object which did not match the expected type.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationObjectTypeMismatch.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
            </returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationInvalidFormatProvided">
            <summary>
            Raised when an object cannot be formatted with the format string provided.
            This exception is raised during serialization.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationInvalidFormatProvided.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationInvalidFormatProvided"/> class.
            </summary>
            <param name="objectType">Type of the fiedl to serialize.</param>
            <param name="format">The format string.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationInvalidFormatProvided.ObjectType">
            <summary>
            Gets the type of the field to serialize
            </summary>
            <value>The type of the field to serialize.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationInvalidFormatProvided.Format">
            <summary>
            Gets the format string.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationInvalidFormatProvided.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
            </returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationParsingErrors">
            <summary>
            Holds list of exception occured during serialization/deserialization.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationParsingErrors.AddException(Cosmo.Xml.Serialization.SerializationException,Cosmo.Xml.Serialization.YAXExceptionTypes)">
            <summary>
            Adds an exception with the corresponding type.
            </summary>
            <param name="exception">The exception to add.</param>
            <param name="exceptionType">Type of the exception added.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationParsingErrors.ClearErrors">
            <summary>
            Clears the list of errors.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationParsingErrors.AddRange(Cosmo.Xml.Serialization.SerializationParsingErrors)">
            <summary>
            Adds the list of errors within another instance of <c>SerializationParsingErrors</c>.
            </summary>
            <param name="parsingErrors">The parsing errors to add its content.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationParsingErrors.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationParsingErrors.ContainsAnyError">
            <summary>
            Gets a value indicating whether the list of errors is empty or not.
            </summary>
            <value><c>true</c> if the list is not empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationParsingErrors.Count">
            <summary>
            Gets the number of errors within the list of errors.
            </summary>
            <value>the number of errors within the list of errors.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationParsingErrors.Item(System.Int32)">
            <summary>
            Gets the the pair of Exception and its corresponding exception-type with the specified n.
            </summary>
            <param name="n">The index of the exception/exception type pair in the error list to return.</param>
            <value></value>
        </member>
        <member name="T:Cosmo.Xml.Serialization.SerializationPropertyCannotBeAssignedTo">
            <summary>
            Raised when the value provided for some property in the XML input, cannot be 
            assigned to the property.
            This exception is raised during deserialization.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.SerializationPropertyCannotBeAssignedTo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.SerializationPropertyCannotBeAssignedTo"/> class.
            </summary>
            <param name="propName">Name of the property.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationPropertyCannotBeAssignedTo.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.SerializationPropertyCannotBeAssignedTo.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <value></value>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
            </returns>
        </member>
        <member name="T:Cosmo.Xml.Serialization.Serializer">
            <summary>
            An XML serialization class which lets developers design the XML file structure and select the exception handling policy.
            This class also supports serializing most of the collection classes such as the Dictionary generic class.
            </summary>
            <remarks>
            Namespace based on code exposed in YAX library (<a href="http://www.codeproject.com/KB/XML/yaxlib.aspx">http://www.codeproject.com/KB/XML/yaxlib.aspx</a>).
            </remarks>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.Serializer"/> class.
            </summary>
            <param name="type">The type of the object being serialized/deserialized.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.#ctor(System.Type,Cosmo.Xml.Serialization.YAXExceptionHandlingPolicies)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.Serializer"/> class.
            </summary>
            <param name="type">The type of the object being serialized/deserialized.</param>
            <param name="exceptionPolicy">The exception handling policy.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.#ctor(System.Type,Cosmo.Xml.Serialization.YAXExceptionHandlingPolicies,Cosmo.Xml.Serialization.YAXExceptionTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.Serializer"/> class.
            </summary>
            <param name="type">The type of the object being serialized/deserialized.</param>
            <param name="exceptionPolicy">The exception handling policy.</param>
            <param name="defaultExType">The exceptions are treated as the value specified, unless otherwise specified.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.#ctor(System.Type,Cosmo.Xml.Serialization.YAXExceptionHandlingPolicies,Cosmo.Xml.Serialization.YAXExceptionTypes,Cosmo.Xml.Serialization.YAXSerializationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Cosmo.Xml.Serialization.Serializer"/> class.
            </summary>
            <param name="t">The type of the object being serialized/deserialized.</param>
            <param name="exceptionPolicy">The exception handling policy.</param>
            <param name="defaultExType">The exceptions are treated as the value specified, unless otherwise specified.</param>
            <param name="option">The serialization option.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.Serialize(System.Object)">
            <summary>
            Serializes the specified object and returns a string containing the XML.
            </summary>
            <param name="obj">The object to serialize.</param>
            <returns>A <code>System.String</code> containing the XML</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.Serialize(System.Object,System.IO.TextWriter)">
            <summary>
            Serializes the specified object into a <c>TextWriter</c> instance.
            </summary>
            <param name="obj">The object to serialize.</param>
            <param name="textWriter">The <c>TextWriter</c> instance.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.Serialize(System.Object,System.Xml.XmlWriter)">
            <summary>
            Serializes the specified object into a <c>XmlWriter</c> instance.
            </summary>
            <param name="obj">The object to serialize.</param>
            <param name="xmlWriter">The <c>XmlWriter</c> instance.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.SerializeToFile(System.Object,System.String)">
            <summary>
            Serializes the specified object to file.
            </summary>
            <param name="obj">The object to serialize.</param>
            <param name="fileName">Path to the file.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.Deserialize(System.String)">
            <summary>
            Deserializes the specified string containing the XML serialization and returns an object.
            </summary>
            <param name="input">The input string containing the XML serialization.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.Deserialize(System.Xml.XmlReader)">
            <summary>
            Deserializes an object while reading input from an instance of <c>XmlReader</c>.
            </summary>
            <param name="xmlReader">The <c>XmlReader</c> instance to read input from.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.Deserialize(System.IO.TextReader)">
            <summary>
            Deserializes an object while reading input from an instance of <c>TextReader</c>.
            </summary>
            <param name="textReader">The <c>TextReader</c> instance to read input from.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.DeserializeFromFile(System.String)">
            <summary>
            Deserializes an object from the specified file which contains the XML serialization of the object.
            </summary>
            <param name="fileName">Path to the file.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.SetDeserializationBaseObject(System.Object)">
            <summary>
            Sets the object used as the base object in the next stage of deserialization.
            This method enables multi-stage deserialization for YAXLib.
            </summary>
            <param name="obj">The object used as the base object in the next stage of deserialization.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.CleanUpAuxiliaryMemory">
            <summary>
            Cleans up auxiliary memory used by YAXLib during different sessions of serialization.
            </summary>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.SerializeXDocument(System.Object)">
            <summary>
            Serializes the object into an <c>XDocument</c> object.
            </summary>
            <param name="obj">The object to serialize.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.SerializeBase(System.Object)">
            <summary>
            One of the base methods that perform the whole job of serialization.
            </summary>
            <param name="obj">The object to be serialized</param>
            <returns>an instance of <c>XElement</c> which contains the result of 
            serialization of the specified object</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.SetBaseElement(System.Xml.Linq.XElement)">
            <summary>
            Sets the base XML element. This method is used when an <c>XMLSerializer</c>
            instantiates another <c>XMLSerializer</c> to serialize nested objects.
            Through this method the child objects have access to the already serialized elements of 
            their parent.
            </summary>
            <param name="baseElement">The base XML element.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.SerializeBase(System.Object,System.String)">
            <summary>
            The base method that performs the whole job of serialization. 
            Other serialization methods call this method to have their job done.
            </summary>
            <param name="obj">The object to be serialized</param>
            <param name="className">Name of the element that contains the serialized object.</param>
            <returns>an instance of <c>XElement</c> which contains the result of 
            serialization of the specified object</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.MakeElement(System.Xml.Linq.XElement,Cosmo.Xml.Serialization.MemberWrapper,System.Object,System.Boolean@,System.Boolean@)">
            <summary>
            Makes the element corresponding to the member specified.
            </summary>
            <param name="insertionLocation">The insertion location.</param>
            <param name="member">The member to serialize.</param>
            <param name="elementValue">The element value.</param>
            <param name="moveDescOnly">if set to <c>true</c> specifies that only the descendants of the resulting element should be added to the parent.</param>
            <param name="alreadyAdded">if set to <c>true</c> specifies the element returned is 
            already added to the parent element and should not be added once more.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.MakeDictionaryElement(System.Xml.Linq.XElement,System.String,System.Object,Cosmo.Xml.Serialization.DictionaryAttribute,Cosmo.Xml.Serialization.CollectionAttribute)">
            <summary>
            Creates a dictionary element according to the specified options, as described
            by the attribute instances.
            </summary>
            <param name="insertionLocation">The insertion location.</param>
            <param name="elementName">Name of the element.</param>
            <param name="elementValue">The element value, corresponding to a dictionary object.</param>
            <param name="dicAttrInst">reference to the dictionary attribute instance.</param>
            <param name="collectionAttrInst">reference to collection attribute instance.</param>
            <returns>
            an instance of <c>XElement</c> which contains the dictionary object
            serialized properly
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.AddObjectToElement(System.Xml.Linq.XElement,System.String,System.Object)">
            <summary>
            Adds an element contatining data related to the specified object, to an existing xml element.
            </summary>
            <param name="elem">The parent element.</param>
            <param name="alias">The name for the element to be added.</param>
            <param name="obj">The object corresponding to which an element is going to be added to
            an existing parent element.</param>
            <returns>the enclosing XML element.</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.MakeCollectionElement(System.Xml.Linq.XElement,System.String,System.Object,Cosmo.Xml.Serialization.CollectionAttribute,System.String)">
            <summary>
            Serializes a collection object.
            </summary>
            <param name="insertionLocation">The insertion location.</param>
            <param name="elementName">Name of the element.</param>
            <param name="elementValue">The object to be serailized.</param>
            <param name="collectionAttrInst">The collection attribute instance.</param>
            <param name="format">formatting string, which is going to be applied to all members of the collection.</param>
            <returns>
            an instance of <c>XElement</c> which will contain the serailized collection
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.MakeBaseElement(System.Xml.Linq.XElement,System.String,System.Object,System.Boolean@)">
            <summary>
            Makes an XML element with the specified name, corresponding to the object specified.
            </summary>
            <param name="insertionLocation">The insertion location.</param>
            <param name="name">The name of the element.</param>
            <param name="value">The object to be serialized in an XML element.</param>
            <param name="alreadyAdded">if set to <c>true</c> specifies the element returned is 
            already added to the parent element and should not be added once more.</param>
            <returns>
            an instance of <c>XElement</c> which will contain the serialized object,
            or <c>null</c> if the serialized object is already added to the base element
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.DeserializeBase(System.Xml.Linq.XElement)">
            <summary>
            The basic method which performs the whole job of deserialization.
            </summary>
            <param name="baseElement">The element to be deserialized.</param>
            <returns>object containing the deserialized data</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.AtLeastOneOfCollectionMembersExists(System.Xml.Linq.XElement,Cosmo.Xml.Serialization.MemberWrapper)">
            <summary>
            Checks whether at least one of the collection memebers of 
            the specified collection exists.
            </summary>
            <param name="elem">The XML element to check its content.</param>
            <param name="member">The class-member corresponding to the collection for
            which we intend to check existence of its members.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.AtLeastOneOfMembersExists(System.Xml.Linq.XElement,System.Type)">
            <summary>
            Checks whether at least one of the memebers (property or field) of 
            the specified object exists.
            </summary>
            <param name="elem">The XML element to check its content.</param>
            <param name="type">The class-member corresponding to the object for
            which we intend to check existence of its members.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.RetreiveElementValue(System.Object,Cosmo.Xml.Serialization.MemberWrapper,System.String,System.Xml.Linq.XElement)">
            <summary>
            Retreives the value of the element from the specified XML element or attribute.
            </summary>
            <param name="o">The object to store the retrieved value at.</param>
            <param name="member">The member of the specified object whose value we intent to retreive.</param>
            <param name="elemValue">The value of the element stored as string.</param>
            <param name="xelemValue">The XML element value to be retreived. If the value to be retreived
            has been stored in an XML attribute, this reference is <c>null</c>.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.DeserializeCollectionValue(System.Type,System.Xml.Linq.XElement,System.String,Cosmo.Xml.Serialization.CollectionAttribute)">
            <summary>
            Retreives the collection value.
            </summary>
            <param name="colType">Type of the collection to be retrieved.</param>
            <param name="xelemValue">The value of xml element.</param>
            <param name="memberAlias">The member's alias, used only in exception titles.</param>
            <param name="colAttrInstance">The collection attribute instance.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.DeserializeCollectionMember(System.Object,Cosmo.Xml.Serialization.MemberWrapper,System.Type,System.String,System.Xml.Linq.XElement)">
            <summary>
            Deserializes the collection member.
            </summary>
            <param name="o">The object to store the retrieved value at.</param>
            <param name="member">The member of the specified object whose value we intent to retreive.</param>
            <param name="colType">Type of the collection to be retrieved.</param>
            <param name="elemValue">The value of the element stored as string.</param>
            <param name="xelemValue">The XML element value to be retreived. If the value to be retreived
            has been stored in an XML attribute, this reference is <c>null</c>.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.GetArrayDimentionalIndex(System.Int64,System.Int32[])">
            <summary>
            Gets the dimensional index for an element of a multi-dimensional array from a
            linear index specified. 
            </summary>
            <param name="linInd">The linear index.</param>
            <param name="dims">The dimensions of the array.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.DeserializeTaggedDictionaryMember(System.Object,Cosmo.Xml.Serialization.MemberWrapper,System.Type,System.Xml.Linq.XElement)">
            <summary>
            Deserializes a dictionary member which also benefits from a YAXDictionary attribute
            </summary>
            <param name="o">The object to hold the deserialized value.</param>
            <param name="member">The member corresponding to the dictionary member.</param>
            <param name="memberType">Type of the dictionary member.</param>
            <param name="xelemValue">The XML element value.</param>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.VerifyDictionaryPairElements(System.Type@,System.Boolean@,System.String,System.Xml.Linq.XElement)">
            <summary>
            Verifies the existence of dictionary pair <c>Key</c> and <c>Value</c> elements.
            </summary>
            <param name="keyType">Type of the key.</param>
            <param name="isKeyAttrib">if set to <c>true</c> means that key has been serialize as an attribute.</param>
            <param name="keyAlias">The alias for <c>Key</c>.</param>
            <param name="childElem">The child XML elemenet to search <c>Key</c> and <c>Value</c> elements in.</param>
            <returns></returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.DeserializeKeyValuePair(System.Xml.Linq.XElement)">
            <summary>
            Deserializes the XML reperesentation of a key-value pair, as specified, and returns 
            a <c>KeyValuePair</c> instance containing the deserialized data.
            </summary>
            <param name="baseElement">The element contating the XML reperesentation of a key-value pair.</param>
            <returns>a <c>KeyValuePair</c> instance containing the deserialized data</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.DeserializeKnownDotNetBuiltInType(System.Xml.Linq.XElement,System.Type)">
            <summary>
            Deserializes XML for some known .NET built in type.
            </summary>
            <param name="baseElement">The XML element to deserialize.</param>
            <param name="type">The type of the desired object.</param>
            <returns>deserialized object of some known .NET built-in type</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.IsKnownDotNetBuiltInType(System.Type)">
            <summary>
            Determines whether the specified type is a known .NET built-in type.
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            	<c>true</c> if the specified type is a known .NET built-in type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.GetFieldsToBeSerialized(Cosmo.Xml.Serialization.UdtWrapper)">
            <summary>
            Gets the sequence of fields to be serialized for the specified type. This sequence is retreived according to 
            the field-types specified by the user.
            </summary>
            <param name="typeWrapper">The type wrapper for the type whose serializable 
            fields is going to be retreived.</param>
            <returns>the sequence of fields to be serialized for the specified type</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.GetFieldsToBeSerialized">
            <summary>
            Gets the sequence of fields to be serialized for the serializer's underlying type. 
            This sequence is retreived according to the field-types specified by the user.
            </summary>
            <returns>the sequence of fields to be serialized for the serializer's underlying type.</returns>
        </member>
        <member name="M:Cosmo.Xml.Serialization.Serializer.OnExceptionOccurred(Cosmo.Xml.Serialization.SerializationException,Cosmo.Xml.Serialization.YAXExceptionTypes)">
            <summary>
            Called when an exception occurs inside the library. It applies the exception handling policies.
            </summary>
            <param name="ex">The exception that has occurred.</param>
            <param name="exceptionType">Type of the exception.</param>
        </member>
        <member name="P:Cosmo.Xml.Serialization.Serializer.DefaultExceptionType">
            <summary>
            Gets the default type of the exception.
            </summary>
            <value>The default type of the exception.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.Serializer.SerializationOption">
            <summary>
            Gets the serialization option.
            </summary>
            <value>The serialization option.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.Serializer.ExceptionHandlingPolicy">
            <summary>
            Gets the exception handling policy.
            </summary>
            <value>The exception handling policy.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.Serializer.ParsingErrors">
            <summary>
            Gets the parsing errors.
            </summary>
            <value>The parsing errors.</value>
        </member>
        <member name="P:Cosmo.Xml.Serialization.Serializer.IsCraetedToDeserializeANonCollectionMember">
            <summary>
            Gets or sets a value indicating whether this instance is craeted to deserialize a non collection member of another object.
            </summary>
            <value>
            <c>true</c> if this instance is craeted to deserialize a non collection member of another object; otherwise, <c>false</c>.
            </value>
        </member>
    </members>
</doc>
